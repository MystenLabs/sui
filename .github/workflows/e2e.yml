name: End-to-end Tests
on: pull_request
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  diff:
    runs-on: ubuntu-latest
    outputs:
      isWallet: ${{ (steps.turbo.outputs.packages && contains(fromJson(steps.turbo.outputs.packages), 'sui-wallet')) }}
      isTypescriptSDK: ${{ (steps.turbo.outputs.packages && contains(fromJson(steps.turbo.outputs.packages), '@mysten/sui')) }}
      isGraphQlTransport: ${{ (steps.turbo.outputs.packages && contains(fromJson(steps.turbo.outputs.packages), '@mysten/graphql-transport')) }}
      isRust: ${{ steps.diff.outputs.isRust }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # Pin v4.1.1
      - name: Detect Changes (turbo)
        uses: './.github/actions/turbo-diffs'
        id: turbo
      - name: Detect Changes (diff)
        uses: './.github/actions/diffs'
        id: diff

  # Run e2e test against localnet built on the main branch
  localnet:
    name: Localnet
    needs: diff
    if: needs.diff.outputs.isTypescriptSDK == 'true' || needs.diff.outputs.isWallet == 'true' || needs.diff.outputs.isRust == 'true'
    runs-on: ubuntu-ghcloud
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespw
          POSTGRES_DB: sui_indexer_v2
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # Pin v4.1.1
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-on-failure: true
      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # pin@v3.0.0
        with:
          version: 9.1.1
      - run: cargo build --bin sui --profile dev
      - name: Install Nodejs
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # pin@v4.0.2
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      # - name: Install Playwright Browsers
      #   run: pnpm --filter sui-wallet playwright install --with-deps chromium

      - name: Set env
        run: |
          echo "VITE_SUI_BIN=$PWD/target/debug/sui" >> $GITHUB_ENV
          echo "E2E_RUN_LOCAL_NET_CMD=(RUST_LOG=warn RUST_BACKTRACE=1 $(echo $PWD/target/debug/sui) start --with-faucet --force-regenesis --with-indexer --pg-port 5432 --pg-db-name sui_indexer_v2 --with-graphql)" >> $GITHUB_ENV

      - name: Run TS SDK e2e tests
        if: ${{ needs.diff.outputs.isTypescriptSDK == 'true' || needs.diff.outputs.isRust == 'true'}}
        run: pnpm dlx concurrently --kill-others --success command-1 "$E2E_RUN_LOCAL_NET_CMD" 'pnpm --filter @mysten/sui test:e2e'

      - name: Run RPC/GrpahQL comaptability e2e tests
        if: ${{ needs.diff.outputs.isGraphQlTransport == 'true' || needs.diff.outputs.isRust == 'true'}}
        run: pnpm dlx concurrently --kill-others --success command-1 "$E2E_RUN_LOCAL_NET_CMD" 'pnpm --filter @mysten/graphql-transport test:e2e'

      # - name: Run Local net
      #   run: cargo run --bin sui -- start --with-faucet --force-regenesis --epoch-duration-ms 10000 &
      # - name: Set Wallet env
      #   run: echo "API_ENV=local" > "$PWD/apps/wallet/configs/environment/.env"
      # - name: Build Wallet
      #   # need to run Wallet e2e when its upstream(TS SDK and Rust) or itself is changed
      #   if: ${{ needs.diff.outputs.isWallet == 'true' || needs.diff.outputs.isRust == 'true' || needs.diff.outputs.isTypescriptSDK == 'true'}}
      #   run: pnpm wallet build
      # - name: Run Wallet e2e tests
      #   if: ${{ needs.diff.outputs.isWallet == 'true' || needs.diff.outputs.isRust == 'true' || needs.diff.outputs.isTypescriptSDK == 'true'}}
      #   run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- pnpm --filter sui-wallet playwright test
      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: playwright-report-wallet
      #     path: apps/wallet/playwright-report/
      #     retention-days: 30

  # Run e2e test against localnet built on the devnet branch for backward compatibility check
  local_devnet_branch:
    name: Local Network Built on devnet branch
    needs: diff
    if: needs.diff.outputs.isTypescriptSDK == 'true'
    runs-on: ubuntu-ghcloud
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespw
          POSTGRES_DB: sui_indexer_v2
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # Pin v4.1.1
      - name: Run E2E Test Runner with devnet branch
        uses: './.github/actions/ts-e2e'
        with:
          ref: devnet

  # Run e2e test against localnet built on the Testnet branch for backward compatibility check
  local_testnet_branch:
    name: Local Network Built on testnet branch
    needs: diff
    if: needs.diff.outputs.isTypescriptSDK == 'true'
    runs-on: ubuntu-ghcloud
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespw
          POSTGRES_DB: sui_indexer_v2
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # Pin v4.1.1
      - name: Run E2E Test Runner with testnet branch
        uses: './.github/actions/ts-e2e'
        with:
          ref: testnet
