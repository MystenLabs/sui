name: üîî Alert on upstream sui.yaml change

on:
  push:
    branches:
      - feature-fix-duplicate-alert
  schedule:
    - cron: "0 0 * * *" 
  workflow_dispatch:

jobs:
  alert-on-change:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Add & Fetch Upstream
        run: |
          git remote add upstream https://github.com/MystenLabs/sui.git || true
          git fetch upstream main

      - name: Restore previous commit hash from cache
        id: restore_cache
        uses: actions/cache/restore@v3
        with:
          path: .last_file_commit
          key: sui-yaml-commit-${{ github.run_id }}
          restore-keys: sui-yaml-commit-

      - name: Get last commit affecting sui.yaml
        id: get_commit
        run: |
          last_commit=$(git log -n 1 --pretty=format:'%H' upstream/main -- crates/sui-core/tests/staged/sui.yaml)
          echo "LAST_COMMIT=$last_commit" >> $GITHUB_ENV
          echo "Last commit: $last_commit"

      - name: Compare with previous commit
        id: check_change
        run: |
          prev_commit=$(cat .last_file_commit 2>/dev/null || echo "")
          echo "Previous commit: $prev_commit"
          echo "Current commit: $LAST_COMMIT"
          
          if [ "$LAST_COMMIT" != "$prev_commit" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Change detected! Updating commit hash..."
            echo "$LAST_COMMIT" > .last_file_commit
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No change detected."
          fi

      - name: Prepare Alert Message
        if: steps.check_change.outputs.changed == 'true'
        id: prepare_alert
        run: |
          commit_hash=$LAST_COMMIT
          commit_author=$(git log -1 --pretty=format:'%an' $commit_hash)
          commit_msg=$(git log -1 --pretty=format:'%s' $commit_hash)
          commit_url="https://github.com/MystenLabs/sui/commit/${commit_hash}"
          slack_mentions="<@U096HQGCCBV> <@U0839EP9DHA> <@U02HSBFJL5R>"
          
          # Store values in environment for next step
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR=$commit_author" >> $GITHUB_ENV
          echo "COMMIT_MSG=$commit_msg" >> $GITHUB_ENV
          echo "COMMIT_URL=$commit_url" >> $GITHUB_ENV
          echo "SLACK_MENTIONS=$slack_mentions" >> $GITHUB_ENV

      - name: Test Alert Output
        if: steps.check_change.outputs.changed == 'true'
        run: |
          echo "=== ALERT TEST OUTPUT ==="
          echo "üìã Alert would be sent for the following change:"
          echo ""
          echo "üîπ Commit Hash: $COMMIT_HASH"
          echo "üîπ Author: $COMMIT_AUTHOR"
          echo "üîπ Message: $COMMIT_MSG"
          echo "üîπ URL: $COMMIT_URL"
          echo "üîπ Mentions: $SLACK_MENTIONS"
          echo ""
          echo "üìù Full Slack Message Preview:"
          echo "----------------------------------------"
          echo "üö® *sui.yaml was updated in upstream!*"
          echo "‚Ä¢ Commit: *<$COMMIT_URL|$COMMIT_HASH>*"
          echo "‚Ä¢ Author: $COMMIT_AUTHOR"
          echo "‚Ä¢ Message: $COMMIT_MSG"
          echo "$SLACK_MENTIONS"
          echo "----------------------------------------"
          echo ""
          echo "‚úÖ Alert test completed. Ready to send to Slack!"

      # - name: Send Slack Alert
      #   if: steps.check_change.outputs.changed == 'true'
      #   run: |
      #     response=$(curl -w "%{http_code}" -s -X POST -H 'Content-type: application/json' \
      #       --data "{\"text\":\"üö® *sui.yaml was updated in upstream!*\n‚Ä¢ Commit: *<${COMMIT_URL}|${COMMIT_HASH}>*\n‚Ä¢ Author: ${COMMIT_AUTHOR}\n‚Ä¢ Message: ${COMMIT_MSG}\n${SLACK_MENTIONS}\"}" \
      #       ${{ secrets.SLACK_ALERT_NOODLES_WEBHOOK }})
          
      #     if [ "${response: -3}" = "200" ]; then
      #       echo "‚úÖ Slack notification sent successfully"
      #     else
      #       echo "‚ùå Failed to send Slack notification. Response: $response"
      #       exit 1
      #     fi

      - name: Save commit hash to cache
        if: steps.check_change.outputs.changed == 'true'
        uses: actions/cache/save@v3
        with:
          path: .last_file_commit
          key: sui-yaml-commit-${{ github.run_id }}