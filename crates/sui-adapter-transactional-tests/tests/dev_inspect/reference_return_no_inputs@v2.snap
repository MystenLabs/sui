---
source: external-crates/move/crates/move-transactional-test-runner/src/framework.rs
---
processed 6 tasks

init:
A: object(0,0)

task 1, lines 8-29:
//# publish
created: object(1,0)
mutated: object(0,1)
gas summary: computation_cost: 1000000, storage_cost: 5137600,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2, lines 32-35:
//# programmable
// This should be allowed and should abort
//> 0: test::m::pair_mut();
//> test::m::increment(Result(0));
Error: Transaction Effects Status: Move Runtime Abort. Location: test::m::pair_mut (function index 0) at offset 1, Abort Code: 0
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: MoveAbort(MoveLocation { module: ModuleId { address: test, name: Identifier("m") }, function: 0, instruction: 1, function_name: Some("pair_mut") }, 0), source: Some(VMError { major_status: ABORTED, sub_status: Some(0), message: Some("test::m::pair_mut at offset 1"), exec_state: None, location: Module(ModuleId { address: test, name: Identifier("m") }), indices: [], offsets: [(FunctionDefinitionIndex(0), 1)] }), command: Some(0) } }

task 3, lines 37-43:
//# programmable
// This should be allowed and should abort
//> 0: test::m::box_mut();
//> test::m::increment(NestedResult(0,0));
//> test::m::increment(NestedResult(0,1));
//> test::m::increment(NestedResult(0,0));
//> test::m::swap_x(NestedResult(0,0), NestedResult(0,1));
Error: Transaction Effects Status: Move Runtime Abort. Location: test::m::box_mut (function index 1) at offset 1, Abort Code: 1
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: MoveAbort(MoveLocation { module: ModuleId { address: test, name: Identifier("m") }, function: 1, instruction: 1, function_name: Some("box_mut") }, 1), source: Some(VMError { major_status: ABORTED, sub_status: Some(1), message: Some("test::m::box_mut at offset 1"), exec_state: None, location: Module(ModuleId { address: test, name: Identifier("m") }), indices: [], offsets: [(FunctionDefinitionIndex(1), 1)] }), command: Some(0) } }

task 4, lines 45-48:
//# programmable
// This should be rejected by the borrow checker (in static PTBs)
//> 0: test::m::pair_mut();
//> test::m::swap_x(Result(0), Result(0));
Error: Transaction Effects Status: Invalid command argument at 1. The argument specified cannot be used as a reference argument in the Move call. Either the argument is a mutable reference and it conflicts with another argument to the call, or the argument is mutable and another reference extends it and will be used in a later command.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: CommandArgumentError { arg_idx: 1, kind: InvalidReferenceArgument }, source: None, command: Some(1) } }

task 5, lines 50-53:
//# programmable
// This should be rejected by the borrow checker (in static PTBs)
//> 0: test::m::box_mut();
//> test::m::swap_x(NestedResult(0,0), NestedResult(0,0));
Error: Transaction Effects Status: Invalid command argument at 1. The argument specified cannot be used as a reference argument in the Move call. Either the argument is a mutable reference and it conflicts with another argument to the call, or the argument is mutable and another reference extends it and will be used in a later command.
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: CommandArgumentError { arg_idx: 1, kind: InvalidReferenceArgument }, source: None, command: Some(1) } }
