---
source: external-crates/move/crates/move-transactional-test-runner/src/framework.rs
---
processed 7 tasks

init:
A: object(0,0)

task 1, lines 8-50:
//# publish
created: object(1,0)
mutated: object(0,1)
gas summary: computation_cost: 1000000, storage_cost: 6429600,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2, lines 52-57:
//# programmable --dev-inspect
// transfer parent with child
//> 0: test::m::pair();
//> 1: test::m::borrow_x_mut(Result(0));
//> 2: test::m::write_pair(Result(0));
//> 3: test::m::write_u64(Result(1));
Error: Transaction Effects Status: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 2
Execution Error: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 2

task 3, lines 59-65:
//# programmable --dev-inspect
// borrow parent, transfer parent with child
//> 0: test::m::pair();
//> 1: test::m::borrow_mut<test::m::Pair>(Result(0));
//> 2: test::m::borrow_x_mut(Result(1));
//> 3: test::m::write_pair(Result(1));
//> 4: test::m::write_u64(Result(2));
Error: Transaction Effects Status: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 3
Execution Error: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 3

task 4, lines 67-73:
//# programmable --dev-inspect
// transfer parent with children
//> 0: test::m::pair();
//> 1: test::m::borrow_x_y_mut(Result(0));
//> 2: test::m::write_pair(Result(0));
//> 3: test::m::write_u64(NestedResult(1,0));
//> 4: test::m::write_u64(NestedResult(1,1));
Error: Transaction Effects Status: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 2
Execution Error: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 2

task 5, lines 75-81:
//# programmable --dev-inspect
// transfer parent with child, one was released
//> 0: test::m::pair();
//> 1: test::m::borrow_x_y_mut(Result(0));
//> 2: test::m::write_u64(NestedResult(1,0));
//> 3: test::m::write_pair(Result(0));
//> 4: test::m::write_u64(NestedResult(1,1));
Error: Transaction Effects Status: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 3
Execution Error: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 3

task 6, lines 83-90:
//# programmable --dev-inspect
// write to parent with imm child, mut was released
//> 0: test::m::pair();
//> 1: test::m::borrow_x_mut_y_imm(Result(0));
//> 2: test::m::write_u64(NestedResult(1,0));
//> 3: test::m::use_ref<u64>(NestedResult(1,1));
//> 4: test::m::write_pair(Result(0));
//> 5: test::m::use_ref<u64>(NestedResult(1,1));
Error: Transaction Effects Status: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 4
Execution Error: CommandArgumentError { arg_idx: 0, kind: InvalidReferenceArgument } in command 4
