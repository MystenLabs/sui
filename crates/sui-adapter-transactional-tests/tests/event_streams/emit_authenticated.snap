---
source: external-crates/move/crates/move-transactional-test-runner/src/framework.rs
---
processed 14 tasks

init:
A: object(0,0), B: object(0,1)

task 1, lines 8-23:
//# publish
created: object(1,0)
mutated: object(0,2)
gas summary: computation_cost: 1000000, storage_cost: 4909600,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2, line 25:
//# run test::event_streams::emit_event --sender A --args 10
events: Event { package_id: test, transaction_module: Identifier("event_streams"), sender: A, type_: StructTag { address: test, module: Identifier("event_streams"), name: Identifier("AuthEvent"), type_params: [] }, contents: [10, 0, 0, 0, 0, 0, 0, 0] }
mutated: object(0,0)
accumulators_written: fake(2,0)
gas summary: computation_cost: 1000000, storage_cost: 988000,  storage_rebate: 0, non_refundable_storage_fee: 0

task 3, line 27:
//# create-checkpoint
Checkpoint created: 1

task 4, lines 29-31:
//# view-object 2,0
Owner: Object ID: ( _ )
Version: 2
Contents: sui::dynamic_field::Field<sui::accumulator::Key<sui::accumulator_settlement::EventStreamHead>, sui::accumulator_settlement::EventStreamHead> {
    id: sui::object::UID {
        id: sui::object::ID {
            bytes: fake(2,0),
        },
    },
    name: sui::accumulator::Key<sui::accumulator_settlement::EventStreamHead> {
        address: test,
    },
    value: sui::accumulator_settlement::EventStreamHead {
        mmr: vector[
            18303917074361336946698993234536050700134299586949299936328069228041812542634u256,
        ],
        checkpoint_seq: 0u64,
        num_events: 1u64,
    },
}

task 5, line 32:
//# run test::event_streams::emit_event --sender A --args 20
events: Event { package_id: test, transaction_module: Identifier("event_streams"), sender: A, type_: StructTag { address: test, module: Identifier("event_streams"), name: Identifier("AuthEvent"), type_params: [] }, contents: [20, 0, 0, 0, 0, 0, 0, 0] }
mutated: object(0,0)
accumulators_written: fake(2,0)
gas summary: computation_cost: 1000000, storage_cost: 988000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 6, line 34:
//# create-checkpoint
Checkpoint created: 2

task 7, lines 36-38:
//# view-object 2,0
Owner: Object ID: ( _ )
Version: 3
Contents: sui::dynamic_field::Field<sui::accumulator::Key<sui::accumulator_settlement::EventStreamHead>, sui::accumulator_settlement::EventStreamHead> {
    id: sui::object::UID {
        id: sui::object::ID {
            bytes: fake(2,0),
        },
    },
    name: sui::accumulator::Key<sui::accumulator_settlement::EventStreamHead> {
        address: test,
    },
    value: sui::accumulator_settlement::EventStreamHead {
        mmr: vector[
            0u256,
            29810830933555599370216278631654329841668533619019360791749163046343675723088u256,
        ],
        checkpoint_seq: 0u64,
        num_events: 2u64,
    },
}

task 8, line 39:
//# run test::event_streams::emit_event --sender A --args 30
events: Event { package_id: test, transaction_module: Identifier("event_streams"), sender: A, type_: StructTag { address: test, module: Identifier("event_streams"), name: Identifier("AuthEvent"), type_params: [] }, contents: [30, 0, 0, 0, 0, 0, 0, 0] }
mutated: object(0,0)
accumulators_written: fake(2,0)
gas summary: computation_cost: 1000000, storage_cost: 988000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 9, line 41:
//# create-checkpoint
Checkpoint created: 3

task 10, lines 43-45:
//# view-object 2,0
Owner: Object ID: ( _ )
Version: 4
Contents: sui::dynamic_field::Field<sui::accumulator::Key<sui::accumulator_settlement::EventStreamHead>, sui::accumulator_settlement::EventStreamHead> {
    id: sui::object::UID {
        id: sui::object::ID {
            bytes: fake(2,0),
        },
    },
    name: sui::accumulator::Key<sui::accumulator_settlement::EventStreamHead> {
        address: test,
    },
    value: sui::accumulator_settlement::EventStreamHead {
        mmr: vector[
            11044591306729393610957271521269526835275561033229993572619396699119418261920u256,
            29810830933555599370216278631654329841668533619019360791749163046343675723088u256,
        ],
        checkpoint_seq: 0u64,
        num_events: 3u64,
    },
}

task 11, line 46:
//# run test::event_streams::emit_event --sender A --args 40
events: Event { package_id: test, transaction_module: Identifier("event_streams"), sender: A, type_: StructTag { address: test, module: Identifier("event_streams"), name: Identifier("AuthEvent"), type_params: [] }, contents: [40, 0, 0, 0, 0, 0, 0, 0] }
mutated: object(0,0)
accumulators_written: fake(2,0)
gas summary: computation_cost: 1000000, storage_cost: 988000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 12, line 48:
//# create-checkpoint
Checkpoint created: 4

task 13, lines 50-55:
//# view-object 2,0
Owner: Object ID: ( _ )
Version: 5
Contents: sui::dynamic_field::Field<sui::accumulator::Key<sui::accumulator_settlement::EventStreamHead>, sui::accumulator_settlement::EventStreamHead> {
    id: sui::object::UID {
        id: sui::object::ID {
            bytes: fake(2,0),
        },
    },
    name: sui::accumulator::Key<sui::accumulator_settlement::EventStreamHead> {
        address: test,
    },
    value: sui::accumulator_settlement::EventStreamHead {
        mmr: vector[
            0u256,
            0u256,
            99861683810580454253732552928243500450848817450709555262950503442301355732136u256,
        ],
        checkpoint_seq: 0u64,
        num_events: 4u64,
    },
}
