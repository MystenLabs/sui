---
source: external-crates/move/crates/move-transactional-test-runner/src/framework.rs
---
processed 6 tasks

init:
A: object(0,0)

task 1, lines 8-43:
//# publish
created: object(1,0)
mutated: object(0,1)
gas summary: computation_cost: 1000000, storage_cost: 7508800,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2, lines 44-53:
//# programmable --inputs 0u8
//> test::m1::modify_u8(Input(0));
//> test::m1::modify_ascii(Input(0));
//> test::m1::modify_string(Input(0));
//> test::m1::assert_u8(Input(0));
//> test::m1::assert_ascii(Input(0));
//> test::m1::assert_string(Input(0));
// Tests that locals of the same type are distinct even if they are the same value+type
// This should abort
Error: Transaction Effects Status: Invalid command argument at 0. The type of the value does not match the expected type
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: CommandArgumentError { arg_idx: 0, kind: TypeMismatch }, source: None, command: Some(1) } }

task 3, lines 54-58:
//# programmable --inputs 0u8 0u8
//> test::m1::modify_u8(Input(0));
//> test::m1::assert_string(Input(1));
// In statically checked PTBs, tests that each type can be borrowed mutably separately
Error: Transaction Effects Status: Move Runtime Abort. Location: test::m1::assert_string (function index 6) at offset 11, Abort Code: 13906834324667236351
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: MoveAbort(MoveLocation { module: ModuleId { address: test, name: Identifier("m1") }, function: 6, instruction: 11, function_name: Some("assert_string") }, 13906834324667236351), source: Some(VMError { major_status: ABORTED, sub_status: Some(13906834324667236351), message: Some("test::m1::assert_string at offset 11"), exec_state: None, location: Module(ModuleId { address: test, name: Identifier("m1") }), indices: [], offsets: [(FunctionDefinitionIndex(6), 11)] }), command: Some(1) } }

task 4, lines 59-63:
//# programmable --inputs 0u8 --dev-inspect
//> 0: test::m1::borrow_mut<u8>(Input(0));
//> 1: test::m1::borrow_mut<std::ascii::String>(Input(0));
//> test::m1::modify_ascii(Result(1));
//> test::m1::modify_u8(Result(0));
Error: Transaction Effects Status: CommandArgumentError { arg_idx: 0, kind: TypeMismatch } in command 1
Execution Error: CommandArgumentError { arg_idx: 0, kind: TypeMismatch } in command 1

task 5, lines 65-69:
//# programmable --inputs 0u8 --dev-inspect
//> 0: test::m1::borrow_mut<u8>(Input(0));
//> 1: test::m1::borrow_mut<std::ascii::String>(Input(0));
//> test::m1::modify_u8(Result(0));
//> test::m1::modify_ascii(Result(1));
Error: Transaction Effects Status: CommandArgumentError { arg_idx: 0, kind: TypeMismatch } in command 1
Execution Error: CommandArgumentError { arg_idx: 0, kind: TypeMismatch } in command 1
