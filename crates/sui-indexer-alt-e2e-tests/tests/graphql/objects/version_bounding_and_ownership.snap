---
source: external-crates/move/crates/move-transactional-test-runner/src/framework.rs
---
processed 22 tasks

init:
A: object(0,0)

task 1, lines 24-27:
//# programmable --sender A --inputs 100
//> 0: SplitCoins(Gas, [Input(0)]);
//> 1: sui::object::id_address<sui::coin::Coin<sui::sui::SUI>>(Gas);
//> 2: TransferObjects([Result(0)], Result(1))
created: object(1,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 1976000,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2, lines 29-32:
//# programmable --sender A --inputs 200
//> 0: SplitCoins(Gas, [Input(0)]);
//> 1: sui::object::id_address<sui::coin::Coin<sui::sui::SUI>>(Gas);
//> 2: TransferObjects([Result(0)], Result(1))
created: object(2,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 1976000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 3, line 34:
//# create-checkpoint
Checkpoint created: 1

task 4, lines 36-39:
//# programmable --sender A --inputs 300
//> 0: SplitCoins(Gas, [Input(0)]);
//> 1: sui::object::id_address<sui::coin::Coin<sui::sui::SUI>>(Gas);
//> 2: TransferObjects([Result(0)], Result(1))
created: object(4,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 1976000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 5, lines 41-46:
//# programmable --sender A --inputs 400 500
//> 0: SplitCoins(Gas, [Input(0), Input(1)]);
//> 1: sui::object::id_address<sui::coin::Coin<sui::sui::SUI>>(NestedResult(0,0));
//> 2: TransferObjects([NestedResult(0,1)], Result(1));
//> 3: sui::object::id_address<sui::coin::Coin<sui::sui::SUI>>(Gas);
//> 4: TransferObjects([NestedResult(0,0)], Result(3))
created: object(5,0), object(5,1)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 2964000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 6, lines 48-50:
//# programmable --sender A --inputs 600 @0x2
//> 0: SplitCoins(Gas, [Input(0)]);
//> 1: TransferObjects([Result(0)], Input(1))
created: object(6,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 1976000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 7, line 52:
//# create-checkpoint
Checkpoint created: 2

task 8, lines 54-57:
//# publish --upgradeable --sender A
created: object(8,0), object(8,1)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 5092000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 9, lines 59-62:
//# upgrade --package P0 --upgrade-capability 8,1 --sender A
created: object(9,0)
mutated: object(0,0), object(8,1)
gas summary: computation_cost: 1000000, storage_cost: 5092000,  storage_rebate: 2595780, non_refundable_storage_fee: 26220

task 10, line 64:
//# create-checkpoint
Checkpoint created: 3

task 11, lines 66-71:
//# run-graphql
Response: {
  "data": {
    "object": null
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 3,
          "column": 5
        }
      ],
      "path": [
        "object",
        "objects"
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 12, lines 73-80:
//# run-graphql
Response: {
  "data": {
    "object": {
      "objectAt": null
    }
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 4,
          "column": 7
        }
      ],
      "path": [
        "object",
        "objectAt",
        "objects"
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 13, lines 82-87:
//# run-graphql
Response: {
  "data": {
    "object": null
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 3,
          "column": 5
        }
      ],
      "path": [
        "object",
        "objects"
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 14, lines 89-98:
//# run-graphql
Response: {
  "data": {
    "transactionEffects": {
      "gasEffects": {
        "gasObject": null
      }
    }
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 5,
          "column": 9
        }
      ],
      "path": [
        "transactionEffects",
        "gasEffects",
        "gasObject",
        "objects"
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 15, lines 100-109:
//# run-graphql
Response: {
  "data": {
    "object": null
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 5,
          "column": 9
        }
      ],
      "path": [
        "object",
        "objectVersionsBefore",
        "nodes",
        0
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 16, lines 111-116:
//# run-graphql
Response: {
  "data": {
    "package": null
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 3,
          "column": 5
        }
      ],
      "path": [
        "package",
        "objects"
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 17, lines 118-125:
//# run-graphql
Response: {
  "data": {
    "package": {
      "packageAt": null
    }
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 4,
          "column": 7
        }
      ],
      "path": [
        "package",
        "packageAt",
        "objects"
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 18, lines 127-144:
//# run-graphql
Response: {
  "data": {
    "package": {
      "previousTransaction": {
        "effects": {
          "objectChanges": {
            "nodes": [
              {
                "outputState": {
                  "asMovePackage": null
                }
              },
              {
                "outputState": {
                  "asMovePackage": null
                }
              },
              {
                "outputState": {
                  "asMovePackage": null
                }
              }
            ]
          }
        }
      }
    }
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 9,
          "column": 17
        }
      ],
      "path": [
        "package",
        "previousTransaction",
        "effects",
        "objectChanges",
        "nodes",
        0,
        "outputState",
        "asMovePackage",
        "objects"
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 19, lines 146-155:
//# run-graphql
Response: {
  "data": {
    "package": null
  },
  "errors": [
    {
      "message": "Cannot paginate owned objects for a parent object's address if its version is bounded. Fetch the parent at a checkpoint in the consistent range to list its owned objects.",
      "locations": [
        {
          "line": 5,
          "column": 9
        }
      ],
      "path": [
        "package",
        "packageVersionsBefore",
        "nodes",
        0
      ],
      "extensions": {
        "code": "BAD_USER_INPUT"
      }
    }
  ]
}

task 20, lines 157-230:
//# run-graphql
Response: {
  "data": {
    "cp1": {
      "query": {
        "object": {
          "objects": {
            "nodes": [
              {
                "contents": {
                  "json": {
                    "balance": "200",
                    "id": "0x920fe6f98abfb0992e570f2152578ab767f20a386b85c5d18be09a8a989f05b4"
                  }
                }
              },
              {
                "contents": {
                  "json": {
                    "balance": "100",
                    "id": "0x224a6337ca57793df1ed3a51ac388e92f5eebaa836bd4b95f3db93da42409d1c"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "atCp1": {
      "objects": {
        "nodes": [
          {
            "contents": {
              "json": {
                "balance": "200",
                "id": "0x920fe6f98abfb0992e570f2152578ab767f20a386b85c5d18be09a8a989f05b4"
              }
            }
          },
          {
            "contents": {
              "json": {
                "balance": "100",
                "id": "0x224a6337ca57793df1ed3a51ac388e92f5eebaa836bd4b95f3db93da42409d1c"
              }
            }
          }
        ]
      }
    },
    "cp2": {
      "query": {
        "object": {
          "objects": {
            "nodes": [
              {
                "contents": {
                  "json": {
                    "balance": "400",
                    "id": "0x97efd2fb46a4563c069da5a47ec050344518b8ab6fea0a0a371321dbe64d6b30"
                  }
                }
              },
              {
                "contents": {
                  "json": {
                    "balance": "300",
                    "id": "0xcf9c57ebaf391a8207db3e296a4230a8a004c9baa8075f99f2e2911202cf56ab"
                  }
                }
              },
              {
                "contents": {
                  "json": {
                    "balance": "200",
                    "id": "0x920fe6f98abfb0992e570f2152578ab767f20a386b85c5d18be09a8a989f05b4"
                  }
                }
              },
              {
                "contents": {
                  "json": {
                    "balance": "100",
                    "id": "0x224a6337ca57793df1ed3a51ac388e92f5eebaa836bd4b95f3db93da42409d1c"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "atCp2": {
      "objects": {
        "nodes": [
          {
            "contents": {
              "json": {
                "balance": "400",
                "id": "0x97efd2fb46a4563c069da5a47ec050344518b8ab6fea0a0a371321dbe64d6b30"
              }
            }
          },
          {
            "contents": {
              "json": {
                "balance": "300",
                "id": "0xcf9c57ebaf391a8207db3e296a4230a8a004c9baa8075f99f2e2911202cf56ab"
              }
            }
          },
          {
            "contents": {
              "json": {
                "balance": "200",
                "id": "0x920fe6f98abfb0992e570f2152578ab767f20a386b85c5d18be09a8a989f05b4"
              }
            }
          },
          {
            "contents": {
              "json": {
                "balance": "100",
                "id": "0x224a6337ca57793df1ed3a51ac388e92f5eebaa836bd4b95f3db93da42409d1c"
              }
            }
          }
        ]
      }
    },
    "latest": {
      "objects": {
        "nodes": [
          {
            "contents": {
              "json": {
                "balance": "400",
                "id": "0x97efd2fb46a4563c069da5a47ec050344518b8ab6fea0a0a371321dbe64d6b30"
              }
            }
          },
          {
            "contents": {
              "json": {
                "balance": "300",
                "id": "0xcf9c57ebaf391a8207db3e296a4230a8a004c9baa8075f99f2e2911202cf56ab"
              }
            }
          },
          {
            "contents": {
              "json": {
                "balance": "200",
                "id": "0x920fe6f98abfb0992e570f2152578ab767f20a386b85c5d18be09a8a989f05b4"
              }
            }
          },
          {
            "contents": {
              "json": {
                "balance": "100",
                "id": "0x224a6337ca57793df1ed3a51ac388e92f5eebaa836bd4b95f3db93da42409d1c"
              }
            }
          }
        ]
      }
    },
    "nested": {
      "objects": {
        "nodes": [
          {
            "contents": {
              "json": {
                "balance": "400",
                "id": "0x97efd2fb46a4563c069da5a47ec050344518b8ab6fea0a0a371321dbe64d6b30"
              }
            },
            "objects": {
              "nodes": [
                {
                  "contents": {
                    "json": {
                      "balance": "500",
                      "id": "0x4c09eff9e21a3740b8d465208463bcf7ce1daf73dc05148169b258c91fa1c9ad"
                    }
                  }
                }
              ]
            }
          },
          {
            "contents": {
              "json": {
                "balance": "300",
                "id": "0xcf9c57ebaf391a8207db3e296a4230a8a004c9baa8075f99f2e2911202cf56ab"
              }
            },
            "objects": {
              "nodes": []
            }
          },
          {
            "contents": {
              "json": {
                "balance": "200",
                "id": "0x920fe6f98abfb0992e570f2152578ab767f20a386b85c5d18be09a8a989f05b4"
              }
            },
            "objects": {
              "nodes": []
            }
          },
          {
            "contents": {
              "json": {
                "balance": "100",
                "id": "0x224a6337ca57793df1ed3a51ac388e92f5eebaa836bd4b95f3db93da42409d1c"
              }
            },
            "objects": {
              "nodes": []
            }
          }
        ]
      }
    },
    "objectAtReset": {
      "objectAt": {
        "objects": {
          "nodes": [
            {
              "contents": {
                "json": {
                  "balance": "400",
                  "id": "0x97efd2fb46a4563c069da5a47ec050344518b8ab6fea0a0a371321dbe64d6b30"
                }
              }
            },
            {
              "contents": {
                "json": {
                  "balance": "300",
                  "id": "0xcf9c57ebaf391a8207db3e296a4230a8a004c9baa8075f99f2e2911202cf56ab"
                }
              }
            },
            {
              "contents": {
                "json": {
                  "balance": "200",
                  "id": "0x920fe6f98abfb0992e570f2152578ab767f20a386b85c5d18be09a8a989f05b4"
                }
              }
            },
            {
              "contents": {
                "json": {
                  "balance": "100",
                  "id": "0x224a6337ca57793df1ed3a51ac388e92f5eebaa836bd4b95f3db93da42409d1c"
                }
              }
            }
          ]
        }
      }
    },
    "prevTxReset": {
      "previousTransaction": {
        "sender": {
          "objects": {
            "nodes": [
              {
                "contents": {
                  "json": {
                    "balance": "299999979432280",
                    "id": "0xbff5e96a4a5c0f7348259c7abfdfd999405c02b9e9c0d0d59ec669a53b104c7a"
                  }
                },
                "objects": {
                  "nodes": [
                    {
                      "contents": {
                        "json": {
                          "balance": "400",
                          "id": "0x97efd2fb46a4563c069da5a47ec050344518b8ab6fea0a0a371321dbe64d6b30"
                        }
                      }
                    },
                    {
                      "contents": {
                        "json": {
                          "balance": "300",
                          "id": "0xcf9c57ebaf391a8207db3e296a4230a8a004c9baa8075f99f2e2911202cf56ab"
                        }
                      }
                    },
                    {
                      "contents": {
                        "json": {
                          "balance": "200",
                          "id": "0x920fe6f98abfb0992e570f2152578ab767f20a386b85c5d18be09a8a989f05b4"
                        }
                      }
                    },
                    {
                      "contents": {
                        "json": {
                          "balance": "100",
                          "id": "0x224a6337ca57793df1ed3a51ac388e92f5eebaa836bd4b95f3db93da42409d1c"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "contents": {
                  "json": {
                    "id": "0x5abebcecdc019e17d101bd669203ecc4a4f6d0bee5b58f7de8045d6acf1ffbd7",
                    "package": "0x0b40bb70727507f81606597beecfb5f3b66850adba91f0cf1246f175fcd3f602",
                    "policy": 0,
                    "version": "2"
                  }
                },
                "objects": {
                  "nodes": []
                }
              }
            ]
          }
        }
      }
    }
  }
}

task 21, lines 232-249:
//# run-graphql
Response: {
  "data": {
    "latest": {
      "objects": {
        "nodes": [
          {
            "contents": {
              "json": {
                "balance": "600",
                "id": "0x7586c892d59c3ba060c4afd279c17d20afe67fd013fc89fec30d0fb7daa2a68d"
              }
            }
          }
        ]
      }
    },
    "atCp1": {
      "objects": {
        "nodes": []
      }
    },
    "cp1": {
      "query": {
        "package": {
          "objects": {
            "nodes": []
          }
        }
      }
    }
  }
}
