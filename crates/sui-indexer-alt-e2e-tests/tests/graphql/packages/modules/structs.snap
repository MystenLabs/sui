---
source: external-crates/move/crates/move-transactional-test-runner/src/framework.rs
---
processed 7 tasks

init:
A: object(0,0)

task 1, lines 6-33:
//# run-graphql
Response: {
  "data": {
    "package": {
      "coin": {
        "struct": {
          "name": "Coin",
          "abilities": [
            "STORE",
            "KEY"
          ],
          "typeParameters": [
            {
              "constraints": [],
              "isPhantom": true
            }
          ],
          "fields": [
            {
              "name": "id",
              "type": {
                "repr": "0x0000000000000000000000000000000000000000000000000000000000000002::object::UID",
                "signature": {
                  "body": {
                    "datatype": {
                      "package": "0x0000000000000000000000000000000000000000000000000000000000000002",
                      "module": "object",
                      "type": "UID",
                      "typeParameters": []
                    }
                  }
                }
              }
            },
            {
              "name": "balance",
              "type": {
                "repr": "0x0000000000000000000000000000000000000000000000000000000000000002::balance::Balance<$0>",
                "signature": {
                  "body": {
                    "datatype": {
                      "package": "0x0000000000000000000000000000000000000000000000000000000000000002",
                      "module": "balance",
                      "type": "Balance",
                      "typeParameters": [
                        {
                          "typeParameter": 0
                        }
                      ]
                    }
                  }
                }
              }
            }
          ]
        }
      },
      "tx_context": {
        "struct": {
          "name": "TxContext",
          "abilities": [
            "DROP"
          ],
          "typeParameters": [],
          "fields": [
            {
              "name": "sender",
              "type": {
                "repr": "address",
                "signature": {
                  "body": "address"
                }
              }
            },
            {
              "name": "tx_hash",
              "type": {
                "repr": "vector<u8>",
                "signature": {
                  "body": {
                    "vector": "u8"
                  }
                }
              }
            },
            {
              "name": "epoch",
              "type": {
                "repr": "u64",
                "signature": {
                  "body": "u64"
                }
              }
            },
            {
              "name": "epoch_timestamp_ms",
              "type": {
                "repr": "u64",
                "signature": {
                  "body": "u64"
                }
              }
            },
            {
              "name": "ids_created",
              "type": {
                "repr": "u64",
                "signature": {
                  "body": "u64"
                }
              }
            }
          ]
        }
      }
    }
  }
}

task 2, lines 35-38:
//# publish --upgradeable --sender A
created: object(2,0), object(2,1)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 5213600,  storage_rebate: 0, non_refundable_storage_fee: 0

task 3, lines 40-45:
//# upgrade --package P0 --upgrade-capability 2,1 --sender A
created: object(3,0)
mutated: object(0,0), object(2,1)
gas summary: computation_cost: 1000000, storage_cost: 6049600,  storage_rebate: 2595780, non_refundable_storage_fee: 26220

task 4, line 47:
//# create-checkpoint
Checkpoint created: 1

task 5, lines 49-77:
//# run-graphql
Response: {
  "data": {
    "packageVersions": {
      "nodes": [
        {
          "version": 1,
          "module": {
            "structs": {
              "nodes": [
                {
                  "name": "S",
                  "abilities": [
                    "COPY",
                    "DROP"
                  ],
                  "typeParameters": [],
                  "fields": [
                    {
                      "name": "x",
                      "type": {
                        "repr": "u64",
                        "signature": {
                          "body": "u64"
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "version": 2,
          "module": {
            "structs": {
              "nodes": [
                {
                  "name": "S",
                  "abilities": [
                    "COPY",
                    "DROP"
                  ],
                  "typeParameters": [],
                  "fields": [
                    {
                      "name": "x",
                      "type": {
                        "repr": "u64",
                        "signature": {
                          "body": "u64"
                        }
                      }
                    }
                  ]
                },
                {
                  "name": "T",
                  "abilities": [],
                  "typeParameters": [
                    {
                      "constraints": [
                        "DROP"
                      ],
                      "isPhantom": false
                    }
                  ],
                  "fields": [
                    {
                      "name": "y",
                      "type": {
                        "repr": "u64",
                        "signature": {
                          "body": "u64"
                        }
                      }
                    },
                    {
                      "name": "s",
                      "type": {
                        "repr": "0x76d80fe27d06a6665b97b75cfa75c8168e12079171197eea9d8f447abc4a0be6::M::S",
                        "signature": {
                          "body": {
                            "datatype": {
                              "package": "0x76d80fe27d06a6665b97b75cfa75c8168e12079171197eea9d8f447abc4a0be6",
                              "module": "M",
                              "type": "S",
                              "typeParameters": []
                            }
                          }
                        }
                      }
                    },
                    {
                      "name": "u",
                      "type": {
                        "repr": "$0",
                        "signature": {
                          "body": {
                            "typeParameter": 0
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "name": "V",
                  "abilities": [],
                  "typeParameters": [],
                  "fields": [
                    {
                      "name": "t",
                      "type": {
                        "repr": "0x76d80fe27d06a6665b97b75cfa75c8168e12079171197eea9d8f447abc4a0be6::M::T<0x76d80fe27d06a6665b97b75cfa75c8168e12079171197eea9d8f447abc4a0be6::M::S>",
                        "signature": {
                          "body": {
                            "datatype": {
                              "package": "0x76d80fe27d06a6665b97b75cfa75c8168e12079171197eea9d8f447abc4a0be6",
                              "module": "M",
                              "type": "T",
                              "typeParameters": [
                                {
                                  "datatype": {
                                    "package": "0x76d80fe27d06a6665b97b75cfa75c8168e12079171197eea9d8f447abc4a0be6",
                                    "module": "M",
                                    "type": "S",
                                    "typeParameters": []
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    }
  }
}

task 6, lines 79-106:
//# run-graphql --cursors "Coin" "TreasuryCap"
Response: {
  "data": {
    "package": {
      "module": {
        "all": {
          "pageInfo": {
            "hasPreviousPage": false,
            "hasNextPage": false
          },
          "nodes": [
            {
              "name": "Coin"
            },
            {
              "name": "CoinMetadata"
            },
            {
              "name": "CurrencyCreated"
            },
            {
              "name": "DenyCap"
            },
            {
              "name": "DenyCapV2"
            },
            {
              "name": "RegulatedCoinMetadata"
            },
            {
              "name": "TreasuryCap"
            }
          ]
        },
        "first": {
          "pageInfo": {
            "hasPreviousPage": false,
            "hasNextPage": true
          },
          "nodes": [
            {
              "name": "Coin"
            },
            {
              "name": "CoinMetadata"
            },
            {
              "name": "CurrencyCreated"
            }
          ]
        },
        "last": {
          "pageInfo": {
            "hasPreviousPage": true,
            "hasNextPage": false
          },
          "nodes": [
            {
              "name": "DenyCapV2"
            },
            {
              "name": "RegulatedCoinMetadata"
            },
            {
              "name": "TreasuryCap"
            }
          ]
        },
        "firstBefore": {
          "pageInfo": {
            "hasPreviousPage": false,
            "hasNextPage": true
          },
          "nodes": [
            {
              "name": "Coin"
            },
            {
              "name": "CoinMetadata"
            },
            {
              "name": "CurrencyCreated"
            }
          ]
        },
        "lastAfter": {
          "pageInfo": {
            "hasPreviousPage": true,
            "hasNextPage": false
          },
          "nodes": [
            {
              "name": "DenyCapV2"
            },
            {
              "name": "RegulatedCoinMetadata"
            },
            {
              "name": "TreasuryCap"
            }
          ]
        },
        "firstAfter": {
          "pageInfo": {
            "hasPreviousPage": true,
            "hasNextPage": true
          },
          "nodes": [
            {
              "name": "CoinMetadata"
            },
            {
              "name": "CurrencyCreated"
            },
            {
              "name": "DenyCap"
            }
          ]
        },
        "lastBefore": {
          "pageInfo": {
            "hasPreviousPage": true,
            "hasNextPage": true
          },
          "nodes": [
            {
              "name": "DenyCap"
            },
            {
              "name": "DenyCapV2"
            },
            {
              "name": "RegulatedCoinMetadata"
            }
          ]
        },
        "afterBefore": {
          "pageInfo": {
            "hasPreviousPage": true,
            "hasNextPage": true
          },
          "nodes": [
            {
              "name": "CoinMetadata"
            },
            {
              "name": "CurrencyCreated"
            },
            {
              "name": "DenyCap"
            },
            {
              "name": "DenyCapV2"
            },
            {
              "name": "RegulatedCoinMetadata"
            }
          ]
        }
      }
    }
  }
}
