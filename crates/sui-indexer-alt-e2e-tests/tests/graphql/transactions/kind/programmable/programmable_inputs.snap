---
source: external-crates/move/crates/move-transactional-test-runner/src/framework.rs
---
processed 16 tasks

init:
A: object(0,0), B: object(0,1)

task 1, lines 6-48:
//# publish
created: object(1,0), object(1,1)
mutated: object(0,2)
gas summary: computation_cost: 1000000, storage_cost: 8990800,  storage_rebate: 0, non_refundable_storage_fee: 0

task 2, lines 49-51:
//# programmable --sender A --inputs 42u64 @A
//> 0: test::simple::new_coin(Input(0));
//> TransferObjects([Result(0)], Input(1))
created: object(2,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 2318000,  storage_rebate: 0, non_refundable_storage_fee: 0

task 3, lines 53-55:
//# create-checkpoint
Checkpoint created: 1

task 4, lines 56-57:
//# programmable --sender A --inputs object(1,0) 10  
//> 0: test::simple::add(Input(0), Input(1))
mutated: object(0,0), object(1,0)
gas summary: computation_cost: 1000000, storage_cost: 2340800,  storage_rebate: 2317392, non_refundable_storage_fee: 23408

task 5, lines 59-62:
//# create-checkpoint
Checkpoint created: 2

task 6, lines 63-64:
//# programmable --sender A --inputs object(2,0)
//> 0: test::simple::get_value(Input(0))
mutated: object(0,0), object(2,0)
gas summary: computation_cost: 1000000, storage_cost: 2318000,  storage_rebate: 2294820, non_refundable_storage_fee: 23180

task 7, lines 66-68:
//# create-checkpoint
Checkpoint created: 3

task 8, lines 69-72:
//# programmable --sender A --inputs 200u64 @A  
// Setup: Create coin and transfer it to A's address for Receiving test
//> 0: test::simple::new_coin(Input(0));
//> TransferObjects([Result(0)], Input(1))
created: object(8,0)
mutated: object(0,0)
gas summary: computation_cost: 1000000, storage_cost: 2318000,  storage_rebate: 978120, non_refundable_storage_fee: 9880

task 9, lines 74-76:
//# programmable --sender A --inputs object(8,0) @A
// Setup: Transfer coin to A's address (creates a pending receive)
//> 0: test::simple::transfer_coin_to_address(Input(0), Input(1))
mutated: object(0,0), object(8,0)
gas summary: computation_cost: 1000000, storage_cost: 2318000,  storage_rebate: 2294820, non_refundable_storage_fee: 23180

task 10, lines 78-80:
//# programmable --sender A --inputs object(2,0) receiving(8,0) @A
//> 0: test::simple::receive_coin(Input(0), Input(1));
//> TransferObjects([Result(0)], Input(2))
Error: Transaction Effects Status: Move Runtime Abort. Location: sui::transfer::receive_impl (function index 12) at offset 0, Abort Code: 3
Execution Error: ExecutionError: ExecutionError { inner: ExecutionErrorInner { kind: MoveAbort(MoveLocation { module: ModuleId { address: sui, name: Identifier("transfer") }, function: 12, instruction: 0, function_name: Some("receive_impl") }, 3), source: Some(VMError { major_status: ABORTED, sub_status: Some(3), message: None, exec_state: None, location: Module(ModuleId { address: sui, name: Identifier("transfer") }), indices: [], offsets: [(FunctionDefinitionIndex(12), 0)] }), command: Some(0) } }

task 11, line 82:
//# create-checkpoint
Checkpoint created: 4

task 12, lines 84-103:
//# run-graphql
Response: {
  "data": {
    "pureInputTest": {
      "digest": "3vN92ssd7QUH46pRkq3x2nzj8TEYwX1LJPeqH82BCoD8",
      "kind": {
        "__typename": "ProgrammableTransaction",
        "inputs": {
          "nodes": [
            {
              "__typename": "Pure",
              "bytes": "KgAAAAAAAAA="
            },
            {
              "__typename": "Pure",
              "bytes": "/MyaQhu7E8GmahqpjwrXUCnt6UhXd5xpFbRPlAaLkh4="
            }
          ]
        }
      }
    }
  }
}

task 13, lines 105-126:
//# run-graphql  
Response: {
  "data": {
    "sharedInputTest": {
      "digest": "7orny7x5fKU9h9FAfgqxNoSyxHCJ4izRsFPHqBBCDL6w",
      "kind": {
        "__typename": "ProgrammableTransaction",
        "inputs": {
          "nodes": [
            {
              "__typename": "SharedInput",
              "address": "0x15f1a98bf64d17ecdc077a0a59848ee92a7e0005f86b67a7bac566c1c7926126",
              "initialSharedVersion": 2,
              "mutable": true
            },
            {
              "__typename": "Pure"
            }
          ]
        }
      }
    }
  }
}

task 14, lines 128-151:
//# run-graphql
Response: {
  "data": {
    "ownedOrImmutableTest": {
      "digest": "EpTKN5v4qda3khSqP3osYfN7JsQ7HxPbaYQAm7d1RJte",
      "kind": {
        "__typename": "ProgrammableTransaction",
        "inputs": {
          "nodes": [
            {
              "__typename": "OwnedOrImmutable",
              "object": {
                "address": "0xe99fcfc6846da366c584674afc52d37c71ce3bf076adeff83d52c4e3322d12e6",
                "version": 2,
                "digest": "Fd5gUnMRjAegAQiJJkLraQCcSeph4XzvbpDiV1eo9w24"
              }
            }
          ]
        }
      }
    }
  }
}

task 15, lines 153-176:
//# run-graphql
Response: {
  "data": {
    "receivingInputTest": {
      "digest": "AuuQ6MmSz5avpGWLGoFfd4kV4KhNp2PyvBF1VPnfWuBm",
      "kind": {
        "__typename": "ProgrammableTransaction",
        "inputs": {
          "nodes": [
            {
              "__typename": "OwnedOrImmutable"
            },
            {
              "__typename": "Receiving",
              "object": {
                "address": "0xa6f9693563a3a8c260656930577e22bcfd621a2380037a68c99f73cf28235146",
                "version": 6,
                "digest": "5Gh3wL6s5ezhdQi6PWK11PEBgSGh65tb4Mtcyh4eZDDQ"
              }
            },
            {
              "__typename": "Pure"
            }
          ]
        }
      }
    }
  }
}
