// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Transaction {
    #[prost(bytes = "bytes", optional, tag = "1")]
    pub transaction: ::core::option::Option<::prost::bytes::Bytes>,
    #[prost(bytes = "bytes", optional, tag = "2")]
    pub effects: ::core::option::Option<::prost::bytes::Bytes>,
    #[prost(bytes = "bytes", optional, tag = "3")]
    pub events: ::core::option::Option<::prost::bytes::Bytes>,
    #[prost(uint64, optional, tag = "4")]
    pub checkpoint: ::core::option::Option<u64>,
    #[prost(uint64, optional, tag = "5")]
    pub timestamp: ::core::option::Option<u64>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Object {
    #[prost(bytes = "bytes", optional, tag = "1")]
    pub object: ::core::option::Option<::prost::bytes::Bytes>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Checkpoint {
    #[prost(bytes = "bytes", optional, tag = "1")]
    pub summary: ::core::option::Option<::prost::bytes::Bytes>,
    #[prost(bytes = "bytes", optional, tag = "2")]
    pub signature: ::core::option::Option<::prost::bytes::Bytes>,
    #[prost(bytes = "bytes", optional, tag = "3")]
    pub contents: ::core::option::Option<::prost::bytes::Bytes>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FullCheckpoint {
    #[prost(message, optional, tag = "1")]
    pub checkpoint: ::core::option::Option<Checkpoint>,
    #[prost(message, repeated, tag = "2")]
    pub transactions: ::prost::alloc::vec::Vec<CheckpointTransaction>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CheckpointTransaction {
    #[prost(message, optional, tag = "1")]
    pub transaction: ::core::option::Option<Transaction>,
    #[prost(message, repeated, tag = "2")]
    pub input_objects: ::prost::alloc::vec::Vec<Object>,
    #[prost(message, repeated, tag = "3")]
    pub output_objects: ::prost::alloc::vec::Vec<Object>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CheckpointPage {
    #[prost(message, repeated, tag = "1")]
    pub checkpoints: ::prost::alloc::vec::Vec<Checkpoint>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TransactionPage {
    #[prost(message, repeated, tag = "1")]
    pub transaction: ::prost::alloc::vec::Vec<Transaction>,
}
