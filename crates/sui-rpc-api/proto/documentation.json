{
  "files": [
    {
      "name": "sui.node.v2.proto",
      "description": "The sui.node.v2 package contains API definitions for services that are\nexpected to run on Full nodes.",
      "package": "sui.node.v2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BalanceChange",
          "longName": "BalanceChange",
          "fullName": "sui.node.v2.BalanceChange",
          "description": "The delta, or change, in balance for an address for a particular `Coin` type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "The account address that is affected by this balance change event.",
              "label": "optional",
              "type": "Address",
              "longType": "sui.types.Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            },
            {
              "name": "coin_type",
              "description": "The `Coin` type of this balance change event.",
              "label": "optional",
              "type": "TypeTag",
              "longType": "sui.types.TypeTag",
              "fullType": "sui.types.TypeTag",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_type",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount or change in balance.",
              "label": "optional",
              "type": "I128",
              "longType": "sui.types.I128",
              "fullType": "sui.types.I128",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_amount",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BalanceChanges",
          "longName": "BalanceChanges",
          "fullName": "sui.node.v2.BalanceChanges",
          "description": "Set of `BalanceChange`s that occurred as the result of a transaction.\n\nThis set of events are calculated by analyzing all input and output `Coin`\ntype objects.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "balance_changes",
              "description": "",
              "label": "repeated",
              "type": "BalanceChange",
              "longType": "BalanceChange",
              "fullType": "sui.node.v2.BalanceChange",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EffectsFinality",
          "longName": "EffectsFinality",
          "fullName": "sui.node.v2.EffectsFinality",
          "description": "Indicates the finality of the executed transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "certified",
              "description": "A quorum certificate certifying that a transaction is final but might not\nbe included in a checkpoint yet.",
              "label": "",
              "type": "ValidatorAggregatedSignature",
              "longType": "sui.types.ValidatorAggregatedSignature",
              "fullType": "sui.types.ValidatorAggregatedSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "finality",
              "defaultValue": ""
            },
            {
              "name": "checkpointed",
              "description": "Sequence number of the checkpoint that includes the transaction.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "finality",
              "defaultValue": ""
            },
            {
              "name": "quorum_executed",
              "description": "Indicates that a quorum of validators has executed the transaction but\nthat it might not be included in a checkpoint yet.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "finality",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecuteTransactionOptions",
          "longName": "ExecuteTransactionOptions",
          "fullName": "sui.node.v2.ExecuteTransactionOptions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "effects",
              "description": "Include the `sui.types.TransactionEffects` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "effects_bcs",
              "description": "Include the `TransactionEffects` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects_bcs",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "Include the `sui.types.TransactionEvents` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events",
              "defaultValue": ""
            },
            {
              "name": "events_bcs",
              "description": "Include the `TransactionEvents` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_bcs",
              "defaultValue": ""
            },
            {
              "name": "balance_changes",
              "description": "Include the `BalanceChanges` in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_balance_changes",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecuteTransactionRequest",
          "longName": "ExecuteTransactionRequest",
          "fullName": "sui.node.v2.ExecuteTransactionRequest",
          "description": "Request message for `NodeService.ExecuteTransaction`.\n\nNote: You must provide only one of `transaction` or `transaction_bcs`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "Optional. The transaction to execute.",
              "label": "optional",
              "type": "Transaction",
              "longType": "sui.types.Transaction",
              "fullType": "sui.types.Transaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "transaction_bcs",
              "description": "Optional. The transaction to execute, encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction_bcs",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Optional. Set of `UserSiganture`s authorizing the execution of the provided\ntransaction.",
              "label": "optional",
              "type": "UserSignatures",
              "longType": "UserSignatures",
              "fullType": "sui.node.v2.UserSignatures",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signatures",
              "defaultValue": ""
            },
            {
              "name": "signatures_bytes",
              "description": "Optional. Set of `UserSiganture`s authorizing the execution of the provided\ntransaction, encoded as bytes.",
              "label": "optional",
              "type": "UserSignaturesBytes",
              "longType": "UserSignaturesBytes",
              "fullType": "sui.node.v2.UserSignaturesBytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signatures_bytes",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Optional. Options for specifying which parts of the\n`ExecuteTransactionResponse` should be returned.",
              "label": "optional",
              "type": "ExecuteTransactionOptions",
              "longType": "ExecuteTransactionOptions",
              "fullType": "sui.node.v2.ExecuteTransactionOptions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_options",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecuteTransactionResponse",
          "longName": "ExecuteTransactionResponse",
          "fullName": "sui.node.v2.ExecuteTransactionResponse",
          "description": "Response message for `NodeService.ExecuteTransaction`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "finality",
              "description": "Indicates the finality of the executed transaction.",
              "label": "optional",
              "type": "EffectsFinality",
              "longType": "EffectsFinality",
              "fullType": "sui.node.v2.EffectsFinality",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_finality",
              "defaultValue": ""
            },
            {
              "name": "effects",
              "description": "Optional. The `TransactionEffects` for this transaction.",
              "label": "optional",
              "type": "TransactionEffects",
              "longType": "sui.types.TransactionEffects",
              "fullType": "sui.types.TransactionEffects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "effects_bcs",
              "description": "Optional. The\n[TransactionEffects](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.TransactionEffects.html)\nfor this transaction encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects_bcs",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "Optional. The `TransactionEvents` for this transaction.\n\nThis field might be empty, even if it was explicitly requested, if the\ntransaction didn't produce any events.\n`sui.types.TransactionEffects.events_digest` is populated if the\ntransaction produced any events.",
              "label": "optional",
              "type": "TransactionEvents",
              "longType": "sui.types.TransactionEvents",
              "fullType": "sui.types.TransactionEvents",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events",
              "defaultValue": ""
            },
            {
              "name": "events_bcs",
              "description": "Optional. The\n[TransactionEvents](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.TransactionEvents.html)\nfor this transaction encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_bcs",
              "defaultValue": ""
            },
            {
              "name": "balance_changes",
              "description": "Optional. Set of balance change events as a result of this transaction.",
              "label": "optional",
              "type": "BalanceChanges",
              "longType": "BalanceChanges",
              "fullType": "sui.node.v2.BalanceChanges",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_balance_changes",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FullCheckpointObject",
          "longName": "FullCheckpointObject",
          "fullName": "sui.node.v2.FullCheckpointObject",
          "description": "An object used by or produced from a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "The `ObjectId` of this object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "sui.types.ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version of this object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this object.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "object",
              "description": "Optional. The object itself.",
              "label": "optional",
              "type": "Object",
              "longType": "sui.types.Object",
              "fullType": "sui.types.Object",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object",
              "defaultValue": ""
            },
            {
              "name": "object_bcs",
              "description": "Optional. The\n[object](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.Object.html)\nencoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_bcs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FullCheckpointObjects",
          "longName": "FullCheckpointObjects",
          "fullName": "sui.node.v2.FullCheckpointObjects",
          "description": "Set of objects used by or produced from a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "",
              "label": "repeated",
              "type": "FullCheckpointObject",
              "longType": "FullCheckpointObject",
              "fullType": "sui.node.v2.FullCheckpointObject",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FullCheckpointTransaction",
          "longName": "FullCheckpointTransaction",
          "fullName": "sui.node.v2.FullCheckpointTransaction",
          "description": "A transaction, with all of its inputs and outputs.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "The digest of this transaction.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "transaction",
              "description": "Optional. The transaction itself.",
              "label": "optional",
              "type": "Transaction",
              "longType": "sui.types.Transaction",
              "fullType": "sui.types.Transaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "transaction_bcs",
              "description": "Optional. The\n[Transaction](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.Transaction.html)\nencoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction_bcs",
              "defaultValue": ""
            },
            {
              "name": "effects",
              "description": "Optional. The `TransactionEffects` for this transaction.",
              "label": "optional",
              "type": "TransactionEffects",
              "longType": "sui.types.TransactionEffects",
              "fullType": "sui.types.TransactionEffects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "effects_bcs",
              "description": "Optional. The\n[TransactionEffects](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.TransactionEffects.html)\nfor this transaction encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects_bcs",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "Optional. The `TransactionEvents` for this transaction.\n\nThis field might be empty, even if it was explicitly requested, if the\ntransaction didn't produce any events.\n`sui.types.TransactionEffects.events_digest` is populated if the\ntransaction produced any events.",
              "label": "optional",
              "type": "TransactionEvents",
              "longType": "sui.types.TransactionEvents",
              "fullType": "sui.types.TransactionEvents",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events",
              "defaultValue": ""
            },
            {
              "name": "events_bcs",
              "description": "Optional. The\n[TransactionEvents](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.TransactionEvents.html)\nfor this transaction encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_bcs",
              "defaultValue": ""
            },
            {
              "name": "input_objects",
              "description": "Optional. Set of input objects used during the execution of this transaction.",
              "label": "optional",
              "type": "FullCheckpointObjects",
              "longType": "FullCheckpointObjects",
              "fullType": "sui.node.v2.FullCheckpointObjects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_input_objects",
              "defaultValue": ""
            },
            {
              "name": "output_objects",
              "description": "Optional. Set of output objects produced from the execution of this transaction.",
              "label": "optional",
              "type": "FullCheckpointObjects",
              "longType": "FullCheckpointObjects",
              "fullType": "sui.node.v2.FullCheckpointObjects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_output_objects",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCheckpointOptions",
          "longName": "GetCheckpointOptions",
          "fullName": "sui.node.v2.GetCheckpointOptions",
          "description": "Options for which parts of the `GetCheckpointResponse` should be returned.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "summary",
              "description": "Include the `sui.types.CheckpointSummary` in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary",
              "defaultValue": ""
            },
            {
              "name": "summary_bcs",
              "description": "Include the `CheckpointSummary` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary_bcs",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Include the `sui.types.ValidatorAggregatedSignature` in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "Include the `sui.types.CheckpointContents` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            },
            {
              "name": "contents_bcs",
              "description": "Include the `CheckpointContents` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents_bcs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCheckpointRequest",
          "longName": "GetCheckpointRequest",
          "fullName": "sui.node.v2.GetCheckpointRequest",
          "description": "Request message for `NodeService.GetCheckpoint`.\n\nAt most, provide one of `sequence_number` or `digest`. An error is\nreturned if you attempt to provide both. If you provide neither, the service\nreturns the latest executed checkpoint.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "sequence_number",
              "description": "Optional. The sequence number of the requested checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sequence_number",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "Optional. The digest of the requested checkpoint.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Optional. Options for specifying which parts of the `GetCheckpointResponse`\nshould be returned.",
              "label": "optional",
              "type": "GetCheckpointOptions",
              "longType": "GetCheckpointOptions",
              "fullType": "sui.node.v2.GetCheckpointOptions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_options",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCheckpointResponse",
          "longName": "GetCheckpointResponse",
          "fullName": "sui.node.v2.GetCheckpointResponse",
          "description": "Response message for `NodeService.GetCheckpoint`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "sequence_number",
              "description": "The sequence number of this checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sequence_number",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this checkpoint's `CheckpointSummary`.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "summary",
              "description": "Optional. The `CheckpointSummary` for this checkpoint.",
              "label": "optional",
              "type": "CheckpointSummary",
              "longType": "sui.types.CheckpointSummary",
              "fullType": "sui.types.CheckpointSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary",
              "defaultValue": ""
            },
            {
              "name": "summary_bcs",
              "description": "Optional. The\n[CheckpointSummary](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.CheckpointSummary.html)\nfor this checkpoint encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary_bcs",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Optional. An aggregated quorum signature from the validator committee that\ncertifies this checkpoint.",
              "label": "optional",
              "type": "ValidatorAggregatedSignature",
              "longType": "sui.types.ValidatorAggregatedSignature",
              "fullType": "sui.types.ValidatorAggregatedSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "Optional. The `CheckpointContents` for this checkpoint.",
              "label": "optional",
              "type": "CheckpointContents",
              "longType": "sui.types.CheckpointContents",
              "fullType": "sui.types.CheckpointContents",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            },
            {
              "name": "contents_bcs",
              "description": "Optional. The\n[CheckpointContents](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.CheckpointContents.html)\nfor this checkpoint encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents_bcs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCommitteeRequest",
          "longName": "GetCommitteeRequest",
          "fullName": "sui.node.v2.GetCommitteeRequest",
          "description": "Request message for NodeService.GetCommittee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Optional. Request the sui.types.ValidatorCommittee corresponding to the\nprovided epoch. If no epoch is provided the committee for the current\nepoch will be returned.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCommitteeResponse",
          "longName": "GetCommitteeResponse",
          "fullName": "sui.node.v2.GetCommitteeResponse",
          "description": "Response message for `NodeService.GetCommittee`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "committee",
              "description": "The committee of either the requested epoch or the current epoch.",
              "label": "optional",
              "type": "ValidatorCommittee",
              "longType": "sui.types.ValidatorCommittee",
              "fullType": "sui.types.ValidatorCommittee",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_committee",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFullCheckpointOptions",
          "longName": "GetFullCheckpointOptions",
          "fullName": "sui.node.v2.GetFullCheckpointOptions",
          "description": "Options for which parts of the `GetFullCheckpointResponse` should be returned.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "summary",
              "description": "Include the `sui.types.CheckpointSummary` in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary",
              "defaultValue": ""
            },
            {
              "name": "summary_bcs",
              "description": "Include the `CheckpointSummary` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary_bcs",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Include the `sui.types.ValidatorAggregatedSignature` in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "Include the `sui.types.CheckpointContents` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            },
            {
              "name": "contents_bcs",
              "description": "Include the `CheckpointContents` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents_bcs",
              "defaultValue": ""
            },
            {
              "name": "transaction",
              "description": "Include the `sui.types.Transaction` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "transaction_bcs",
              "description": "Include the transaction formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction_bcs",
              "defaultValue": ""
            },
            {
              "name": "effects",
              "description": "Include the `sui.types.TransactionEffects` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "effects_bcs",
              "description": "Include the `TransactionEffects` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects_bcs",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "Include the `sui.types.TransactionEvents` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events",
              "defaultValue": ""
            },
            {
              "name": "events_bcs",
              "description": "Include the `TransactionEvents` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_bcs",
              "defaultValue": ""
            },
            {
              "name": "input_objects",
              "description": "Include the input objects for transactions in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_input_objects",
              "defaultValue": ""
            },
            {
              "name": "output_objects",
              "description": "Include the output objects for transactions in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_output_objects",
              "defaultValue": ""
            },
            {
              "name": "object",
              "description": "Include the `sui.types.Object` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object",
              "defaultValue": ""
            },
            {
              "name": "object_bcs",
              "description": "Include the object formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_bcs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFullCheckpointRequest",
          "longName": "GetFullCheckpointRequest",
          "fullName": "sui.node.v2.GetFullCheckpointRequest",
          "description": "Request message for `NodeService.GetFullCheckpoint`.\n\nAt most, provide one of `sequence_number` or `digest`. An error is\nreturned if you provide both. If you provide neither, the service\nreturns the latest executed checkpoint.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "sequence_number",
              "description": "Optional. The sequence number of the requested checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sequence_number",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "Optional. The digest of the requested checkpoint.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Optional. Options for specifying which parts of the\n`GetFullCheckpointResponse` should be returned.",
              "label": "optional",
              "type": "GetFullCheckpointOptions",
              "longType": "GetFullCheckpointOptions",
              "fullType": "sui.node.v2.GetFullCheckpointOptions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_options",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFullCheckpointResponse",
          "longName": "GetFullCheckpointResponse",
          "fullName": "sui.node.v2.GetFullCheckpointResponse",
          "description": "Response message for `NodeService.GetFullCheckpoint`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "sequence_number",
              "description": "The sequence number of this checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sequence_number",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this checkpoint's `CheckpointSummary`.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "summary",
              "description": "Optional. The `CheckpointSummary` for this checkpoint.",
              "label": "optional",
              "type": "CheckpointSummary",
              "longType": "sui.types.CheckpointSummary",
              "fullType": "sui.types.CheckpointSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary",
              "defaultValue": ""
            },
            {
              "name": "summary_bcs",
              "description": "Optional. The\n[CheckpointSummary](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.CheckpointSummary.html)\nfor this checkpoint encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary_bcs",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Optional. An aggregated quorum signature from the validator committee that\ncertifies this checkpoint.",
              "label": "optional",
              "type": "ValidatorAggregatedSignature",
              "longType": "sui.types.ValidatorAggregatedSignature",
              "fullType": "sui.types.ValidatorAggregatedSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "Optional. The `CheckpointContents` for this checkpoint.",
              "label": "optional",
              "type": "CheckpointContents",
              "longType": "sui.types.CheckpointContents",
              "fullType": "sui.types.CheckpointContents",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            },
            {
              "name": "contents_bcs",
              "description": "Optional. The\n[CheckpointContents](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.CheckpointContents.html)\nfor this checkpoint encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents_bcs",
              "defaultValue": ""
            },
            {
              "name": "transactions",
              "description": "List of transactions included in this checkpoint.",
              "label": "repeated",
              "type": "FullCheckpointTransaction",
              "longType": "FullCheckpointTransaction",
              "fullType": "sui.node.v2.FullCheckpointTransaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetNodeInfoRequest",
          "longName": "GetNodeInfoRequest",
          "fullName": "sui.node.v2.GetNodeInfoRequest",
          "description": "Request message for `NodeService.GetNodeInfo`.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetNodeInfoResponse",
          "longName": "GetNodeInfoResponse",
          "fullName": "sui.node.v2.GetNodeInfoResponse",
          "description": "Response message for `NodeService.GetNodeInfo`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "chain_id",
              "description": "The chain identifier of the chain that this node is on.\n\nThe chain identifier is the digest of the genesis checkpoint, the\ncheckpoint with sequence number 0.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_chain_id",
              "defaultValue": ""
            },
            {
              "name": "chain",
              "description": "Human-readable name of the chain that this node is on.\n\nThis is intended to be a human-readable name like `mainnet`, `testnet`, and so on.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_chain",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Current epoch of the node based on its highest executed checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "checkpoint_height",
              "description": "Checkpoint height of the most recently executed checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_checkpoint_height",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Unix timestamp of the most recently executed checkpoint.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_timestamp",
              "defaultValue": ""
            },
            {
              "name": "lowest_available_checkpoint",
              "description": "The lowest checkpoint for which checkpoints and transaction data are available.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lowest_available_checkpoint",
              "defaultValue": ""
            },
            {
              "name": "lowest_available_checkpoint_objects",
              "description": "The lowest checkpoint for which object data is available.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lowest_available_checkpoint_objects",
              "defaultValue": ""
            },
            {
              "name": "software_version",
              "description": "Software version of the `sui-node` binary.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_software_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetObjectOptions",
          "longName": "GetObjectOptions",
          "fullName": "sui.node.v2.GetObjectOptions",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object",
              "description": "Include the `sui.types.Object` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object",
              "defaultValue": ""
            },
            {
              "name": "object_bcs",
              "description": "Include the object formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_bcs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetObjectRequest",
          "longName": "GetObjectRequest",
          "fullName": "sui.node.v2.GetObjectRequest",
          "description": "Request message for `NodeService.GetObject`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "Required. The `ObjectId` of the requested object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "sui.types.ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Optional. Request that a specific version of the requested object is\nreturned. If no version is provided, then then the latest version for\nthe object is returned.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Optional. Options for specifying which parts of the `GetObjectResponse` should be returned.",
              "label": "optional",
              "type": "GetObjectOptions",
              "longType": "GetObjectOptions",
              "fullType": "sui.node.v2.GetObjectOptions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_options",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetObjectResponse",
          "longName": "GetObjectResponse",
          "fullName": "sui.node.v2.GetObjectResponse",
          "description": "Response message for `NodeService.GetObject`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "The `ObjectId` of this object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "sui.types.ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version of this object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this object.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "object",
              "description": "Optional. The object itself.",
              "label": "optional",
              "type": "Object",
              "longType": "sui.types.Object",
              "fullType": "sui.types.Object",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object",
              "defaultValue": ""
            },
            {
              "name": "object_bcs",
              "description": "Optional. The\n[Object](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.Object.html)\nencoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_bcs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransactionOptions",
          "longName": "GetTransactionOptions",
          "fullName": "sui.node.v2.GetTransactionOptions",
          "description": "Options for which parts of the `GetTransactionResponse` should be returned.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "Include the `sui.types.Transaction` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "transaction_bcs",
              "description": "Include the transaction formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction_bcs",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Include the set of `sui.types.UserSignature`s in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signatures",
              "defaultValue": ""
            },
            {
              "name": "signatures_bytes",
              "description": "Include the set of `UserSignature`s encoded as bytes in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signatures_bytes",
              "defaultValue": ""
            },
            {
              "name": "effects",
              "description": "Include the `sui.types.TransactionEffects` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "effects_bcs",
              "description": "Include the `TransactionEffects` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects_bcs",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "Include the `sui.types.TransactionEvents` message in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events",
              "defaultValue": ""
            },
            {
              "name": "events_bcs",
              "description": "Include the `TransactionEvents` formatted as BCS in the response.\n\nDefaults to `false` if not included.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_bcs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransactionRequest",
          "longName": "GetTransactionRequest",
          "fullName": "sui.node.v2.GetTransactionRequest",
          "description": "Request message for `NodeService.GetTransaction`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "Required. The digest of the requested transaction.",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "options",
              "description": "Optional. Options for specifying which parts of the `GetTransactionResponse`\nshould be returned.",
              "label": "optional",
              "type": "GetTransactionOptions",
              "longType": "GetTransactionOptions",
              "fullType": "sui.node.v2.GetTransactionOptions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_options",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransactionResponse",
          "longName": "GetTransactionResponse",
          "fullName": "sui.node.v2.GetTransactionResponse",
          "description": "Response message for `NodeService.GetTransactio`n.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "The digest of this [Transaction](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.Transaction.html).",
              "label": "optional",
              "type": "Digest",
              "longType": "sui.types.Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "transaction",
              "description": "Optional. The transaction itself.",
              "label": "optional",
              "type": "Transaction",
              "longType": "sui.types.Transaction",
              "fullType": "sui.types.Transaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "transaction_bcs",
              "description": "Optional. The\n[Transaction](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.Transaction.html)\nencoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction_bcs",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Optional. List of user signatures that are used to authorize the\nexecution of this transaction.",
              "label": "optional",
              "type": "UserSignatures",
              "longType": "UserSignatures",
              "fullType": "sui.node.v2.UserSignatures",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signatures",
              "defaultValue": ""
            },
            {
              "name": "signatures_bytes",
              "description": "Optional. List of\n[UserSignature](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.UserSignature.html)s\nencoded as bytes.",
              "label": "optional",
              "type": "UserSignaturesBytes",
              "longType": "UserSignaturesBytes",
              "fullType": "sui.node.v2.UserSignaturesBytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signatures_bytes",
              "defaultValue": ""
            },
            {
              "name": "effects",
              "description": "Optional. The `TransactionEffects` for this transaction.",
              "label": "optional",
              "type": "TransactionEffects",
              "longType": "sui.types.TransactionEffects",
              "fullType": "sui.types.TransactionEffects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "effects_bcs",
              "description": "Optional. The\n[TransactionEffects](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.TransactionEffects.html)\nfor this transaction encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects_bcs",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "Optional. The `TransactionEvents` for this transaction.\n\nThis field might be empty, even if it was explicitly requested, if the\ntransaction didn't produce any events.\n`sui.types.TransactionEffects.events_digest` is populated if the\ntransaction produced any events.",
              "label": "optional",
              "type": "TransactionEvents",
              "longType": "sui.types.TransactionEvents",
              "fullType": "sui.types.TransactionEvents",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events",
              "defaultValue": ""
            },
            {
              "name": "events_bcs",
              "description": "Optional. The\n[TransactionEvents](https://docs.rs/sui-sdk-types/latest/sui_sdk_types/struct.TransactionEvents.html)\nfor this transaction encoded as BCS bytes.",
              "label": "optional",
              "type": "Bcs",
              "longType": "sui.types.Bcs",
              "fullType": "sui.types.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_bcs",
              "defaultValue": ""
            },
            {
              "name": "checkpoint",
              "description": "The sequence number for the checkpoint that includes this transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_checkpoint",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "The Unix timestamp of the checkpoint that includes this transaction.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_timestamp",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserSignatures",
          "longName": "UserSignatures",
          "fullName": "sui.node.v2.UserSignatures",
          "description": "List of `UserSignature`s used to authorize a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signatures",
              "description": "",
              "label": "repeated",
              "type": "UserSignature",
              "longType": "sui.types.UserSignature",
              "fullType": "sui.types.UserSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserSignaturesBytes",
          "longName": "UserSignaturesBytes",
          "fullName": "sui.node.v2.UserSignaturesBytes",
          "description": "List of `UserSignature`s used to authorize a transaction encoded as bytes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "signatures",
              "description": "",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "NodeService",
          "longName": "NodeService",
          "fullName": "sui.node.v2.NodeService",
          "description": "Service for reading data from a Sui Full node.",
          "methods": [
            {
              "name": "GetNodeInfo",
              "description": "Query a node for information about its current state.",
              "requestType": "GetNodeInfoRequest",
              "requestLongType": "GetNodeInfoRequest",
              "requestFullType": "sui.node.v2.GetNodeInfoRequest",
              "requestStreaming": false,
              "responseType": "GetNodeInfoResponse",
              "responseLongType": "GetNodeInfoResponse",
              "responseFullType": "sui.node.v2.GetNodeInfoResponse",
              "responseStreaming": false
            },
            {
              "name": "GetCommittee",
              "description": "Request the validator committee for a particular epoch or for the current\nepoch.",
              "requestType": "GetCommitteeRequest",
              "requestLongType": "GetCommitteeRequest",
              "requestFullType": "sui.node.v2.GetCommitteeRequest",
              "requestStreaming": false,
              "responseType": "GetCommitteeResponse",
              "responseLongType": "GetCommitteeResponse",
              "responseFullType": "sui.node.v2.GetCommitteeResponse",
              "responseStreaming": false
            },
            {
              "name": "GetObject",
              "description": "Request information for the specified object.\n\nUse this API to request an object by its `ObjectId`. The version of\nthe object returned is dependent on if you request a specific version.\nIf you do not request a specific version (GetObjectRequest.version is `None`), \nthen the most recent version (if the\nobject is live) is returned. If you do request a version, that version is\nreturned if it historically existed, is available, and has not been pruned.\n\nDue to storage limitations, implementers of this service might prune older\nhistorical data, which can limit the data availability of this API. To\ndetermine the data availability range for historical objects,\nclients can look at `GetNodeInfoResponse.lowest_available_checkpoint_objects`\nto see the lowest checkpoint for which historical object data is available.",
              "requestType": "GetObjectRequest",
              "requestLongType": "GetObjectRequest",
              "requestFullType": "sui.node.v2.GetObjectRequest",
              "requestStreaming": false,
              "responseType": "GetObjectResponse",
              "responseLongType": "GetObjectResponse",
              "responseFullType": "sui.node.v2.GetObjectResponse",
              "responseStreaming": false
            },
            {
              "name": "GetTransaction",
              "description": "Request information for the specified transaction.\n\nUse this API to request information about a transaction by its digest.\n\nDue to storage limitations, implementers of this service might prune older\nhistorical data, which can limit the data availability of this API. To\ndetermine the data availability range for historical\ntransactions, clients can look at\n`GetNodeInfoResponse.lowest_available_checkpoint` to see the lowest\ncheckpoint for which historical transaction data is available.",
              "requestType": "GetTransactionRequest",
              "requestLongType": "GetTransactionRequest",
              "requestFullType": "sui.node.v2.GetTransactionRequest",
              "requestStreaming": false,
              "responseType": "GetTransactionResponse",
              "responseLongType": "GetTransactionResponse",
              "responseFullType": "sui.node.v2.GetTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "GetCheckpoint",
              "description": "Request information for the specified checkpoint.\n\nUse this API to request information about a checkpoint either by\nits digest or its sequence number (height).\n\nDue to storage limitations, implementers of this service might prune older\nhistorical data, which can limit the data availability of this API. To\ndetermine the data availability range for historical\ncheckpoints, clients can look at\n`GetNodeInfoResponse.lowest_available_checkpoint` to see the lowest\ncheckpoint for which historical checkpoint data is available.",
              "requestType": "GetCheckpointRequest",
              "requestLongType": "GetCheckpointRequest",
              "requestFullType": "sui.node.v2.GetCheckpointRequest",
              "requestStreaming": false,
              "responseType": "GetCheckpointResponse",
              "responseLongType": "GetCheckpointResponse",
              "responseFullType": "sui.node.v2.GetCheckpointResponse",
              "responseStreaming": false
            },
            {
              "name": "GetFullCheckpoint",
              "description": "Request information for the entirety of the specified checkpoint.\n\nUse this API to request information about a checkpoint either by\nits digest or its sequence number (height). In particular, you can use\nthis API to request information about all the transactions included in a\ncheckpoint, as well as their input and output objects.\n\nDue to storage limitations, implementers of this service might prune older\nhistorical data, which can limit the data availability of this API. To\ndetermine the data availability range for historical checkpoints,\nclients can look at `GetNodeInfoResponse.lowest_available_checkpoint`\nto see the lowest checkpoint for which historical\ncheckpoint/transaction data is available and\n`GetNodeInfoResponse.lowest_available_checkpoint_objects` for which\nhistorical object data is available.",
              "requestType": "GetFullCheckpointRequest",
              "requestLongType": "GetFullCheckpointRequest",
              "requestFullType": "sui.node.v2.GetFullCheckpointRequest",
              "requestStreaming": false,
              "responseType": "GetFullCheckpointResponse",
              "responseLongType": "GetFullCheckpointResponse",
              "responseFullType": "sui.node.v2.GetFullCheckpointResponse",
              "responseStreaming": false
            },
            {
              "name": "ExecuteTransaction",
              "description": "Request that the provided transaction be relayed to the validator set for\nexecution and inclusion in the blockchain.",
              "requestType": "ExecuteTransactionRequest",
              "requestLongType": "ExecuteTransactionRequest",
              "requestFullType": "sui.node.v2.ExecuteTransactionRequest",
              "requestStreaming": false,
              "responseType": "ExecuteTransactionResponse",
              "responseLongType": "ExecuteTransactionResponse",
              "responseFullType": "sui.node.v2.ExecuteTransactionResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "sui.types.proto",
      "description": "Protobuf definitions of public Sui core types.\n\nThis file contains a complete set of protobuf definitions for all of the\npublic sui core types. All sui types are intended to have a 1:1 mapping to a\nprotobuf message defined in this file and be able to roundtrip to/from their\nrust and protobuf definitions assuming a sufficiently up-to-date version of\nboth these definitions.\n\nFor more information on the types these proto messages correspond with, see\nthe documentation for their rust versions defined in the\n[`sui-sdk-types`](https://mystenlabs.github.io/sui-rust-sdk/sui_sdk_types/)\nlibrary.\n\n## Use of `optional`\n\nThese message definitions use protobuf version 3 (proto3). In proto3, fields\nthat are primitives (that is, they are not a `message`) and are not present\non the wire are zero-initialized. To gain the ability to detect\n[field presence](https://github.com/protocolbuffers/protobuf/blob/main/docs/field_presence.md),\nthese definitions follow the convention of having all fields marked\n`optional`, and wrapping `repeated` fields in a message as needed.\n\nEven if a field is marked as `optional`, it might not actually be optional from\nthe perspective of the Sui protocol. Such fields are explicitly labled\nas `Required` or `Optional` in their documentation.",
      "package": "sui.types",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "SignatureScheme",
          "longName": "SignatureScheme",
          "fullName": "sui.types.SignatureScheme",
          "description": "Flag use to disambiguate the signature schemes supported by Sui.\n\nNote: the enum values defined by this proto message do not match their BCS\nserialized values. See\n[enum.SignatureScheme](https://mystenlabs.github.io/sui-rust-sdk/sui_sdk_types/enum.SignatureScheme.html)\nfor a mapping to their canonical serialized format.",
          "values": [
            {
              "name": "SIGNATURE_SCHEME_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "SIGNATURE_SCHEME_ED25519",
              "number": "1",
              "description": ""
            },
            {
              "name": "SIGNATURE_SCHEME_SECP256K1",
              "number": "2",
              "description": ""
            },
            {
              "name": "SIGNATURE_SCHEME_SECP256R1",
              "number": "3",
              "description": ""
            },
            {
              "name": "SIGNATURE_SCHEME_MULTISIG",
              "number": "4",
              "description": ""
            },
            {
              "name": "SIGNATURE_SCHEME_BLS12381",
              "number": "5",
              "description": ""
            },
            {
              "name": "SIGNATURE_SCHEME_ZKLOGIN",
              "number": "6",
              "description": ""
            },
            {
              "name": "SIGNATURE_SCHEME_PASSKEY",
              "number": "7",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "ActiveJwk",
          "longName": "ActiveJwk",
          "fullName": "sui.types.ActiveJwk",
          "description": "A new JWK.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Identifier used to uniquely identify a JWK.",
              "label": "optional",
              "type": "JwkId",
              "longType": "JwkId",
              "fullType": "sui.types.JwkId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "jwk",
              "description": "The JWK.",
              "label": "optional",
              "type": "Jwk",
              "longType": "Jwk",
              "fullType": "sui.types.Jwk",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_jwk",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Most recent epoch in which the JWK was validated.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Address",
          "longName": "Address",
          "fullName": "sui.types.Address",
          "description": "Unique identifier for an account on the Sui blockchain.\n\nAn `Address` is a 32-byte pseudonymous identifier used to uniquely identify an account and\nasset-ownership on the Sui blockchain. Often, human-readable addresses are encoded in\nhexadecimal with a `0x` prefix. For example, this is a valid Sui address:\n`0x02a212de6a9dfa3a69e22387acfbafbb1a9e591bd9d636e7895dcfc8de05f331`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Required. 32-byte address.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AddressDeniedForCoinError",
          "longName": "AddressDeniedForCoinError",
          "fullName": "sui.types.AddressDeniedForCoinError",
          "description": "Address is denied for this coin type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Required. Denied address.",
              "label": "optional",
              "type": "Address",
              "longType": "Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            },
            {
              "name": "coin_type",
              "description": "Required. Coin type.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Argument",
          "longName": "Argument",
          "fullName": "sui.types.Argument",
          "description": "An argument to a programmable transaction command.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "gas",
              "description": "The gas coin. The gas coin can only be used by-ref, except for with\n`TransferObjects`, which can use it by-value.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "input",
              "description": "One of the input objects or primitive values (from\n`ProgrammableTransaction` inputs).",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "result",
              "description": "The result of another command (from `ProgrammableTransaction` commands).",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "nested_result",
              "description": "Like a `Result` but it accesses a nested result. Currently, the only usage\nof this is to access a value from a Move call with multiple return values.",
              "label": "",
              "type": "NestedResult",
              "longType": "NestedResult",
              "fullType": "sui.types.NestedResult",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuthenticatorStateExpire",
          "longName": "AuthenticatorStateExpire",
          "fullName": "sui.types.AuthenticatorStateExpire",
          "description": "Expire old JWKs.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "min_epoch",
              "description": "Expire JWKs that have a lower epoch than this.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_min_epoch",
              "defaultValue": ""
            },
            {
              "name": "authenticator_object_initial_shared_version",
              "description": "The initial version of the authenticator object that it was shared at.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_authenticator_object_initial_shared_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuthenticatorStateUpdate",
          "longName": "AuthenticatorStateUpdate",
          "fullName": "sui.types.AuthenticatorStateUpdate",
          "description": "Update the set of valid JWKs.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Epoch of the authenticator state update transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "round",
              "description": "Consensus round of the authenticator state update.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_round",
              "defaultValue": ""
            },
            {
              "name": "new_active_jwks",
              "description": "Newly active JWKs.",
              "label": "repeated",
              "type": "ActiveJwk",
              "longType": "ActiveJwk",
              "fullType": "sui.types.ActiveJwk",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticator_object_initial_shared_version",
              "description": "The initial version of the authenticator object that it was shared at.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_authenticator_object_initial_shared_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Bcs",
          "longName": "Bcs",
          "fullName": "sui.types.Bcs",
          "description": "Message that represents a type that is serialized and encoded using the\n[BCS](https://mystenlabs.github.io/sui-rust-sdk/sui_sdk_types/index.html#bcs)\nformat.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bcs",
              "description": "Required. Bytes of a BCS encoded value.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bcs",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Bn254FieldElement",
          "longName": "Bn254FieldElement",
          "fullName": "sui.types.Bn254FieldElement",
          "description": "A point on the BN254 elliptic curve.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "element",
              "description": "Required. 32-byte big-endian field element.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_element",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CancelledTransaction",
          "longName": "CancelledTransaction",
          "fullName": "sui.types.CancelledTransaction",
          "description": "A transaction that was cancelled.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "Digest of the cancelled transaction.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "version_assignments",
              "description": "List of object version assignments.",
              "label": "repeated",
              "type": "VersionAssignment",
              "longType": "VersionAssignment",
              "fullType": "sui.types.VersionAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CancelledTransactions",
          "longName": "CancelledTransactions",
          "fullName": "sui.types.CancelledTransactions",
          "description": "Set of cancelled transactions.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "cancelled_transactions",
              "description": "",
              "label": "repeated",
              "type": "CancelledTransaction",
              "longType": "CancelledTransaction",
              "fullType": "sui.types.CancelledTransaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ChangeEpoch",
          "longName": "ChangeEpoch",
          "fullName": "sui.types.ChangeEpoch",
          "description": "System transaction used to change the epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "The next (to become) epoch ID.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "protocol_version",
              "description": "The protocol version in effect in the new epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_protocol_version",
              "defaultValue": ""
            },
            {
              "name": "storage_charge",
              "description": "The total amount of gas charged for storage during the epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_charge",
              "defaultValue": ""
            },
            {
              "name": "computation_charge",
              "description": "The total amount of gas charged for computation during the epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_computation_charge",
              "defaultValue": ""
            },
            {
              "name": "storage_rebate",
              "description": "The amount of storage rebate refunded to the txn senders.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_rebate",
              "defaultValue": ""
            },
            {
              "name": "non_refundable_storage_fee",
              "description": "The non-refundable storage fee.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_non_refundable_storage_fee",
              "defaultValue": ""
            },
            {
              "name": "epoch_start_timestamp_ms",
              "description": "Unix timestamp when epoch started.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_start_timestamp_ms",
              "defaultValue": ""
            },
            {
              "name": "system_packages",
              "description": "System packages (specifically framework and Move stdlib) that are written before the new\nepoch starts. This tracks framework upgrades on chain. When executing the `ChangeEpoch` txn,\nthe validator must write out the following modules.  Modules are provided with the version they\nwill be upgraded to, their modules in serialized form (which include their package ID), and\na list of their transitive dependencies.",
              "label": "repeated",
              "type": "SystemPackage",
              "longType": "SystemPackage",
              "fullType": "sui.types.SystemPackage",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ChangedObject",
          "longName": "ChangedObject",
          "fullName": "sui.types.ChangedObject",
          "description": "Input/output state of an object that was changed during execution.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "Required. ID of the object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "not_exist",
              "description": "Object did not exist prior to this transaction.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "input_state",
              "defaultValue": ""
            },
            {
              "name": "exist",
              "description": "Object existed prior to this transaction.",
              "label": "",
              "type": "ObjectExist",
              "longType": "ObjectExist",
              "fullType": "sui.types.ObjectExist",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "input_state",
              "defaultValue": ""
            },
            {
              "name": "removed",
              "description": "Object was removed from the store due to this transaction.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "output_state",
              "defaultValue": ""
            },
            {
              "name": "object_write",
              "description": "Object was written, including all of mutated, created, unwrapped.",
              "label": "",
              "type": "ObjectWrite",
              "longType": "ObjectWrite",
              "fullType": "sui.types.ObjectWrite",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "output_state",
              "defaultValue": ""
            },
            {
              "name": "package_write",
              "description": "Package was written.",
              "label": "",
              "type": "PackageWrite",
              "longType": "PackageWrite",
              "fullType": "sui.types.PackageWrite",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "output_state",
              "defaultValue": ""
            },
            {
              "name": "none",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "id_operation",
              "defaultValue": ""
            },
            {
              "name": "created",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "id_operation",
              "defaultValue": ""
            },
            {
              "name": "deleted",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "id_operation",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointCommitment",
          "longName": "CheckpointCommitment",
          "fullName": "sui.types.CheckpointCommitment",
          "description": "A commitment made by a checkpoint.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "ecmh_live_object_set",
              "description": "An elliptic curve multiset hash attesting to the set of objects that comprise the live\nstate of the Sui blockchain.",
              "label": "",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "commitment",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointContents",
          "longName": "CheckpointContents",
          "fullName": "sui.types.CheckpointContents",
          "description": "The committed to contents of a checkpoint.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "v1",
              "description": "",
              "label": "",
              "type": "V1",
              "longType": "CheckpointContents.V1",
              "fullType": "sui.types.CheckpointContents.V1",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "contents",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "V1",
          "longName": "CheckpointContents.V1",
          "fullName": "sui.types.CheckpointContents.V1",
          "description": "Version 1 of `CheckpointContents`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transactions",
              "description": "",
              "label": "repeated",
              "type": "CheckpointedTransactionInfo",
              "longType": "CheckpointedTransactionInfo",
              "fullType": "sui.types.CheckpointedTransactionInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointSummary",
          "longName": "CheckpointSummary",
          "fullName": "sui.types.CheckpointSummary",
          "description": "A header for a checkpoint on the Sui blockchain.\n\nOn the Sui network, checkpoints define the history of the blockchain. They are quite similar to\nthe concept of blocks used by other blockchains like Bitcoin or Ethereum. The Sui blockchain,\nhowever, forms checkpoints after transaction execution has already happened to provide a\ncertified history of the chain, instead of being formed before execution.\n\nCheckpoints commit to a variety of state, including but not limited to:\n- The hash of the previous checkpoint.\n- The set of transaction digests, their corresponding effects digests, as well as the set of\n  user signatures that authorized its execution.\n- The objects produced by a transaction.\n- The set of live objects that make up the current state of the chain.\n- On epoch transitions, the next validator committee.\n\n`CheckpointSummary`s themselves don't directly include all of the previous information but they\nare the top-level type by which all the information is committed to transitively via cryptographic\nhashes included in the summary. `CheckpointSummary`s are signed and certified by a quorum of\nthe validator committee in a given epoch to allow verification of the chain's state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Epoch that this checkpoint belongs to.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "The height of this checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sequence_number",
              "defaultValue": ""
            },
            {
              "name": "total_network_transactions",
              "description": "Total number of transactions committed since genesis, including those in this\ncheckpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_total_network_transactions",
              "defaultValue": ""
            },
            {
              "name": "content_digest",
              "description": "The hash of the `CheckpointContents` for this checkpoint.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_content_digest",
              "defaultValue": ""
            },
            {
              "name": "previous_digest",
              "description": "The hash of the previous `CheckpointSummary`.\n\nThis will be `None` only for the first, or genesis, checkpoint.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_previous_digest",
              "defaultValue": ""
            },
            {
              "name": "epoch_rolling_gas_cost_summary",
              "description": "The running total gas costs of all transactions included in the current epoch so far\nuntil this checkpoint.",
              "label": "optional",
              "type": "GasCostSummary",
              "longType": "GasCostSummary",
              "fullType": "sui.types.GasCostSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_rolling_gas_cost_summary",
              "defaultValue": ""
            },
            {
              "name": "timestamp_ms",
              "description": "Timestamp of the checkpoint - number of milliseconds from the Unix epoch\nCheckpoint timestamps are monotonic, but not strongly monotonic - subsequent\ncheckpoints can have the same timestamp if they originate from the same underlining consensus commit.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_timestamp_ms",
              "defaultValue": ""
            },
            {
              "name": "commitments",
              "description": "Commitments to checkpoint-specific state.",
              "label": "repeated",
              "type": "CheckpointCommitment",
              "longType": "CheckpointCommitment",
              "fullType": "sui.types.CheckpointCommitment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_of_epoch_data",
              "description": "Extra data only present in the final checkpoint of an epoch.",
              "label": "optional",
              "type": "EndOfEpochData",
              "longType": "EndOfEpochData",
              "fullType": "sui.types.EndOfEpochData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_of_epoch_data",
              "defaultValue": ""
            },
            {
              "name": "version_specific_data",
              "description": "`CheckpointSummary` is not an evolvable structure - it must be readable by any version of\nthe code. Therefore, to allow extensions to be added to `CheckpointSummary`,\nopaque data can be added to checkpoints, which can be deserialized based on the current\nprotocol version.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version_specific_data",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointedTransactionInfo",
          "longName": "CheckpointedTransactionInfo",
          "fullName": "sui.types.CheckpointedTransactionInfo",
          "description": "Transaction information committed to in a checkpoint.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "Digest of the transaction.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "effects",
              "description": "Digest of the effects.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Set of user signatures that authorized the transaction.",
              "label": "repeated",
              "type": "UserSignature",
              "longType": "UserSignature",
              "fullType": "sui.types.UserSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CircomG1",
          "longName": "CircomG1",
          "fullName": "sui.types.CircomG1",
          "description": "A G1 point.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "e0",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e0",
              "defaultValue": ""
            },
            {
              "name": "e1",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e1",
              "defaultValue": ""
            },
            {
              "name": "e2",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e2",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CircomG2",
          "longName": "CircomG2",
          "fullName": "sui.types.CircomG2",
          "description": "A G2 point.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "e00",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e00",
              "defaultValue": ""
            },
            {
              "name": "e01",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e01",
              "defaultValue": ""
            },
            {
              "name": "e10",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e10",
              "defaultValue": ""
            },
            {
              "name": "e11",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e11",
              "defaultValue": ""
            },
            {
              "name": "e20",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e20",
              "defaultValue": ""
            },
            {
              "name": "e21",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e21",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Command",
          "longName": "Command",
          "fullName": "sui.types.Command",
          "description": "A single command in a programmable transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "move_call",
              "description": "A call to either an entry or a public Move function.",
              "label": "",
              "type": "MoveCall",
              "longType": "MoveCall",
              "fullType": "sui.types.MoveCall",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "transfer_objects",
              "description": "`(Vec\u003cforall T:key+store. T\u003e, address)`\nIt sends n-objects to the specified address. These objects must have store\n(public transfer) and either the previous owner must be an address or the object must\nbe newly created.",
              "label": "",
              "type": "TransferObjects",
              "longType": "TransferObjects",
              "fullType": "sui.types.TransferObjects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "split_coins",
              "description": "`(\u0026mut Coin\u003cT\u003e, Vec\u003cu64\u003e)` -\u003e `Vec\u003cCoin\u003cT\u003e\u003e`\nIt splits off some amounts into new coins with those amounts.",
              "label": "",
              "type": "SplitCoins",
              "longType": "SplitCoins",
              "fullType": "sui.types.SplitCoins",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "merge_coins",
              "description": "`(\u0026mut Coin\u003cT\u003e, Vec\u003cCoin\u003cT\u003e\u003e)`\nIt merges n-coins into the first coin.",
              "label": "",
              "type": "MergeCoins",
              "longType": "MergeCoins",
              "fullType": "sui.types.MergeCoins",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "publish",
              "description": "Publishes a Move package. It takes the package bytes and a list of the package's transitive\ndependencies to link against on chain.",
              "label": "",
              "type": "Publish",
              "longType": "Publish",
              "fullType": "sui.types.Publish",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "make_move_vector",
              "description": "`forall T: Vec\u003cT\u003e -\u003e vector\u003cT\u003e`\nGiven n-values of the same type, it constructs a vector. For non-objects or an empty vector,\nthe type tag must be specified.",
              "label": "",
              "type": "MakeMoveVector",
              "longType": "MakeMoveVector",
              "fullType": "sui.types.MakeMoveVector",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "upgrade",
              "description": "Upgrades a Move package.\nTakes (in order):\n1. A vector of serialized modules for the package.\n2. A vector of object ids for the transitive dependencies of the new package.\n3. The object ID of the package being upgraded.\n4. An argument holding the `UpgradeTicket` that must have been produced from an earlier command in the same\n   programmable transaction.",
              "label": "",
              "type": "Upgrade",
              "longType": "Upgrade",
              "fullType": "sui.types.Upgrade",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CommandArgumentError",
          "longName": "CommandArgumentError",
          "fullName": "sui.types.CommandArgumentError",
          "description": "An error with an argument to a command.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "argument",
              "description": "Required. Position of the problematic argument.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_argument",
              "defaultValue": ""
            },
            {
              "name": "type_mismatch",
              "description": "The type of the value does not match the expected type.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "invalid_bcs_bytes",
              "description": "The argument cannot be deserialized into a value of the specified type.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "invalid_usage_of_pure_argument",
              "description": "The argument cannot be instantiated from raw bytes.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "invalid_argument_to_private_entry_function",
              "description": "Invalid argument to private entry function.\nPrivate entry functions cannot take arguments from other Move functions.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "index_out_of_bounds",
              "description": "Out of bounds access to input or results.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "secondary_index_out_of_bounds",
              "description": "Out of bounds access to subresult.",
              "label": "",
              "type": "NestedResult",
              "longType": "NestedResult",
              "fullType": "sui.types.NestedResult",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "invalid_result_arity",
              "description": "Invalid usage of result.\nExpected a single result but found either no return value or multiple.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "invalid_gas_coin_usage",
              "description": "Invalid usage of gas coin.\nThe gas coin can only be used by-value with a `TransferObject` command.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "invalid_value_usage",
              "description": "Invalid usage of Move value.\n   - Mutably borrowed values require unique usage.\n   - Immutably borrowed values cannot be taken or borrowed mutably.\n   - Taken values cannot be used again.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "invalid_object_by_value",
              "description": "Immutable objects cannot be passed by-value.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "invalid_object_by_mut_ref",
              "description": "Immutable objects cannot be passed by mutable reference, `\u0026mut`.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "shared_object_operation_not_allowed",
              "description": "Shared object operations such as wrapping, freezing, or converting to owned are not\nallowed.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CongestedObjectsError",
          "longName": "CongestedObjectsError",
          "fullName": "sui.types.CongestedObjectsError",
          "description": "Set of objects that were congested, leading to the transaction's cancellation.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "congested_objects",
              "description": "Set of congested objects.",
              "label": "repeated",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ConsensusCommitPrologue",
          "longName": "ConsensusCommitPrologue",
          "fullName": "sui.types.ConsensusCommitPrologue",
          "description": "Consensus commit prologue system transaction.\n\nThis message can represent V1, V2, and V3 prologue types.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Epoch of the commit prologue transaction.\n\nPresent in V1, V2, and V3.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "round",
              "description": "Consensus round of the commit.\n\nPresent in V1, V2, and V3.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_round",
              "defaultValue": ""
            },
            {
              "name": "commit_timestamp_ms",
              "description": "Unix timestamp from consensus.\n\nPresent in V1, V2, and V3.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_commit_timestamp_ms",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_digest",
              "description": "Digest of consensus output.\n\nPresent in V2 and V3.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_consensus_commit_digest",
              "defaultValue": ""
            },
            {
              "name": "sub_dag_index",
              "description": "The sub DAG index of the consensus commit. This field is populated if there\nare multiple consensus commits per round.\n\nPresent in V3.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sub_dag_index",
              "defaultValue": ""
            },
            {
              "name": "consensus_determined_version_assignments",
              "description": "Stores consensus handler determined shared object version assignments.\n\nPresent in V3.",
              "label": "optional",
              "type": "ConsensusDeterminedVersionAssignments",
              "longType": "ConsensusDeterminedVersionAssignments",
              "fullType": "sui.types.ConsensusDeterminedVersionAssignments",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_consensus_determined_version_assignments",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ConsensusDeterminedVersionAssignments",
          "longName": "ConsensusDeterminedVersionAssignments",
          "fullName": "sui.types.ConsensusDeterminedVersionAssignments",
          "description": "Version assignments performed by consensus.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "cancelled_transactions",
              "description": "Cancelled transaction version assignment.",
              "label": "",
              "type": "CancelledTransactions",
              "longType": "CancelledTransactions",
              "fullType": "sui.types.CancelledTransactions",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Digest",
          "longName": "Digest",
          "fullName": "sui.types.Digest",
          "description": "32-byte output of hashing a Sui structure using the Blake2b256 hash function.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "Required. 32-byte hash.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EndOfEpochData",
          "longName": "EndOfEpochData",
          "fullName": "sui.types.EndOfEpochData",
          "description": "Data, which when included in a `CheckpointSummary`, signals the end of an `Epoch`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "next_epoch_committee",
              "description": "The set of validators that will be in the `ValidatorCommittee` for the next epoch.",
              "label": "repeated",
              "type": "ValidatorCommitteeMember",
              "longType": "ValidatorCommitteeMember",
              "fullType": "sui.types.ValidatorCommitteeMember",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_protocol_version",
              "description": "The protocol version that is in effect during the next epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_protocol_version",
              "defaultValue": ""
            },
            {
              "name": "epoch_commitments",
              "description": "Commitments to epoch specific state (live object set)",
              "label": "repeated",
              "type": "CheckpointCommitment",
              "longType": "CheckpointCommitment",
              "fullType": "sui.types.CheckpointCommitment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EndOfEpochTransaction",
          "longName": "EndOfEpochTransaction",
          "fullName": "sui.types.EndOfEpochTransaction",
          "description": "Set of operations run at the end of the epoch to close out the current epoch\nand start the next one.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transactions",
              "description": "",
              "label": "repeated",
              "type": "EndOfEpochTransactionKind",
              "longType": "EndOfEpochTransactionKind",
              "fullType": "sui.types.EndOfEpochTransactionKind",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EndOfEpochTransactionKind",
          "longName": "EndOfEpochTransactionKind",
          "fullName": "sui.types.EndOfEpochTransactionKind",
          "description": "Operation run at the end of an epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "change_epoch",
              "description": "End the epoch and start the next one.",
              "label": "",
              "type": "ChangeEpoch",
              "longType": "ChangeEpoch",
              "fullType": "sui.types.ChangeEpoch",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "authenticator_state_expire",
              "description": "Expire JWKs used for zklogin.",
              "label": "",
              "type": "AuthenticatorStateExpire",
              "longType": "AuthenticatorStateExpire",
              "fullType": "sui.types.AuthenticatorStateExpire",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "authenticator_state_create",
              "description": "Create and initialize the authenticator object used for zklogin.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "randomness_state_create",
              "description": "Create and initialize the randomness object.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "deny_list_state_create",
              "description": "Create and initialize the deny list object.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "bridge_state_create",
              "description": "Create and initialize the bridge object.",
              "label": "",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "bridge_committee_init",
              "description": "Initialize the bridge committee.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Event",
          "longName": "Event",
          "fullName": "sui.types.Event",
          "description": "An event.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package_id",
              "description": "Package ID of the top-level function invoked by a `MoveCall` command that triggered this\nevent to be emitted.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            },
            {
              "name": "module",
              "description": "Module name of the top-level function invoked by a `MoveCall` command that triggered this\nevent to be emitted.",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module",
              "defaultValue": ""
            },
            {
              "name": "sender",
              "description": "Address of the account that sent the transaction where this event was emitted.",
              "label": "optional",
              "type": "Address",
              "longType": "Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sender",
              "defaultValue": ""
            },
            {
              "name": "event_type",
              "description": "The type of the event emitted.",
              "label": "optional",
              "type": "StructTag",
              "longType": "StructTag",
              "fullType": "sui.types.StructTag",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_event_type",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "BCS serialized bytes of the event.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecutionStatus",
          "longName": "ExecutionStatus",
          "fullName": "sui.types.ExecutionStatus",
          "description": "The status of an executed transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Required. Indicates if the transaction was successful or not.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_success",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Optional. The error if `success` is false.",
              "label": "optional",
              "type": "FailureStatus",
              "longType": "FailureStatus",
              "fullType": "sui.types.FailureStatus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FailureStatus",
          "longName": "FailureStatus",
          "fullName": "sui.types.FailureStatus",
          "description": "An error that can occur during the execution of a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "command",
              "description": "The command, if any, during which the error occurred.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_command",
              "defaultValue": ""
            },
            {
              "name": "insufficient_gas",
              "description": "Insufficient gas.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "invalid_gas_object",
              "description": "Invalid `Gas` object.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "invariant_violation",
              "description": "Invariant violation.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "feature_not_yet_supported",
              "description": "Attempted to use feature that is not supported yet.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "object_too_big",
              "description": "Move object is larger than the maximum allowed size.",
              "label": "",
              "type": "SizeError",
              "longType": "SizeError",
              "fullType": "sui.types.SizeError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "package_too_big",
              "description": "Package is larger than the maximum allowed size.",
              "label": "",
              "type": "SizeError",
              "longType": "SizeError",
              "fullType": "sui.types.SizeError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "circular_object_ownership",
              "description": "Circular object ownership.",
              "label": "",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "insufficient_coin_balance",
              "description": "Coin errors.\n\nInsufficient coin balance for requested operation.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "coin_balance_overflow",
              "description": "Coin balance overflowed an u64.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "publish_error_non_zero_address",
              "description": "Publish/Upgrade errors.\n\nPublish error, non-zero address.\nThe modules in the package must have their self-addresses set to zero.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "sui_move_verification_error",
              "description": "Sui Move bytecode verification error.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "move_primitive_runtime_error",
              "description": "MoveVm errors.\n\nError from a non-abort instruction.\nPossible causes:\n    Arithmetic error, stack overflow, max value depth, or similar.",
              "label": "",
              "type": "MoveError",
              "longType": "MoveError",
              "fullType": "sui.types.MoveError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "move_abort",
              "description": "Move runtime abort.",
              "label": "",
              "type": "MoveError",
              "longType": "MoveError",
              "fullType": "sui.types.MoveError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "vm_verification_or_deserialization_error",
              "description": "Bytecode verification error.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "vm_invariant_violation",
              "description": "MoveVm invariant violation.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "function_not_found",
              "description": "Programmable transaction errors.\n\nFunction not found.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "arity_mismatch",
              "description": "Parity mismatch for Move function.\nThe number of arguments does not match the number of parameters.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "type_arity_mismatch",
              "description": "Type parity mismatch for Move function.\nMismatch between the number of actual versus expected type arguments.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "non_entry_function_invoked",
              "description": "Non-entry function invoked. Move Call must start with an entry function.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "command_argument_error",
              "description": "Invalid command argument.",
              "label": "",
              "type": "CommandArgumentError",
              "longType": "CommandArgumentError",
              "fullType": "sui.types.CommandArgumentError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "type_argument_error",
              "description": "Type argument error.",
              "label": "",
              "type": "TypeArgumentError",
              "longType": "TypeArgumentError",
              "fullType": "sui.types.TypeArgumentError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "unused_value_without_drop",
              "description": "Unused result without the drop ability.",
              "label": "",
              "type": "NestedResult",
              "longType": "NestedResult",
              "fullType": "sui.types.NestedResult",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "invalid_public_function_return_type",
              "description": "Invalid public Move function signature.\nUnsupported return type for return value.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "invalid_transfer_object",
              "description": "Invalid transfer object, object does not have public transfer.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "effects_too_large",
              "description": "Post-execution errors.\n\nEffects from the transaction are too large.",
              "label": "",
              "type": "SizeError",
              "longType": "SizeError",
              "fullType": "sui.types.SizeError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "publish_upgrade_missing_dependency",
              "description": "Publish or Upgrade is missing dependency.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "publish_upgrade_dependency_downgrade",
              "description": "Publish or upgrade dependency downgrade.\n\nIndirect (transitive) dependency of published or upgraded package has been assigned an\non-chain version that is less than the version required by one of the package's\ntransitive dependencies.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "package_upgrade_error",
              "description": "Invalid package upgrade.",
              "label": "",
              "type": "PackageUpgradeError",
              "longType": "PackageUpgradeError",
              "fullType": "sui.types.PackageUpgradeError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "written_objects_too_large",
              "description": "Indicates the transaction tried to write objects too large to storage.",
              "label": "",
              "type": "SizeError",
              "longType": "SizeError",
              "fullType": "sui.types.SizeError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "certificate_denied",
              "description": "Certificate is on the deny list.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "sui_move_verification_timedout",
              "description": "Sui Move bytecode verification timed out.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "shared_object_operation_not_allowed",
              "description": "The requested shared object operation is not allowed.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "input_object_deleted",
              "description": "Requested shared object has been deleted.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "execution_cancelled_due_to_shared_object_congestion",
              "description": "Certificate is cancelled due to congestion on shared objects.",
              "label": "",
              "type": "CongestedObjectsError",
              "longType": "CongestedObjectsError",
              "fullType": "sui.types.CongestedObjectsError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "address_denied_for_coin",
              "description": "Address is denied for this coin type.",
              "label": "",
              "type": "AddressDeniedForCoinError",
              "longType": "AddressDeniedForCoinError",
              "fullType": "sui.types.AddressDeniedForCoinError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "coin_type_global_pause",
              "description": "Coin type is globally paused for use.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            },
            {
              "name": "execution_cancelled_due_to_randomness_unavailable",
              "description": "Certificate is cancelled because randomness could not be generated this epoch.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "execution_error",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GasCostSummary",
          "longName": "GasCostSummary",
          "fullName": "sui.types.GasCostSummary",
          "description": "Summary of gas charges.\n\nStorage is charged independently of computation.\nThere are three parts to the storage charges:\n- `storage_cost`: the charge of storage at the time the transaction is executed.\n                The cost of storage is the number of bytes of the objects being mutated\n                multiplied by a variable storage cost per byte.\n- `storage_rebate`: the amount a user gets back when manipulating an object.\n                  The `storage_rebate` is the `storage_cost` for an object minus fees.\n- `non_refundable_storage_fee`: not all the value of the object storage cost is\n                              given back to user and there is a small fraction that\n                              is kept by the system. This value tracks that charge.\n\nWhen looking at a gas cost summary the amount charged to the user is\n`computation_cost + storage_cost - storage_rebate`\nand that is the amount that is deducted from the gas coins.\n`non_refundable_storage_fee` is collected from the objects being mutated/deleted\nand it is tracked by the system in storage funds.\n\nObjects deleted, including the older versions of objects mutated, have the storage field\non the objects added up to a pool of \"potential rebate\". This rebate then is reduced\nby the \"nonrefundable rate\" such that:\n`potential_rebate(storage cost of deleted/mutated objects) =\nstorage_rebate + non_refundable_storage_fee`",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "computation_cost",
              "description": "Cost of computation/execution.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_computation_cost",
              "defaultValue": ""
            },
            {
              "name": "storage_cost",
              "description": "Storage cost, it's the sum of all storage cost for all objects created or mutated.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_cost",
              "defaultValue": ""
            },
            {
              "name": "storage_rebate",
              "description": "The amount of storage cost refunded to the user for all objects deleted or mutated in the\ntransaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_rebate",
              "defaultValue": ""
            },
            {
              "name": "non_refundable_storage_fee",
              "description": "The fee for the rebate. The portion of the storage rebate kept by the system.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_non_refundable_storage_fee",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GasPayment",
          "longName": "GasPayment",
          "fullName": "sui.types.GasPayment",
          "description": "Payment information for executing a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "Set of gas objects to use for payment.",
              "label": "repeated",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.types.ObjectReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Owner of the gas objects, either the transaction sender or a sponsor.",
              "label": "optional",
              "type": "Address",
              "longType": "Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Gas unit price to use when charging for computation.\n\nMust be greater than or equal to the network's current RGP (reference gas price).",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_price",
              "defaultValue": ""
            },
            {
              "name": "budget",
              "description": "Total budget willing to spend for the execution of a transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_budget",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GenesisObject",
          "longName": "GenesisObject",
          "fullName": "sui.types.GenesisObject",
          "description": "An object part of the initial chain state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "",
              "label": "optional",
              "type": "Owner",
              "longType": "Owner",
              "fullType": "sui.types.Owner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "object",
              "description": "",
              "label": "optional",
              "type": "ObjectData",
              "longType": "ObjectData",
              "fullType": "sui.types.ObjectData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GenesisTransaction",
          "longName": "GenesisTransaction",
          "fullName": "sui.types.GenesisTransaction",
          "description": "The genesis transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "Set of genesis objects.",
              "label": "repeated",
              "type": "GenesisObject",
              "longType": "GenesisObject",
              "fullType": "sui.types.GenesisObject",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "I128",
          "longName": "I128",
          "fullName": "sui.types.I128",
          "description": "A signed 128-bit integer encoded in little-endian using 16-bytes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bytes",
              "description": "Required. 16-byte little-endian bytes.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bytes",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Identifier",
          "longName": "Identifier",
          "fullName": "sui.types.Identifier",
          "description": "A Move identifier.\n\nIdentifiers are only valid if they conform to the following ABNF:\n\n```text\nidentifier = (ALPHA *127(ALPHA / DIGIT / UNDERSCORE)) /\n             (UNDERSCORE 1*127(ALPHA / DIGIT / UNDERSCORE))\nUNDERSCORE = %x95\n```",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "identifier",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_identifier",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Input",
          "longName": "Input",
          "fullName": "sui.types.Input",
          "description": "An input to a user transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "pure",
              "description": "A move value serialized as BCS.\n\nFor normal operations this is required to be a move primitive type and not contain structs\nor objects.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "immutable_or_owned",
              "description": "A Move object that is either immutable or address owned.",
              "label": "",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.types.ObjectReference",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "shared",
              "description": "A Move object whose owner is \"Shared\".",
              "label": "",
              "type": "SharedObjectInput",
              "longType": "SharedObjectInput",
              "fullType": "sui.types.SharedObjectInput",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "receiving",
              "description": "A Move object that is attempted to be received in this transaction.",
              "label": "",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.types.ObjectReference",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Jwk",
          "longName": "Jwk",
          "fullName": "sui.types.Jwk",
          "description": "A JSON web key.\n\nStruct that contains info for a JWK. A list of them for different kinds can\nbe retrieved from the JWK endpoint (for example, \u003chttps://www.googleapis.com/oauth2/v3/certs\u003e).\nThe JWK is used to verify the JWT token.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kty",
              "description": "Key type parameter, https://datatracker.ietf.org/doc/html/rfc7517#section-4.1.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kty",
              "defaultValue": ""
            },
            {
              "name": "e",
              "description": "RSA public exponent, https://datatracker.ietf.org/doc/html/rfc7517#section-9.3.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e",
              "defaultValue": ""
            },
            {
              "name": "n",
              "description": "RSA modulus, https://datatracker.ietf.org/doc/html/rfc7517#section-9.3.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_n",
              "defaultValue": ""
            },
            {
              "name": "alg",
              "description": "Algorithm parameter, https://datatracker.ietf.org/doc/html/rfc7517#section-4.4.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_alg",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "JwkId",
          "longName": "JwkId",
          "fullName": "sui.types.JwkId",
          "description": "Key to uniquely identify a JWK.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "iss",
              "description": "The issuer or identity of the OIDC provider.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_iss",
              "defaultValue": ""
            },
            {
              "name": "kid",
              "description": "A key ID used to uniquely identify a key from an OIDC provider.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kid",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MakeMoveVector",
          "longName": "MakeMoveVector",
          "fullName": "sui.types.MakeMoveVector",
          "description": "Command to build a Move vector out of a set of individual elements.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "element_type",
              "description": "Type of the individual elements.\n\nThis is required to be set when the type can't be inferred, for example when the set of\nprovided arguments are all pure input values.",
              "label": "optional",
              "type": "TypeTag",
              "longType": "TypeTag",
              "fullType": "sui.types.TypeTag",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_element_type",
              "defaultValue": ""
            },
            {
              "name": "elements",
              "description": "The set individual elements to build the vector with.",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MergeCoins",
          "longName": "MergeCoins",
          "fullName": "sui.types.MergeCoins",
          "description": "Command to merge multiple coins of the same type into a single coin.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "coin",
              "description": "Coin to merge coins into.",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin",
              "defaultValue": ""
            },
            {
              "name": "coins_to_merge",
              "description": "Set of coins to merge into `coin`.\n\nAll listed coins must be of the same type and be the same type as `coin`",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ModifiedAtVersion",
          "longName": "ModifiedAtVersion",
          "fullName": "sui.types.ModifiedAtVersion",
          "description": "Indicates that an object was modified at a specific version.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "Required. `ObjectId` of the object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Required. Version of the object prior to this transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveCall",
          "longName": "MoveCall",
          "fullName": "sui.types.MoveCall",
          "description": "Command to call a Move function.\n\nFunctions that can be called by a `MoveCall` command are those that have a function signature\nthat is either `entry` or `public` (which don't have a reference return type).",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package",
              "description": "The package containing the module and function.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package",
              "defaultValue": ""
            },
            {
              "name": "module",
              "description": "The specific module in the package containing the function.",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module",
              "defaultValue": ""
            },
            {
              "name": "function",
              "description": "The function to be called.",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_function",
              "defaultValue": ""
            },
            {
              "name": "type_arguments",
              "description": "The type arguments to the function.",
              "label": "repeated",
              "type": "TypeTag",
              "longType": "TypeTag",
              "fullType": "sui.types.TypeTag",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "arguments",
              "description": "The arguments to the function.",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveError",
          "longName": "MoveError",
          "fullName": "sui.types.MoveError",
          "description": "Error that occurred in Move.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "location",
              "description": "Location in Move where the error occurred.",
              "label": "optional",
              "type": "MoveLocation",
              "longType": "MoveLocation",
              "fullType": "sui.types.MoveLocation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_location",
              "defaultValue": ""
            },
            {
              "name": "abort_code",
              "description": "Abort code from Move.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_abort_code",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveField",
          "longName": "MoveField",
          "fullName": "sui.types.MoveField",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "optional",
              "type": "MoveValue",
              "longType": "MoveValue",
              "fullType": "sui.types.MoveValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveLocation",
          "longName": "MoveLocation",
          "fullName": "sui.types.MoveLocation",
          "description": "Location in Move bytecode where an error occurred.s",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package",
              "description": "Required. The package ID.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package",
              "defaultValue": ""
            },
            {
              "name": "module",
              "description": "Required. The module name.",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module",
              "defaultValue": ""
            },
            {
              "name": "function",
              "description": "Required. The function index.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_function",
              "defaultValue": ""
            },
            {
              "name": "instruction",
              "description": "Required. Offset of the instruction where the error occurred.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_instruction",
              "defaultValue": ""
            },
            {
              "name": "function_name",
              "description": "Optional. The name of the function, if available.",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_function_name",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveModule",
          "longName": "MoveModule",
          "fullName": "sui.types.MoveModule",
          "description": "Module defined by a package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the module.",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "Serialized bytecode of the module.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MovePackage",
          "longName": "MovePackage",
          "fullName": "sui.types.MovePackage",
          "description": "A Move package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Address or ID of this package.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of the package.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "modules",
              "description": "Set of modules defined by this package.",
              "label": "repeated",
              "type": "MoveModule",
              "longType": "MoveModule",
              "fullType": "sui.types.MoveModule",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type_origin_table",
              "description": "Maps struct/module to a package version where it was first defined, stored as a vector for\nsimple serialization and deserialization.",
              "label": "repeated",
              "type": "TypeOrigin",
              "longType": "TypeOrigin",
              "fullType": "sui.types.TypeOrigin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkage_table",
              "description": "For each dependency, maps original package ID to the info about the (upgraded) dependency\nversion that this package is using.",
              "label": "repeated",
              "type": "UpgradeInfo",
              "longType": "UpgradeInfo",
              "fullType": "sui.types.UpgradeInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveStruct",
          "longName": "MoveStruct",
          "fullName": "sui.types.MoveStruct",
          "description": "A Move struct.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "`ObjectId` for this object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "object_type",
              "description": "The type of this object.",
              "label": "optional",
              "type": "StructTag",
              "longType": "StructTag",
              "fullType": "sui.types.StructTag",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_type",
              "defaultValue": ""
            },
            {
              "name": "has_public_transfer",
              "description": "DEPRECATED this field is no longer used to determine whether a tx can transfer this\nobject. Instead, it is always calculated from the objects type when loaded in execution.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_has_public_transfer",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of the object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "BCS bytes of a Move struct value.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveStructValue",
          "longName": "MoveStructValue",
          "fullName": "sui.types.MoveStructValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "struct_type",
              "description": "",
              "label": "optional",
              "type": "StructTag",
              "longType": "StructTag",
              "fullType": "sui.types.StructTag",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_struct_type",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "",
              "label": "repeated",
              "type": "MoveField",
              "longType": "MoveField",
              "fullType": "sui.types.MoveField",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveValue",
          "longName": "MoveValue",
          "fullName": "sui.types.MoveValue",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bool",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "u8",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "u16",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "u32",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "u64",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "u128",
              "description": "",
              "label": "",
              "type": "U128",
              "longType": "U128",
              "fullType": "sui.types.U128",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "u256",
              "description": "",
              "label": "",
              "type": "U256",
              "longType": "U256",
              "fullType": "sui.types.U256",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "Address",
              "longType": "Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "vector",
              "description": "",
              "label": "",
              "type": "MoveVector",
              "longType": "MoveVector",
              "fullType": "sui.types.MoveVector",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "struct",
              "description": "",
              "label": "",
              "type": "MoveStructValue",
              "longType": "MoveStructValue",
              "fullType": "sui.types.MoveStructValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "Address",
              "longType": "Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "variant",
              "description": "",
              "label": "",
              "type": "MoveVariant",
              "longType": "MoveVariant",
              "fullType": "sui.types.MoveVariant",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveVariant",
          "longName": "MoveVariant",
          "fullName": "sui.types.MoveVariant",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "enum_type",
              "description": "",
              "label": "optional",
              "type": "StructTag",
              "longType": "StructTag",
              "fullType": "sui.types.StructTag",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_enum_type",
              "defaultValue": ""
            },
            {
              "name": "variant_name",
              "description": "",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_variant_name",
              "defaultValue": ""
            },
            {
              "name": "tag",
              "description": "",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_tag",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "",
              "label": "repeated",
              "type": "MoveField",
              "longType": "MoveField",
              "fullType": "sui.types.MoveField",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveVector",
          "longName": "MoveVector",
          "fullName": "sui.types.MoveVector",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "values",
              "description": "",
              "label": "repeated",
              "type": "MoveValue",
              "longType": "MoveValue",
              "fullType": "sui.types.MoveValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigAggregatedSignature",
          "longName": "MultisigAggregatedSignature",
          "fullName": "sui.types.MultisigAggregatedSignature",
          "description": "Aggregated signature from members of a multisig committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "signatures",
              "description": "The plain signatures encoded with signature scheme.\n\nThe signatures must be in the same order as they are listed in the committee.",
              "label": "repeated",
              "type": "MultisigMemberSignature",
              "longType": "MultisigMemberSignature",
              "fullType": "sui.types.MultisigMemberSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bitmap",
              "description": "Required. Bitmap indicating which committee members contributed to the\nsignature.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bitmap",
              "defaultValue": ""
            },
            {
              "name": "legacy_bitmap",
              "description": "Optional. If present, means this signature's on-chain format uses the old\nlegacy multisig format.",
              "label": "optional",
              "type": "RoaringBitmap",
              "longType": "RoaringBitmap",
              "fullType": "sui.types.RoaringBitmap",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_legacy_bitmap",
              "defaultValue": ""
            },
            {
              "name": "committee",
              "description": "Required. The committee to use to validate this signature.",
              "label": "optional",
              "type": "MultisigCommittee",
              "longType": "MultisigCommittee",
              "fullType": "sui.types.MultisigCommittee",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_committee",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigCommittee",
          "longName": "MultisigCommittee",
          "fullName": "sui.types.MultisigCommittee",
          "description": "A multisig committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "members",
              "description": "A list of committee members and their corresponding weight.",
              "label": "repeated",
              "type": "MultisigMember",
              "longType": "MultisigMember",
              "fullType": "sui.types.MultisigMember",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "threshold",
              "description": "Required. The threshold of signatures needed to validate a signature from\nthis committee.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_threshold",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigMember",
          "longName": "MultisigMember",
          "fullName": "sui.types.MultisigMember",
          "description": "A member in a multisig committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "public_key",
              "description": "Required. The public key of the committee member.",
              "label": "optional",
              "type": "MultisigMemberPublicKey",
              "longType": "MultisigMemberPublicKey",
              "fullType": "sui.types.MultisigMemberPublicKey",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            },
            {
              "name": "weight",
              "description": "Required. The weight of this member's signature.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_weight",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigMemberPublicKey",
          "longName": "MultisigMemberPublicKey",
          "fullName": "sui.types.MultisigMemberPublicKey",
          "description": "Set of valid public keys for multisig committee members.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "ed25519",
              "description": "An ed25519 public key",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "scheme",
              "defaultValue": ""
            },
            {
              "name": "secp256k1",
              "description": "A secp256k1 public key",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "scheme",
              "defaultValue": ""
            },
            {
              "name": "secp256r1",
              "description": "A secp256r1 public key",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "scheme",
              "defaultValue": ""
            },
            {
              "name": "zklogin",
              "description": "A zklogin public identifier",
              "label": "",
              "type": "ZkLoginPublicIdentifier",
              "longType": "ZkLoginPublicIdentifier",
              "fullType": "sui.types.ZkLoginPublicIdentifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "scheme",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigMemberSignature",
          "longName": "MultisigMemberSignature",
          "fullName": "sui.types.MultisigMemberSignature",
          "description": "A signature from a member of a multisig committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "ed25519",
              "description": "An ed25519 signature.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "secp256k1",
              "description": "A secp256k1 signature.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "secp256r1",
              "description": "A secp256r1 signature.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "zklogin",
              "description": "A zklogin signature.",
              "label": "",
              "type": "ZkLoginAuthenticator",
              "longType": "ZkLoginAuthenticator",
              "fullType": "sui.types.ZkLoginAuthenticator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NestedResult",
          "longName": "NestedResult",
          "fullName": "sui.types.NestedResult",
          "description": "An argument type for a nested result.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "result",
              "description": "The command index.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_result",
              "defaultValue": ""
            },
            {
              "name": "subresult",
              "description": "The index into the command's output.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_subresult",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Object",
          "longName": "Object",
          "fullName": "sui.types.Object",
          "description": "An object on the Sui blockchain.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "`ObjectId` for this object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of the object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Owner of the object.",
              "label": "optional",
              "type": "Owner",
              "longType": "Owner",
              "fullType": "sui.types.Owner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "object",
              "description": "",
              "label": "optional",
              "type": "ObjectData",
              "longType": "ObjectData",
              "fullType": "sui.types.ObjectData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object",
              "defaultValue": ""
            },
            {
              "name": "previous_transaction",
              "description": "The digest of the transaction that created or last mutated this object",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_previous_transaction",
              "defaultValue": ""
            },
            {
              "name": "storage_rebate",
              "description": "The amount of SUI to rebate if this object gets deleted.\nThis number is re-calculated each time the object is mutated based on\nthe present storage gas price.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_rebate",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObjectData",
          "longName": "ObjectData",
          "fullName": "sui.types.ObjectData",
          "description": "Object data, either a package or struct.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "struct",
              "description": "",
              "label": "",
              "type": "MoveStruct",
              "longType": "MoveStruct",
              "fullType": "sui.types.MoveStruct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "package",
              "description": "",
              "label": "",
              "type": "MovePackage",
              "longType": "MovePackage",
              "fullType": "sui.types.MovePackage",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObjectExist",
          "longName": "ObjectExist",
          "fullName": "sui.types.ObjectExist",
          "description": "Information about the old version of the object.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Required. Version of the object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "Required. Digest of the object.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Required. Owner of the object.",
              "label": "optional",
              "type": "Owner",
              "longType": "Owner",
              "fullType": "sui.types.Owner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObjectId",
          "longName": "ObjectId",
          "fullName": "sui.types.ObjectId",
          "description": "Unique identifier for an object on the Sui blockchain.\n\nAn `ObjectId` is a 32-byte identifier used to uniquely identify an object on the Sui\nblockchain.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "Required. 32-byte object-id.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObjectReference",
          "longName": "ObjectReference",
          "fullName": "sui.types.ObjectReference",
          "description": "Reference to an object.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "The object ID of this object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version of this object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this object.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObjectReferenceWithOwner",
          "longName": "ObjectReferenceWithOwner",
          "fullName": "sui.types.ObjectReferenceWithOwner",
          "description": "An object reference with owner information.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "Required. `ObjectReference`.",
              "label": "optional",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.types.ObjectReference",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Required. `Owner`.",
              "label": "optional",
              "type": "Owner",
              "longType": "Owner",
              "fullType": "sui.types.Owner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ObjectWrite",
          "longName": "ObjectWrite",
          "fullName": "sui.types.ObjectWrite",
          "description": "Object write, including all of mutated, created, unwrapped.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "Required. Digest of the new version of the object.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Required. Owner of the new version of the object.",
              "label": "optional",
              "type": "Owner",
              "longType": "Owner",
              "fullType": "sui.types.Owner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Owner",
          "longName": "Owner",
          "fullName": "sui.types.Owner",
          "description": "Enum of different types of ownership for an object.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Object is exclusively owned by a single address, and is mutable.",
              "label": "",
              "type": "Address",
              "longType": "Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "object",
              "description": "Object is exclusively owned by a single object, and is mutable.",
              "label": "",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "shared",
              "description": "Object is shared, can be used by any address, and is mutable.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "immutable",
              "description": "Object is immutable, and hence ownership doesn't matter.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PackageIdDoesNotMatch",
          "longName": "PackageIdDoesNotMatch",
          "fullName": "sui.types.PackageIdDoesNotMatch",
          "description": "Package ID does not match `PackageId` in upgrade ticket.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package_id",
              "description": "Required. The package ID.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            },
            {
              "name": "ticket_id",
              "description": "Required. The ticket ID.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_ticket_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PackageUpgradeError",
          "longName": "PackageUpgradeError",
          "fullName": "sui.types.PackageUpgradeError",
          "description": "An error with a upgrading a package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "unable_to_fetch_package",
              "description": "Unable to fetch package.",
              "label": "",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "not_a_package",
              "description": "Object is not a package.",
              "label": "",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "incompatible_upgrade",
              "description": "Package upgrade is incompatible with previous version.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "digets_does_not_match",
              "description": "Digest in upgrade ticket and computed digest differ.",
              "label": "",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "unknown_upgrade_policy",
              "description": "Upgrade policy is not valid.",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "package_id_does_not_match",
              "description": "Package ID does not match `PackageId` in upgrade ticket.",
              "label": "",
              "type": "PackageIdDoesNotMatch",
              "longType": "PackageIdDoesNotMatch",
              "fullType": "sui.types.PackageIdDoesNotMatch",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PackageWrite",
          "longName": "PackageWrite",
          "fullName": "sui.types.PackageWrite",
          "description": "Package write.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Version of the new package.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "Required. Digest of the new package.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PasskeyAuthenticator",
          "longName": "PasskeyAuthenticator",
          "fullName": "sui.types.PasskeyAuthenticator",
          "description": "A passkey authenticator.\n\nSee\n[struct.PasskeyAuthenticator](https://mystenlabs.github.io/sui-rust-sdk/sui_sdk_types/struct.PasskeyAuthenticator.html#bcs)\nfor more information on the requirements on the shape of the\n`client_data_json` field.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "authenticator_data",
              "description": "Required. Opaque authenticator data for this passkey signature.\n\nSee [Authenticator Data](https://www.w3.org/TR/webauthn-2/#sctn-authenticator-data) for\nmore information on this field.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_authenticator_data",
              "defaultValue": ""
            },
            {
              "name": "client_data_json",
              "description": "Required. Structured, unparsed, JSON for this passkey signature.\n\nSee [CollectedClientData](https://www.w3.org/TR/webauthn-2/#dictdef-collectedclientdata)\nfor more information on this field.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_client_data_json",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Required. A secp256r1 signature.",
              "label": "optional",
              "type": "SimpleSignature",
              "longType": "SimpleSignature",
              "fullType": "sui.types.SimpleSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProgrammableTransaction",
          "longName": "ProgrammableTransaction",
          "fullName": "sui.types.ProgrammableTransaction",
          "description": "A user transaction.\n\nContains a series of native commands and Move calls where the results of one command can be\nused in future commands.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "inputs",
              "description": "Input objects or primitive values.",
              "label": "repeated",
              "type": "Input",
              "longType": "Input",
              "fullType": "sui.types.Input",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commands",
              "description": "The commands to be executed sequentially. A failure in any command\nresults in the failure of the entire transaction.",
              "label": "repeated",
              "type": "Command",
              "longType": "Command",
              "fullType": "sui.types.Command",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Publish",
          "longName": "Publish",
          "fullName": "sui.types.Publish",
          "description": "Command to publish a new Move package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "modules",
              "description": "The serialized Move modules.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "Set of packages that the to-be published package depends on.",
              "label": "repeated",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RandomnessStateUpdate",
          "longName": "RandomnessStateUpdate",
          "fullName": "sui.types.RandomnessStateUpdate",
          "description": "Randomness update.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Epoch of the randomness state update transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "randomness_round",
              "description": "Randomness round of the update.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_randomness_round",
              "defaultValue": ""
            },
            {
              "name": "random_bytes",
              "description": "Updated random bytes.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_random_bytes",
              "defaultValue": ""
            },
            {
              "name": "randomness_object_initial_shared_version",
              "description": "The initial version of the randomness object that it was shared at.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_randomness_object_initial_shared_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReadOnlyRoot",
          "longName": "ReadOnlyRoot",
          "fullName": "sui.types.ReadOnlyRoot",
          "description": "Read-only shared object from the input.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Required. Version of the shared object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "Required. Digest of the shared object.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RoaringBitmap",
          "longName": "RoaringBitmap",
          "fullName": "sui.types.RoaringBitmap",
          "description": "A RoaringBitmap. See\n[RoaringFormatSpec](https://github.com/RoaringBitmap/RoaringFormatSpec) for the\nspecification for the serialized format of `RoaringBitmap`s.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bitmap",
              "description": "Required. Serialized `RoaringBitmap`.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bitmap",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SharedObjectInput",
          "longName": "SharedObjectInput",
          "fullName": "sui.types.SharedObjectInput",
          "description": "A shared object input.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "`ObjectId` of the shared object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "initial_shared_version",
              "description": "Initial version of the object when it was shared.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_initial_shared_version",
              "defaultValue": ""
            },
            {
              "name": "mutable",
              "description": "Controls whether the caller asks for a mutable reference to the shared object.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_mutable",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleSignature",
          "longName": "SimpleSignature",
          "fullName": "sui.types.SimpleSignature",
          "description": "A basic signature.\n\nCan either be an ed25519, secp256k1, or secp256r1 signature with\ncorresponding public key.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "scheme",
              "description": "Required. Signature scheme of the signature and public key.",
              "label": "optional",
              "type": "SignatureScheme",
              "longType": "SignatureScheme",
              "fullType": "sui.types.SignatureScheme",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_scheme",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Required. Signature bytes.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "Required. Public key bytes.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SizeError",
          "longName": "SizeError",
          "fullName": "sui.types.SizeError",
          "description": "A size error.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "size",
              "description": "Required. The offending size.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_size",
              "defaultValue": ""
            },
            {
              "name": "max_size",
              "description": "Required. The maximum allowable size.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_size",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SplitCoins",
          "longName": "SplitCoins",
          "fullName": "sui.types.SplitCoins",
          "description": "Command to split a single coin object into multiple coins.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "coin",
              "description": "The coin to split.",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin",
              "defaultValue": ""
            },
            {
              "name": "amounts",
              "description": "The amounts to split off.",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StructTag",
          "longName": "StructTag",
          "fullName": "sui.types.StructTag",
          "description": "Type information for a Move struct.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Address of the package where this type was defined.",
              "label": "optional",
              "type": "Address",
              "longType": "Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            },
            {
              "name": "module",
              "description": "Name of the module where this type was defined.",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of the type itself.",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "type_parameters",
              "description": "List of type parameters, if any.",
              "label": "repeated",
              "type": "TypeTag",
              "longType": "TypeTag",
              "fullType": "sui.types.TypeTag",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SystemPackage",
          "longName": "SystemPackage",
          "fullName": "sui.types.SystemPackage",
          "description": "System package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Version of the package.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "modules",
              "description": "Move modules.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "Package dependencies.",
              "label": "repeated",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transaction",
          "longName": "Transaction",
          "fullName": "sui.types.Transaction",
          "description": "A transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "v1",
              "description": "",
              "label": "",
              "type": "TransactionV1",
              "longType": "Transaction.TransactionV1",
              "fullType": "sui.types.Transaction.TransactionV1",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionV1",
          "longName": "Transaction.TransactionV1",
          "fullName": "sui.types.Transaction.TransactionV1",
          "description": "Version 1 of `Transaction`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "TransactionKind",
              "longType": "TransactionKind",
              "fullType": "sui.types.TransactionKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "sender",
              "description": "",
              "label": "optional",
              "type": "Address",
              "longType": "Address",
              "fullType": "sui.types.Address",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sender",
              "defaultValue": ""
            },
            {
              "name": "gas_payment",
              "description": "",
              "label": "optional",
              "type": "GasPayment",
              "longType": "GasPayment",
              "fullType": "sui.types.GasPayment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_payment",
              "defaultValue": ""
            },
            {
              "name": "expiration",
              "description": "",
              "label": "optional",
              "type": "TransactionExpiration",
              "longType": "TransactionExpiration",
              "fullType": "sui.types.TransactionExpiration",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expiration",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionEffects",
          "longName": "TransactionEffects",
          "fullName": "sui.types.TransactionEffects",
          "description": "The output or effects of executing a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "v1",
              "description": "",
              "label": "",
              "type": "TransactionEffectsV1",
              "longType": "TransactionEffectsV1",
              "fullType": "sui.types.TransactionEffectsV1",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "version",
              "defaultValue": ""
            },
            {
              "name": "v2",
              "description": "",
              "label": "",
              "type": "TransactionEffectsV2",
              "longType": "TransactionEffectsV2",
              "fullType": "sui.types.TransactionEffectsV2",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionEffectsV1",
          "longName": "TransactionEffectsV1",
          "fullName": "sui.types.TransactionEffectsV1",
          "description": "Version 1 of `TransactionEffects`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "The status of the execution.",
              "label": "optional",
              "type": "ExecutionStatus",
              "longType": "ExecutionStatus",
              "fullType": "sui.types.ExecutionStatus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "The epoch when this transaction was executed.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "gas_used",
              "description": "The gas used by this transaction.",
              "label": "optional",
              "type": "GasCostSummary",
              "longType": "GasCostSummary",
              "fullType": "sui.types.GasCostSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_used",
              "defaultValue": ""
            },
            {
              "name": "modified_at_versions",
              "description": "The version that every modified (mutated or deleted) object had before it was modified by\nthis transaction.",
              "label": "repeated",
              "type": "ModifiedAtVersion",
              "longType": "ModifiedAtVersion",
              "fullType": "sui.types.ModifiedAtVersion",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "shared_objects",
              "description": "The object references of the shared objects used in this transaction. Empty if no shared objects were used.",
              "label": "repeated",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.types.ObjectReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transaction_digest",
              "description": "The transaction digest.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction_digest",
              "defaultValue": ""
            },
            {
              "name": "created",
              "description": "`ObjectReference` and owner of new objects created.",
              "label": "repeated",
              "type": "ObjectReferenceWithOwner",
              "longType": "ObjectReferenceWithOwner",
              "fullType": "sui.types.ObjectReferenceWithOwner",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mutated",
              "description": "`ObjectReference` and owner of mutated objects, including gas object.",
              "label": "repeated",
              "type": "ObjectReferenceWithOwner",
              "longType": "ObjectReferenceWithOwner",
              "fullType": "sui.types.ObjectReferenceWithOwner",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unwrapped",
              "description": "`ObjectReference` and owner of objects that are unwrapped in this transaction.\nUnwrapped objects are objects that were wrapped into other objects in the past,\nand just got extracted out.",
              "label": "repeated",
              "type": "ObjectReferenceWithOwner",
              "longType": "ObjectReferenceWithOwner",
              "fullType": "sui.types.ObjectReferenceWithOwner",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deleted",
              "description": "Object refs of objects now deleted (the new refs).",
              "label": "repeated",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.types.ObjectReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unwrapped_then_deleted",
              "description": "Object refs of objects previously wrapped in other objects but now deleted.",
              "label": "repeated",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.types.ObjectReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wrapped",
              "description": "Object refs of objects now wrapped in other objects.",
              "label": "repeated",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.types.ObjectReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "gas_object",
              "description": "The updated gas object reference. Have a dedicated field for convenient access.\nIt's also included in mutated.",
              "label": "optional",
              "type": "ObjectReferenceWithOwner",
              "longType": "ObjectReferenceWithOwner",
              "fullType": "sui.types.ObjectReferenceWithOwner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_object",
              "defaultValue": ""
            },
            {
              "name": "events_digest",
              "description": "The digest of the events emitted during execution,\ncan be `None` if the transaction does not emit any event.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_digest",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "The set of transaction digests this transaction depends on.",
              "label": "repeated",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionEffectsV2",
          "longName": "TransactionEffectsV2",
          "fullName": "sui.types.TransactionEffectsV2",
          "description": "Version 2 of `TransactionEffects`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "status",
              "description": "The status of the execution.",
              "label": "optional",
              "type": "ExecutionStatus",
              "longType": "ExecutionStatus",
              "fullType": "sui.types.ExecutionStatus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "The epoch when this transaction was executed.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "gas_used",
              "description": "The gas used by this transaction.",
              "label": "optional",
              "type": "GasCostSummary",
              "longType": "GasCostSummary",
              "fullType": "sui.types.GasCostSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_used",
              "defaultValue": ""
            },
            {
              "name": "transaction_digest",
              "description": "The transaction digest.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction_digest",
              "defaultValue": ""
            },
            {
              "name": "gas_object_index",
              "description": "The updated gas object reference, as an index into the `changed_objects` vector.\nHaving a dedicated field for convenient access.\nSystem transaction that don't require gas will leave this as `None`.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_object_index",
              "defaultValue": ""
            },
            {
              "name": "events_digest",
              "description": "The digest of the events emitted during execution,\ncan be `None` if the transaction does not emit any event.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_digest",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "The set of transaction digests this transaction depends on.",
              "label": "repeated",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lamport_version",
              "description": "The version number of all the written Move objects by this transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lamport_version",
              "defaultValue": ""
            },
            {
              "name": "changed_objects",
              "description": "Objects whose state are changed in the object store.",
              "label": "repeated",
              "type": "ChangedObject",
              "longType": "ChangedObject",
              "fullType": "sui.types.ChangedObject",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unchanged_shared_objects",
              "description": "Shared objects that are not mutated in this transaction. Unlike owned objects,\nread-only shared objects' version are not committed in the transaction,\nand in order for a node to catch up and execute it without consensus sequencing,\nthe version needs to be committed in the effects.",
              "label": "repeated",
              "type": "UnchangedSharedObject",
              "longType": "UnchangedSharedObject",
              "fullType": "sui.types.UnchangedSharedObject",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auxiliary_data_digest",
              "description": "Auxiliary data that are not protocol-critical, generated as part of the effects but are stored separately.\nStoring it separately allows us to avoid bloating the effects with data that are not critical.\nIt also provides more flexibility on the format and type of the data.",
              "label": "optional",
              "type": "Digest",
              "longType": "Digest",
              "fullType": "sui.types.Digest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_auxiliary_data_digest",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionEvents",
          "longName": "TransactionEvents",
          "fullName": "sui.types.TransactionEvents",
          "description": "Events emitted during the successful execution of a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "events",
              "description": "",
              "label": "repeated",
              "type": "Event",
              "longType": "Event",
              "fullType": "sui.types.Event",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionExpiration",
          "longName": "TransactionExpiration",
          "fullName": "sui.types.TransactionExpiration",
          "description": "A TTL for a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "none",
              "description": "The transaction has no expiration.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "expiration",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Validators won't sign and execute transaction unless the expiration epoch\nis greater than or equal to the current epoch.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "expiration",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionKind",
          "longName": "TransactionKind",
          "fullName": "sui.types.TransactionKind",
          "description": "Transaction type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "programmable_transaction",
              "description": "A user transaction comprised of a list of native commands and Move calls.",
              "label": "",
              "type": "ProgrammableTransaction",
              "longType": "ProgrammableTransaction",
              "fullType": "sui.types.ProgrammableTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "change_epoch",
              "description": "System transaction used to end an epoch.\n\nThe `ChangeEpoch` variant is now deprecated (but the `ChangeEpoch` struct is still used by\n`EndOfEpochTransaction`).",
              "label": "",
              "type": "ChangeEpoch",
              "longType": "ChangeEpoch",
              "fullType": "sui.types.ChangeEpoch",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "genesis",
              "description": "Transaction used to initialize the chain state.\n\nOnly valid if in the genesis checkpoint (0) and if this is the very first transaction ever\nexecuted on the chain.",
              "label": "",
              "type": "GenesisTransaction",
              "longType": "GenesisTransaction",
              "fullType": "sui.types.GenesisTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_prologue_v1",
              "description": "V1 consensus commit update.",
              "label": "",
              "type": "ConsensusCommitPrologue",
              "longType": "ConsensusCommitPrologue",
              "fullType": "sui.types.ConsensusCommitPrologue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "authenticator_state_update",
              "description": "Update set of valid JWKs used for zklogin.",
              "label": "",
              "type": "AuthenticatorStateUpdate",
              "longType": "AuthenticatorStateUpdate",
              "fullType": "sui.types.AuthenticatorStateUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "end_of_epoch",
              "description": "Set of operations to run at the end of the epoch to close out the current epoch and start\nthe next one.",
              "label": "",
              "type": "EndOfEpochTransaction",
              "longType": "EndOfEpochTransaction",
              "fullType": "sui.types.EndOfEpochTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "randomness_state_update",
              "description": "Randomness update.",
              "label": "",
              "type": "RandomnessStateUpdate",
              "longType": "RandomnessStateUpdate",
              "fullType": "sui.types.RandomnessStateUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_prologue_v2",
              "description": "V2 consensus commit update.",
              "label": "",
              "type": "ConsensusCommitPrologue",
              "longType": "ConsensusCommitPrologue",
              "fullType": "sui.types.ConsensusCommitPrologue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_prologue_v3",
              "description": "V3 consensus commit update.",
              "label": "",
              "type": "ConsensusCommitPrologue",
              "longType": "ConsensusCommitPrologue",
              "fullType": "sui.types.ConsensusCommitPrologue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferObjects",
          "longName": "TransferObjects",
          "fullName": "sui.types.TransferObjects",
          "description": "Command to transfer ownership of a set of objects to an address.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "Set of objects to transfer.",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "The address to transfer ownership to.",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TypeArgumentError",
          "longName": "TypeArgumentError",
          "fullName": "sui.types.TypeArgumentError",
          "description": "Type argument error.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "type_argument",
              "description": "Required. Index of the problematic type argument.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type_argument",
              "defaultValue": ""
            },
            {
              "name": "type_not_found",
              "description": "A type was not found in the module specified.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "constraint_not_satisfied",
              "description": "A type provided did not match the specified constraint.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TypeOrigin",
          "longName": "TypeOrigin",
          "fullName": "sui.types.TypeOrigin",
          "description": "Identifies a struct and the module it was defined in.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "module_name",
              "description": "",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module_name",
              "defaultValue": ""
            },
            {
              "name": "struct_name",
              "description": "",
              "label": "optional",
              "type": "Identifier",
              "longType": "Identifier",
              "fullType": "sui.types.Identifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_struct_name",
              "defaultValue": ""
            },
            {
              "name": "package_id",
              "description": "",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TypeTag",
          "longName": "TypeTag",
          "fullName": "sui.types.TypeTag",
          "description": "Type of a Move value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "u8",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "u16",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "u32",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "u64",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "u128",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "u256",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "bool",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "vector",
              "description": "",
              "label": "",
              "type": "TypeTag",
              "longType": "TypeTag",
              "fullType": "sui.types.TypeTag",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            },
            {
              "name": "struct",
              "description": "",
              "label": "",
              "type": "StructTag",
              "longType": "StructTag",
              "fullType": "sui.types.StructTag",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "tag",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "U128",
          "longName": "U128",
          "fullName": "sui.types.U128",
          "description": "An unsigned 128-bit integer encoded in little-endian using 16-bytes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bytes",
              "description": "Required. 16-byte little-endian bytes.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bytes",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "U256",
          "longName": "U256",
          "fullName": "sui.types.U256",
          "description": "An unsigned 256-bit integer encoded in little-endian using 32-bytes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bytes",
              "description": "Required. 16-byte little-endian bytes.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bytes",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnchangedSharedObject",
          "longName": "UnchangedSharedObject",
          "fullName": "sui.types.UnchangedSharedObject",
          "description": "A shared object that wasn't changed during execution.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "Required. ObjectId of the shared object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "read_only_root",
              "description": "Read-only shared object from the input.",
              "label": "",
              "type": "ReadOnlyRoot",
              "longType": "ReadOnlyRoot",
              "fullType": "sui.types.ReadOnlyRoot",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "mutate_deleted",
              "description": "Deleted shared objects that appear mutably/owned in the input.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "read_deleted",
              "description": "Deleted shared objects that appear as read-only in the input.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "cancelled",
              "description": "Shared objects that was congested and resulted in this transaction being\ncancelled.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "per_epoch_config",
              "description": "Read of a per-epoch config object that should remain the same during an epoch.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Upgrade",
          "longName": "Upgrade",
          "fullName": "sui.types.Upgrade",
          "description": "Command to upgrade an already published package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "modules",
              "description": "The serialized Move modules.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "Set of packages that the to-be published package depends on.",
              "label": "repeated",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "package",
              "description": "Package ID of the package to upgrade.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package",
              "defaultValue": ""
            },
            {
              "name": "ticket",
              "description": "Ticket authorizing the upgrade.",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.types.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_ticket",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UpgradeInfo",
          "longName": "UpgradeInfo",
          "fullName": "sui.types.UpgradeInfo",
          "description": "Upgraded package info for the linkage table.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "original_id",
              "description": "ID of the original package.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_original_id",
              "defaultValue": ""
            },
            {
              "name": "upgraded_id",
              "description": "ID of the upgraded package.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_upgraded_id",
              "defaultValue": ""
            },
            {
              "name": "upgraded_version",
              "description": "Version of the upgraded package.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_upgraded_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserSignature",
          "longName": "UserSignature",
          "fullName": "sui.types.UserSignature",
          "description": "A signature from a user.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "simple",
              "description": "",
              "label": "",
              "type": "SimpleSignature",
              "longType": "SimpleSignature",
              "fullType": "sui.types.SimpleSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "multisig",
              "description": "",
              "label": "",
              "type": "MultisigAggregatedSignature",
              "longType": "MultisigAggregatedSignature",
              "fullType": "sui.types.MultisigAggregatedSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "zklogin",
              "description": "",
              "label": "",
              "type": "ZkLoginAuthenticator",
              "longType": "ZkLoginAuthenticator",
              "fullType": "sui.types.ZkLoginAuthenticator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "passkey",
              "description": "",
              "label": "",
              "type": "PasskeyAuthenticator",
              "longType": "PasskeyAuthenticator",
              "fullType": "sui.types.PasskeyAuthenticator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorAggregatedSignature",
          "longName": "ValidatorAggregatedSignature",
          "fullName": "sui.types.ValidatorAggregatedSignature",
          "description": "An aggregated signature from multiple validators.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Required. The epoch when this signature was produced.\n\nThis can be used to lookup the `ValidatorCommittee` from this epoch\nto verify this signature.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Required. The 48-byte Bls12381 aggregated signature.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "bitmap",
              "description": "Required. Bitmap indicating which members of the committee contributed to\nthis signature.",
              "label": "optional",
              "type": "RoaringBitmap",
              "longType": "RoaringBitmap",
              "fullType": "sui.types.RoaringBitmap",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bitmap",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorCommittee",
          "longName": "ValidatorCommittee",
          "fullName": "sui.types.ValidatorCommittee",
          "description": "The validator set for a particular epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Required. The epoch where this committee governs.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "members",
              "description": "The committee members.",
              "label": "repeated",
              "type": "ValidatorCommitteeMember",
              "longType": "ValidatorCommitteeMember",
              "fullType": "sui.types.ValidatorCommitteeMember",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorCommitteeMember",
          "longName": "ValidatorCommitteeMember",
          "fullName": "sui.types.ValidatorCommitteeMember",
          "description": "A member of a validator committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "public_key",
              "description": "Required. The 96-byte Bls12381 public key for this validator.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            },
            {
              "name": "stake",
              "description": "Required. Stake weight this validator possesses.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_stake",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VersionAssignment",
          "longName": "VersionAssignment",
          "fullName": "sui.types.VersionAssignment",
          "description": "Object version assignment from consensus.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "`ObjectId` of the object.",
              "label": "optional",
              "type": "ObjectId",
              "longType": "ObjectId",
              "fullType": "sui.types.ObjectId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Assigned version.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginAuthenticator",
          "longName": "ZkLoginAuthenticator",
          "fullName": "sui.types.ZkLoginAuthenticator",
          "description": "A zklogin authenticator.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "inputs",
              "description": "Required. Zklogin proof and inputs required to perform proof verification.",
              "label": "optional",
              "type": "ZkLoginInputs",
              "longType": "ZkLoginInputs",
              "fullType": "sui.types.ZkLoginInputs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_inputs",
              "defaultValue": ""
            },
            {
              "name": "max_epoch",
              "description": "Required. Maximum epoch for which the proof is valid.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_epoch",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Required. User signature with the public key attested to by the provided proof.",
              "label": "optional",
              "type": "SimpleSignature",
              "longType": "SimpleSignature",
              "fullType": "sui.types.SimpleSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginClaim",
          "longName": "ZkLoginClaim",
          "fullName": "sui.types.ZkLoginClaim",
          "description": "A claim of the iss in a zklogin proof.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "Required.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value",
              "defaultValue": ""
            },
            {
              "name": "index_mod_4",
              "description": "Required.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_index_mod_4",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginInputs",
          "longName": "ZkLoginInputs",
          "fullName": "sui.types.ZkLoginInputs",
          "description": "A zklogin groth16 proof and the required inputs to perform proof verification.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "proof_points",
              "description": "Required.",
              "label": "optional",
              "type": "ZkLoginProof",
              "longType": "ZkLoginProof",
              "fullType": "sui.types.ZkLoginProof",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof_points",
              "defaultValue": ""
            },
            {
              "name": "iss_base64_details",
              "description": "Required.",
              "label": "optional",
              "type": "ZkLoginClaim",
              "longType": "ZkLoginClaim",
              "fullType": "sui.types.ZkLoginClaim",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_iss_base64_details",
              "defaultValue": ""
            },
            {
              "name": "header_base64",
              "description": "Required.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_header_base64",
              "defaultValue": ""
            },
            {
              "name": "address_seed",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address_seed",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginProof",
          "longName": "ZkLoginProof",
          "fullName": "sui.types.ZkLoginProof",
          "description": "A zklogin groth16 proof.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "a",
              "description": "Required.",
              "label": "optional",
              "type": "CircomG1",
              "longType": "CircomG1",
              "fullType": "sui.types.CircomG1",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_a",
              "defaultValue": ""
            },
            {
              "name": "b",
              "description": "Required.",
              "label": "optional",
              "type": "CircomG2",
              "longType": "CircomG2",
              "fullType": "sui.types.CircomG2",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_b",
              "defaultValue": ""
            },
            {
              "name": "c",
              "description": "Required.",
              "label": "optional",
              "type": "CircomG1",
              "longType": "CircomG1",
              "fullType": "sui.types.CircomG1",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_c",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginPublicIdentifier",
          "longName": "ZkLoginPublicIdentifier",
          "fullName": "sui.types.ZkLoginPublicIdentifier",
          "description": "Public key equivalent for zklogin authenticators.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "iss",
              "description": "Required.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_iss",
              "defaultValue": ""
            },
            {
              "name": "address_seed",
              "description": "Required.",
              "label": "optional",
              "type": "Bn254FieldElement",
              "longType": "Bn254FieldElement",
              "fullType": "sui.types.Bn254FieldElement",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address_seed",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "google/protobuf/empty.proto",
      "description": "",
      "package": "google.protobuf",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Empty",
          "longName": "Empty",
          "fullName": "google.protobuf.Empty",
          "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n```\nservice Foo {\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n}\n```",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": []
    },
    {
      "name": "google/protobuf/timestamp.proto",
      "description": "",
      "package": "google.protobuf",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Timestamp",
          "longName": "Timestamp",
          "fullName": "google.protobuf.Timestamp",
          "description": "A Timestamp represents a point in time independent of any time zone\nor calendar, represented as seconds and fractions of seconds at\nnanosecond resolution in UTC Epoch time. It is encoded using the\nProleptic Gregorian Calendar which extends the Gregorian calendar\nbackwards to year one. It is encoded assuming all minutes are 60\nseconds long, i.e. leap seconds are \"smeared\" so that no leap second\ntable is needed for interpretation. Range is from\n`0001-01-01T00:00:00Z` to `9999-12-31T23:59:59.999999999Z`.\nRestricting to that range ensures that conversion to\nand from RFC 3339 date strings is possible.\nSee [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).\n\n# Examples\n\nExample 1: Compute Timestamp from POSIX `time()`.\n\n```\nTimestamp timestamp;\ntimestamp.set_seconds(time(NULL));\ntimestamp.set_nanos(0);\n```\n\nExample 2: Compute Timestamp from POSIX `gettimeofday()`.\n\n```\nstruct timeval tv;\ngettimeofday(\u0026tv, NULL);\n\nTimestamp timestamp;\ntimestamp.set_seconds(tv.tv_sec);\ntimestamp.set_nanos(tv.tv_usec * 1000);\n```\n\nExample 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n\n```\nFILETIME ft;\nGetSystemTimeAsFileTime(\u0026ft);\nUINT64 ticks = (((UINT64)ft.dwHighDateTime) \u003c\u003c 32) | ft.dwLowDateTime;\n\n// A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n// is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\nTimestamp timestamp;\ntimestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\ntimestamp.set_nanos((INT32) ((ticks % 10000000) * 100)); //\n```\n\nExample 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\n```\nlong millis = System.currentTimeMillis();\n\nTimestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n    .setNanos((int) ((millis % 1000) * 1000000)).build();\n\n```\n\nExample 5: Compute Timestamp from current time in Python.\n\n```\ntimestamp = Timestamp()\ntimestamp.GetCurrentTime()\n```\n\n# JSON Mapping\n\nIn JSON format, the `Timestamp` type is encoded as a string in the\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\nformat is `{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z`\nwhere `{year}` is always expressed using four digits while `{month}`, `{day}`,\n`{hour}`, `{min}`, and `{sec}` are zero-padded to two digits each. The fractional\nseconds, which can go up to 9 digits (so up to 1 nanosecond resolution),\nare optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\nis required, though only UTC (as indicated by \"Z\") is presently supported.\n\nFor example, `2017-01-15T01:30:15.01Z` encodes 15.01 seconds past\n01:30 UTC on January 15, 2017.\n\nIn JavaScript, you can convert a `Date` object to this format using the\nstandard [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\nmethod. In Python, you can convert a standard `datetime.datetime` object\nto this format using [`strftime`](https://docs.python.org/2/library/time.html#time.strftime)\nwith the time format spec `%Y-%m-%dT%H:%M:%S.%fZ`. Likewise, in Java, you\ncan use the Joda Time's [`ISODateTimeFormat.dateTime()`](\nhttp://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime--)\nto obtain a formatter capable of generating timestamps in this format.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seconds",
              "description": "Represents seconds of UTC time since Unix epoch\n`1970-01-01T00:00:00Z`. Must be from `0001-01-01T00:00:00Z` to\n`9999-12-31T23:59:59Z` inclusive.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nanos",
              "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nano values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}