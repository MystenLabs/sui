// Copyright (c) Mysten Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// tests modules can use transfer functions outside of the defining module, if the type
// has store

//# publish
module 0x0.m {
    import 0x2.coin;
    import 0x2.transfer;

    t(s: coin.Coin<u64>) {
        label l0:
        transfer.public_transfer<coin.Coin<u64>>(move(s), 0x100);
        return;
    }
}

//# publish
module 0x0.m {
    import 0x2.coin;
    import 0x2.transfer;

    t(s: coin.Coin<u64>) {
        label l0:
        transfer.public_freeze_object<coin.Coin<u64>>(move(s));
        return;
    }
}

//# publish
module 0x0.m {
    import 0x2.coin;
    import 0x2.transfer;

    t(s: coin.Coin<u64>) {
        label l0:
        transfer.public_share_object<coin.Coin<u64>>(move(s));
        return;
    }
}

//# publish
module 0x0.m {
    import 0x2.coin;
    import 0x2.transfer;
    import 0x2.object;

    t(uid: &mut object.UID, coin: transfer.Receiving<coin.Coin<u64>>): coin.Coin<u64> {
        let c: coin.Coin<u64>;
        label l0:
        c = transfer.public_receive<coin.Coin<u64>>(move(uid), move(coin));
        return move(c);
    }
}
