---
source: crates/sui/src/client_ptb/lexer.rs
expression: lex(arrays)
---
[
    Spanned {
        span: Span {
            start: 0,
            end: 1,
        },
        value: Lexeme(
            LBracket,
            "[",
        ),
    },
    Spanned {
        span: Span {
            start: 1,
            end: 2,
        },
        value: Lexeme(
            Number,
            "1",
        ),
    },
    Spanned {
        span: Span {
            start: 2,
            end: 3,
        },
        value: Lexeme(
            Comma,
            ",",
        ),
    },
    Spanned {
        span: Span {
            start: 3,
            end: 4,
        },
        value: Lexeme(
            Number,
            "2",
        ),
    },
    Spanned {
        span: Span {
            start: 4,
            end: 5,
        },
        value: Lexeme(
            Comma,
            ",",
        ),
    },
    Spanned {
        span: Span {
            start: 5,
            end: 6,
        },
        value: Lexeme(
            Number,
            "3",
        ),
    },
    Spanned {
        span: Span {
            start: 6,
            end: 7,
        },
        value: Lexeme(
            RBracket,
            "]",
        ),
    },
    Spanned {
        span: Span {
            start: 8,
            end: 9,
        },
        value: Lexeme(
            LBracket,
            "[",
        ),
    },
    Spanned {
        span: Span {
            start: 9,
            end: 10,
        },
        value: Lexeme(
            Number,
            "1",
        ),
    },
    Spanned {
        span: Span {
            start: 10,
            end: 11,
        },
        value: Lexeme(
            Comma,
            ",",
        ),
    },
    Spanned {
        span: Span {
            start: 12,
            end: 13,
        },
        value: Lexeme(
            Number,
            "2",
        ),
    },
    Spanned {
        span: Span {
            start: 13,
            end: 14,
        },
        value: Lexeme(
            Comma,
            ",",
        ),
    },
    Spanned {
        span: Span {
            start: 15,
            end: 16,
        },
        value: Lexeme(
            Number,
            "3",
        ),
    },
    Spanned {
        span: Span {
            start: 16,
            end: 17,
        },
        value: Lexeme(
            RBracket,
            "]",
        ),
    },
    Spanned {
        span: Span {
            start: 18,
            end: 19,
        },
        value: Lexeme(
            LBracket,
            "[",
        ),
    },
    Spanned {
        span: Span {
            start: 19,
            end: 20,
        },
        value: Lexeme(
            RBracket,
            "]",
        ),
    },
    Spanned {
        span: Span {
            start: 21,
            end: 22,
        },
        value: Lexeme(
            LBracket,
            "[",
        ),
    },
    Spanned {
        span: Span {
            start: 22,
            end: 23,
        },
        value: Lexeme(
            Number,
            "1",
        ),
    },
    Spanned {
        span: Span {
            start: 23,
            end: 24,
        },
        value: Lexeme(
            RBracket,
            "]",
        ),
    },
    Spanned {
        span: Span {
            start: 25,
            end: 26,
        },
        value: Lexeme(
            LBracket,
            "[",
        ),
    },
    Spanned {
        span: Span {
            start: 26,
            end: 27,
        },
        value: Lexeme(
            Number,
            "1",
        ),
    },
    Spanned {
        span: Span {
            start: 27,
            end: 28,
        },
        value: Lexeme(
            Comma,
            ",",
        ),
    },
    Spanned {
        span: Span {
            start: 28,
            end: 29,
        },
        value: Lexeme(
            RBracket,
            "]",
        ),
    },
    Spanned {
        span: Span {
            start: 29,
            end: 29,
        },
        value: Lexeme(
            Eof,
            "",
        ),
    },
]
