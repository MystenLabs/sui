---
source: crates/sui/src/upgrade_compatibility/../unit_tests/upgrade_compatibility_tests.rs
expression: normalize_path(err.to_string())
---
error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/sources/enum.move:4:18
  │
4 │ module upgrades::enum_ {
  │                  ^^^^^ enum 'EnumToBeRemoved' is missing
  │
  = Enums are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
  = Add missing enum 'EnumToBeRemoved' back to the module 'enum_'.

error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/sources/func.move:4:18
  │
4 │ module upgrades::func_ {
  │                  ^^^^^ public function 'fun_to_be_removed' is missing
  │
  = Public functions are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
  = Add missing public function 'fun_to_be_removed' back to the module 'func_'.

error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/sources/func.move:7:9
  │
7 │     fun fun_to_lose_public(): u64 {
  │         ^^^^^^^^^^^^^^^^^^ Function 'fun_to_lose_public' has lost its public visibility
  │
  = Functions are part of a module's public interface and cannot be removed or changed during an upgrade.
  = Restore the original function's 'public' visibility for function 'fun_to_lose_public'.

error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/sources/struct.move:4:18
  │
4 │ module upgrades::struct_ {
  │                  ^^^^^^^ struct 'StructToBeRemoved' is missing
  │
  = Structs are part of a module's public interface and cannot be removed or changed during a 'compatible' upgrade.
  = Add missing struct 'StructToBeRemoved' back to the module 'struct_'.

error[Compatibility E01006]: module missing
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/Move.toml:1:1
  │  
1 │ ╭ [package]
2 │ │ name = "upgrades"
3 │ │ edition = "2024.beta" # edition = "legacy" to use legacy (pre-2024) Move
  │ ╰────────────────────────────────────────────────────────────────────────^ Package is missing module 'missing_module'
  │  
  = Modules which are part package cannot be removed during an upgrade.
  = Add missing module 'missing_module' back to the package.


Upgrade failed, this package requires changes to be compatible with the existing package. Its upgrade policy is set to 'compatible'.
