---
source: crates/sui/src/unit_tests/upgrade_compatibility_tests.rs
expression: normalize_path(err.to_string())
---
error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/sources/enum.move:4:18
  │
4 │ module upgrades::enum_ {
  │                  ^^^^^ enum 'EnumToBeRemoved' is missing
  │
  = enums are part of a module's public interface and cannot be removed or changed during an upgrade.
  = add missing enum 'EnumToBeRemoved' back to the module 'enum_'.

error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/sources/func.move:4:18
  │
4 │ module upgrades::func_ {
  │                  ^^^^^ public function 'fun_to_be_removed' is missing
  │
  = public functions are part of a module's public interface and cannot be removed or changed during an upgrade.
  = add missing public function 'fun_to_be_removed' back to the module 'func_'.

error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/sources/func.move:7:9
  │
7 │     fun fun_to_lose_public(): u64 {
  │         ^^^^^^^^^^^^^^^^^^ Function 'fun_to_lose_public' has lost its public visibility
  │
  = Functions are part of a module's public interface and cannot be changed during an upgrade.
  = Restore the original function's 'public' visibility for function 'fun_to_lose_public'.

error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declaration_errors_v2/sources/struct.move:4:18
  │
4 │ module upgrades::struct_ {
  │                  ^^^^^^^ struct 'StructToBeRemoved' is missing
  │
  = structs are part of a module's public interface and cannot be removed or changed during an upgrade.
  = add missing struct 'StructToBeRemoved' back to the module 'struct_'.

error[Compatibility E01007]: module missing
  ┌─ /Users/jordanjennings/code/sui/crates/sui/src/unit_tests/fixtures/upgrade_errors/declaration_errors_v2/Move.toml:1:1
  │
1 │ [package]
  │ ^^^^^^^^^ Package is missing module 'missing_module'
  │
  = Modules are part of a package and cannot be removed or changed during an upgrade.
  = add missing module 'missing_module' back to the package.


Upgrade failed, this package requires changes to be compatible with the existing package. Its upgrade policy is set to 'compatible'.
