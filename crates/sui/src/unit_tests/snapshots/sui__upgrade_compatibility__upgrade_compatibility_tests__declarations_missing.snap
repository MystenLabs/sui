---
source: crates/sui/src/unit_tests/upgrade_compatibility_tests.rs
expression: normalize_path(err.to_string())
---
error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declarations_missing_v2/sources/enum.move:4:18
  │
4 │ module upgrades::enum_ {
  │                  ^^^^^ enum 'EnumToBeRemoved' is missing
  │
  = enum is missing expected enum 'EnumToBeRemoved', but found none
  = enums are part of a module's public interface and cannot be removed or changed during an upgrade
  = add missing enum 'EnumToBeRemoved' back to the module 'enum_'.

error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declarations_missing_v2/sources/func.move:4:18
  │
4 │ module upgrades::func_ {
  │                  ^^^^^ public function 'fun_to_be_removed' is missing
  │
  = public function is missing expected public function 'fun_to_be_removed', but found none
  = public functions are part of a module's public interface and cannot be removed or changed during an upgrade
  = add missing public function 'fun_to_be_removed' back to the module 'func_'.

error[Compatibility E01001]: missing public declaration
  ┌─ /fixtures/upgrade_errors/declarations_missing_v2/sources/struct.move:4:18
  │
4 │ module upgrades::struct_ {
  │                  ^^^^^^^ struct 'StructToBeRemoved' is missing
  │
  = struct is missing expected struct 'StructToBeRemoved', but found none
  = structs are part of a module's public interface and cannot be removed or changed during an upgrade
  = add missing struct 'StructToBeRemoved' back to the module 'struct_'.


Upgrade failed, this package requires changes to be compatible with the existing package. Its upgrade policy is set to 'Compatible'.
