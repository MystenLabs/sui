{
  "files": [
    {
      "name": "google/rpc/error_details.proto",
      "description": "",
      "package": "google.rpc",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BadRequest",
          "longName": "BadRequest",
          "fullName": "google.rpc.BadRequest",
          "description": "Describes violations in a client request. This error type focuses on the\nsyntactic aspects of the request.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "field_violations",
              "description": "Describes all violations in a client request.",
              "label": "repeated",
              "type": "FieldViolation",
              "longType": "BadRequest.FieldViolation",
              "fullType": "google.rpc.BadRequest.FieldViolation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FieldViolation",
          "longName": "BadRequest.FieldViolation",
          "fullName": "google.rpc.BadRequest.FieldViolation",
          "description": "A message type used to describe a single bad request field.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "field",
              "description": "A path that leads to a field in the request body. The value will be a\nsequence of dot-separated identifiers that identify a protocol buffer\nfield.\n\nConsider the following:\n\n```text,json\nmessage CreateContactRequest {\n  message EmailAddress {\n    enum Type {\n      TYPE_UNSPECIFIED = 0;\n      HOME = 1;\n      WORK = 2;\n    }\n\n    optional string email = 1;\n    repeated EmailType type = 2;\n  }\n\n  string full_name = 1;\n  repeated EmailAddress email_addresses = 2;\n}\n```\n\nIn this example, in proto `field` could take one of the following values:\n\n* `full_name` for a violation in the `full_name` value\n* `email_addresses[1].email` for a violation in the `email` field of the\n  first `email_addresses` message\n* `email_addresses[3].type[2]` for a violation in the second `type`\n  value in the third `email_addresses` message.\n\nIn JSON, the same values are represented as:\n\n* `fullName` for a violation in the `fullName` value\n* `emailAddresses[1].email` for a violation in the `email` field of the\n  first `emailAddresses` message\n* `emailAddresses[3].type[2]` for a violation in the second `type`\n  value in the third `emailAddresses` message.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A description of why the request element is bad.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "The reason of the field-level error. This is a constant value that\nidentifies the proximate cause of the field-level error. It should\nuniquely identify the type of the FieldViolation within the scope of the\ngoogle.rpc.ErrorInfo.domain. This should be at most 63\ncharacters and match a regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`,\nwhich represents UPPER_SNAKE_CASE.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "localized_message",
              "description": "Provides a localized error message for field-level errors that is safe to\nreturn to the API consumer.",
              "label": "",
              "type": "LocalizedMessage",
              "longType": "LocalizedMessage",
              "fullType": "google.rpc.LocalizedMessage",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DebugInfo",
          "longName": "DebugInfo",
          "fullName": "google.rpc.DebugInfo",
          "description": "Describes additional debugging info.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "stack_entries",
              "description": "The stack trace entries indicating where the error occurred.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "detail",
              "description": "Additional debugging information provided by the server.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ErrorInfo",
          "longName": "ErrorInfo",
          "fullName": "google.rpc.ErrorInfo",
          "description": "Describes the cause of the error with structured details.\n\nExample of an error when contacting the \"pubsub.googleapis.com\" API when it\nis not enabled:\n\n```text,json\n{ \"reason\": \"API_DISABLED\"\n  \"domain\": \"googleapis.com\"\n  \"metadata\": {\n    \"resource\": \"projects/123\",\n    \"service\": \"pubsub.googleapis.com\"\n  }\n}\n```\n\nThis response indicates that the pubsub.googleapis.com API is not enabled.\n\nExample of an error that is returned when attempting to create a Spanner\ninstance in a region that is out of stock:\n\n```text,json\n{ \"reason\": \"STOCKOUT\"\n  \"domain\": \"spanner.googleapis.com\",\n  \"metadata\": {\n    \"availableRegions\": \"us-central1,us-east2\"\n  }\n}\n```",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reason",
              "description": "The reason of the error. This is a constant value that identifies the\nproximate cause of the error. Error reasons are unique within a particular\ndomain of errors. This should be at most 63 characters and match a\nregular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents\nUPPER_SNAKE_CASE.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "domain",
              "description": "The logical grouping to which the \"reason\" belongs. The error domain\nis typically the registered service name of the tool or product that\ngenerates the error. Example: \"pubsub.googleapis.com\". If the error is\ngenerated by some common infrastructure, the error domain must be a\nglobally unique value that identifies the infrastructure. For Google API\ninfrastructure, the error domain is \"googleapis.com\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Additional structured details about this error.\n\nKeys must match a regular expression of `[a-z][a-zA-Z0-9-_]+` but should\nideally be lowerCamelCase. Also, they must be limited to 64 characters in\nlength. When identifying the current value of an exceeded limit, the units\nshould be contained in the key, not the value.  For example, rather than\n`{\"instanceLimit\": \"100/request\"}`, should be returned as,\n`{\"instanceLimitPerRequest\": \"100\"}`, if the client exceeds the number of\ninstances that can be created in a single (batch) request.",
              "label": "repeated",
              "type": "MetadataEntry",
              "longType": "ErrorInfo.MetadataEntry",
              "fullType": "google.rpc.ErrorInfo.MetadataEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MetadataEntry",
          "longName": "ErrorInfo.MetadataEntry",
          "fullName": "google.rpc.ErrorInfo.MetadataEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Help",
          "longName": "Help",
          "fullName": "google.rpc.Help",
          "description": "Provides links to documentation or for performing an out of band action.\n\nFor example, if a quota check failed with an error indicating the calling\nproject hasn't enabled the accessed service, this can contain a URL pointing\ndirectly to the right place in the developer console to flip the bit.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "links",
              "description": "URL(s) pointing to additional information on handling the current error.",
              "label": "repeated",
              "type": "Link",
              "longType": "Help.Link",
              "fullType": "google.rpc.Help.Link",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Link",
          "longName": "Help.Link",
          "fullName": "google.rpc.Help.Link",
          "description": "Describes a URL link.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "description",
              "description": "Describes what the link offers.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "url",
              "description": "The URL of the link.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LocalizedMessage",
          "longName": "LocalizedMessage",
          "fullName": "google.rpc.LocalizedMessage",
          "description": "Provides a localized error message that is safe to return to the user\nwhich can be attached to an RPC error.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "locale",
              "description": "The locale used following the specification defined at\nhttps://www.rfc-editor.org/rfc/bcp/bcp47.txt.\nExamples are: \"en-US\", \"fr-CH\", \"es-MX\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "The localized error message in the above locale.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PreconditionFailure",
          "longName": "PreconditionFailure",
          "fullName": "google.rpc.PreconditionFailure",
          "description": "Describes what preconditions have failed.\n\nFor example, if an RPC failed because it required the Terms of Service to be\nacknowledged, it could list the terms of service violation in the\nPreconditionFailure message.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "violations",
              "description": "Describes all precondition violations.",
              "label": "repeated",
              "type": "Violation",
              "longType": "PreconditionFailure.Violation",
              "fullType": "google.rpc.PreconditionFailure.Violation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Violation",
          "longName": "PreconditionFailure.Violation",
          "fullName": "google.rpc.PreconditionFailure.Violation",
          "description": "A message type used to describe a single precondition failure.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "The type of PreconditionFailure. We recommend using a service-specific\nenum type to define the supported precondition violation subjects. For\nexample, \"TOS\" for \"Terms of Service violation\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "subject",
              "description": "The subject, relative to the type, that failed.\nFor example, \"google.com/cloud\" relative to the \"TOS\" type would indicate\nwhich terms of service is being referenced.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A description of how the precondition failed. Developers can use this\ndescription to understand how to fix the failure.\n\nFor example: \"Terms of service not accepted\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QuotaFailure",
          "longName": "QuotaFailure",
          "fullName": "google.rpc.QuotaFailure",
          "description": "Describes how a quota check failed.\n\nFor example if a daily limit was exceeded for the calling project,\na service could respond with a QuotaFailure detail containing the project\nid and the description of the quota limit that was exceeded.  If the\ncalling project hasn't enabled the service in the developer console, then\na service could respond with the project id and set `service_disabled`\nto true.\n\nAlso see RetryInfo and Help types for other details about handling a\nquota failure.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "violations",
              "description": "Describes all quota violations.",
              "label": "repeated",
              "type": "Violation",
              "longType": "QuotaFailure.Violation",
              "fullType": "google.rpc.QuotaFailure.Violation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Violation",
          "longName": "QuotaFailure.Violation",
          "fullName": "google.rpc.QuotaFailure.Violation",
          "description": "A message type used to describe a single quota violation.  For example, a\ndaily quota or a custom quota that was exceeded.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject",
              "description": "The subject on which the quota check failed.\nFor example, `clientip:\u003cip address of client\u003e` or `project:\u003cGoogle\ndeveloper project id\u003e`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "A description of how the quota check failed. Clients can use this\ndescription to find more about the quota configuration in the service's\npublic documentation, or find the relevant quota limit to adjust through\ndeveloper console.\n\nFor example: \"Service disabled\" or \"Daily Limit for read operations\nexceeded\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RequestInfo",
          "longName": "RequestInfo",
          "fullName": "google.rpc.RequestInfo",
          "description": "Contains metadata about the request that clients can attach when filing a bug\nor providing other forms of feedback.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "request_id",
              "description": "An opaque string that should only be interpreted by the service generating\nit. For example, it can be used to identify requests in the service's logs.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "serving_data",
              "description": "Any data that was used to serve this request. For example, an encrypted\nstack trace that can be sent back to the service provider for debugging.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResourceInfo",
          "longName": "ResourceInfo",
          "fullName": "google.rpc.ResourceInfo",
          "description": "Describes the resource that is being accessed.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "resource_type",
              "description": "A name for the type of resource being accessed, e.g. \"sql table\",\n\"cloud storage bucket\", \"file\", \"Google calendar\"; or the type URL\nof the resource: e.g. \"type.googleapis.com/google.pubsub.v1.Topic\".",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "resource_name",
              "description": "The name of the resource being accessed.  For example, a shared calendar\nname: \"example.com_4fghdhgsrgh@group.calendar.google.com\", if the current\nerror is\n[google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "The owner of the resource (optional).\nFor example, `user:\u003cowner email\u003e` or `project:\u003cGoogle developer project\nid\u003e`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "Describes what error is encountered when accessing this resource.\nFor example, updating a cloud project may require the `writer` permission\non the developer console project.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RetryInfo",
          "longName": "RetryInfo",
          "fullName": "google.rpc.RetryInfo",
          "description": "Describes when the clients can retry a failed request. Clients could ignore\nthe recommendation here or retry when this information is missing from error\nresponses.\n\nIt's always recommended that clients should use exponential backoff when\nretrying.\n\nClients should wait until `retry_delay` amount of time has passed since\nreceiving the error response before retrying.  If retrying requests also\nfail, clients should use an exponential backoff scheme to gradually increase\nthe delay between retries based on `retry_delay`, until either a maximum\nnumber of retries have been reached or a maximum retry delay cap has been\nreached.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "retry_delay",
              "description": "Clients should wait at least this long between retrying the same request.",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "google/rpc/status.proto",
      "description": "",
      "package": "google.rpc",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Status",
          "longName": "Status",
          "fullName": "google.rpc.Status",
          "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "code",
              "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code].",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "details",
              "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
              "label": "repeated",
              "type": "Any",
              "longType": "google.protobuf.Any",
              "fullType": "google.protobuf.Any",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "google/protobuf/empty.proto",
      "description": "",
      "package": "google.protobuf",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Empty",
          "longName": "Empty",
          "fullName": "google.protobuf.Empty",
          "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n```\nservice Foo {\n  rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n}\n```",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": []
    },
    {
      "name": "google/protobuf/duration.proto",
      "description": "",
      "package": "google.protobuf",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Duration",
          "longName": "Duration",
          "fullName": "google.protobuf.Duration",
          "description": "A Duration represents a signed, fixed-length span of time represented\nas a count of seconds and fractions of seconds at nanosecond\nresolution. It is independent of any calendar and concepts like \"day\"\nor \"month\". It is related to Timestamp in that the difference between\ntwo Timestamp values is a Duration and it can be added or subtracted\nfrom a Timestamp. Range is approximately +-10,000 years.\n\n# Examples\n\nExample 1: Compute Duration from two Timestamps in pseudo code.\n\n    Timestamp start = ...;\n    Timestamp end = ...;\n    Duration duration = ...;\n\n    duration.seconds = end.seconds - start.seconds;\n    duration.nanos = end.nanos - start.nanos;\n\n    if (duration.seconds \u003c 0 \u0026\u0026 duration.nanos \u003e 0) {\n      duration.seconds += 1;\n      duration.nanos -= 1000000000;\n    } else if (duration.seconds \u003e 0 \u0026\u0026 duration.nanos \u003c 0) {\n      duration.seconds -= 1;\n      duration.nanos += 1000000000;\n    }\n\nExample 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n\n    Timestamp start = ...;\n    Duration duration = ...;\n    Timestamp end = ...;\n\n    end.seconds = start.seconds + duration.seconds;\n    end.nanos = start.nanos + duration.nanos;\n\n    if (end.nanos \u003c 0) {\n      end.seconds -= 1;\n      end.nanos += 1000000000;\n    } else if (end.nanos \u003e= 1000000000) {\n      end.seconds += 1;\n      end.nanos -= 1000000000;\n    }\n\nExample 3: Compute Duration from datetime.timedelta in Python.\n\n    td = datetime.timedelta(days=3, minutes=10)\n    duration = Duration()\n    duration.FromTimedelta(td)\n\n# JSON Mapping\n\nIn JSON format, the Duration type is encoded as a string rather than an\nobject, where the string ends in the suffix \"s\" (indicating seconds) and\nis preceded by the number of seconds, with nanoseconds expressed as\nfractional seconds. For example, 3 seconds with 0 nanoseconds should be\nencoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\nbe expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\nmicrosecond should be expressed in JSON format as \"3.000001s\".",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seconds",
              "description": "Signed seconds of the span of time. Must be from -315,576,000,000\nto +315,576,000,000 inclusive. Note: these bounds are computed from:\n60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nanos",
              "description": "Signed fractions of a second at nanosecond resolution of the span\nof time. Durations less than one second are represented with a 0\n`seconds` field and a positive or negative `nanos` field. For durations\nof one second or more, a non-zero value for the `nanos` field must be\nof the same sign as the `seconds` field. Must be from -999,999,999\nto +999,999,999 inclusive.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "google/protobuf/struct.proto",
      "description": "",
      "package": "google.protobuf",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "NullValue",
          "longName": "NullValue",
          "fullName": "google.protobuf.NullValue",
          "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.",
          "values": [
            {
              "name": "NULL_VALUE",
              "number": "0",
              "description": "Null value."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "ListValue",
          "longName": "ListValue",
          "fullName": "google.protobuf.ListValue",
          "description": "`ListValue` is a wrapper around a repeated field of values.\n\nThe JSON representation for `ListValue` is JSON array.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "values",
              "description": "Repeated field of dynamically typed values.",
              "label": "repeated",
              "type": "Value",
              "longType": "Value",
              "fullType": "google.protobuf.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Struct",
          "longName": "Struct",
          "fullName": "google.protobuf.Struct",
          "description": "`Struct` represents a structured data value, consisting of fields\nwhich map to dynamically typed values. In some languages, `Struct`\nmight be supported by a native representation. For example, in\nscripting languages like JS a struct is represented as an\nobject. The details of that representation are described together\nwith the proto support for the language.\n\nThe JSON representation for `Struct` is JSON object.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "fields",
              "description": "Unordered map of dynamically typed values.",
              "label": "repeated",
              "type": "FieldsEntry",
              "longType": "Struct.FieldsEntry",
              "fullType": "google.protobuf.Struct.FieldsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FieldsEntry",
          "longName": "Struct.FieldsEntry",
          "fullName": "google.protobuf.Struct.FieldsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Value",
              "longType": "Value",
              "fullType": "google.protobuf.Value",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Value",
          "longName": "Value",
          "fullName": "google.protobuf.Value",
          "description": "`Value` represents a dynamically typed value which can be either\nnull, a number, a string, a boolean, a recursive struct value, or a\nlist of values. A producer of value is expected to set one of these\nvariants. Absence of any variant indicates an error.\n\nThe JSON representation for `Value` is JSON value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "null_value",
              "description": "Represents a null value.",
              "label": "",
              "type": "NullValue",
              "longType": "NullValue",
              "fullType": "google.protobuf.NullValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "number_value",
              "description": "Represents a double value.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "string_value",
              "description": "Represents a string value.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "bool_value",
              "description": "Represents a boolean value.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "struct_value",
              "description": "Represents a structured value.",
              "label": "",
              "type": "Struct",
              "longType": "Struct",
              "fullType": "google.protobuf.Struct",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "list_value",
              "description": "Represents a repeated `Value`.",
              "label": "",
              "type": "ListValue",
              "longType": "ListValue",
              "fullType": "google.protobuf.ListValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "google/protobuf/timestamp.proto",
      "description": "",
      "package": "google.protobuf",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Timestamp",
          "longName": "Timestamp",
          "fullName": "google.protobuf.Timestamp",
          "description": "A Timestamp represents a point in time independent of any time zone\nor calendar, represented as seconds and fractions of seconds at\nnanosecond resolution in UTC Epoch time. It is encoded using the\nProleptic Gregorian Calendar which extends the Gregorian calendar\nbackwards to year one. It is encoded assuming all minutes are 60\nseconds long, i.e. leap seconds are \"smeared\" so that no leap second\ntable is needed for interpretation. Range is from\n`0001-01-01T00:00:00Z` to `9999-12-31T23:59:59.999999999Z`.\nRestricting to that range ensures that conversion to\nand from RFC 3339 date strings is possible.\nSee [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).\n\n# Examples\n\nExample 1: Compute Timestamp from POSIX `time()`.\n\n```\nTimestamp timestamp;\ntimestamp.set_seconds(time(NULL));\ntimestamp.set_nanos(0);\n```\n\nExample 2: Compute Timestamp from POSIX `gettimeofday()`.\n\n```\nstruct timeval tv;\ngettimeofday(\u0026tv, NULL);\n\nTimestamp timestamp;\ntimestamp.set_seconds(tv.tv_sec);\ntimestamp.set_nanos(tv.tv_usec * 1000);\n```\n\nExample 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n\n```\nFILETIME ft;\nGetSystemTimeAsFileTime(\u0026ft);\nUINT64 ticks = (((UINT64)ft.dwHighDateTime) \u003c\u003c 32) | ft.dwLowDateTime;\n\n// A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n// is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\nTimestamp timestamp;\ntimestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\ntimestamp.set_nanos((INT32) ((ticks % 10000000) * 100)); //\n```\n\nExample 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\n```\nlong millis = System.currentTimeMillis();\n\nTimestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n    .setNanos((int) ((millis % 1000) * 1000000)).build();\n\n```\n\nExample 5: Compute Timestamp from current time in Python.\n\n```\ntimestamp = Timestamp()\ntimestamp.GetCurrentTime()\n```\n\n# JSON Mapping\n\nIn JSON format, the `Timestamp` type is encoded as a string in the\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\nformat is `{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z`\nwhere `{year}` is always expressed using four digits while `{month}`, `{day}`,\n`{hour}`, `{min}`, and `{sec}` are zero-padded to two digits each. The fractional\nseconds, which can go up to 9 digits (so up to 1 nanosecond resolution),\nare optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\nis required, though only UTC (as indicated by \"Z\") is presently supported.\n\nFor example, `2017-01-15T01:30:15.01Z` encodes 15.01 seconds past\n01:30 UTC on January 15, 2017.\n\nIn JavaScript, you can convert a `Date` object to this format using the\nstandard [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\nmethod. In Python, you can convert a standard `datetime.datetime` object\nto this format using [`strftime`](https://docs.python.org/2/library/time.html#time.strftime)\nwith the time format spec `%Y-%m-%dT%H:%M:%S.%fZ`. Likewise, in Java, you\ncan use the Joda Time's [`ISODateTimeFormat.dateTime()`](\nhttp://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime--)\nto obtain a formatter capable of generating timestamps in this format.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seconds",
              "description": "Represents seconds of UTC time since Unix epoch\n`1970-01-01T00:00:00Z`. Must be from `0001-01-01T00:00:00Z` to\n`9999-12-31T23:59:59Z` inclusive.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nanos",
              "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nano values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "google/protobuf/any.proto",
      "description": "",
      "package": "google.protobuf",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Any",
          "longName": "Any",
          "fullName": "google.protobuf.Any",
          "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type_url",
              "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Must be a valid serialized protocol buffer of the above specified type.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "google/protobuf/field_mask.proto",
      "description": "",
      "package": "google.protobuf",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "FieldMask",
          "longName": "FieldMask",
          "fullName": "google.protobuf.FieldMask",
          "description": "`FieldMask` represents a set of symbolic field paths, for example:\n\n    paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, new values will\nbe appended to the existing repeated field in the target resource. Note that\na repeated field is only allowed in the last position of a `paths` string.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then new value will be merged into the existing sub-message\nin the target resource.\n\nFor example, given the target message:\n\n    f {\n      b {\n        d: 1\n        x: 2\n      }\n      c: [1]\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d: 10\n      }\n      c: [2]\n    }\n\nthen if the field mask is:\n\n paths: [\"f.b\", \"f.c\"]\n\nthen the result will be:\n\n    f {\n      b {\n        d: 10\n        x: 2\n      }\n      c: [1, 2]\n    }\n\nAn implementation may provide options to override this default behavior for\nrepeated and message fields.\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.\n\n## Field Mask Verification\n\nThe implementation of any API method which has a FieldMask type field in the\nrequest should verify the included field paths, and return an\n`INVALID_ARGUMENT` error if any path is unmappable.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "paths",
              "description": "The set of field mask paths.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/argument.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "ArgumentKind",
          "longName": "Argument.ArgumentKind",
          "fullName": "sui.rpc.v2beta2.Argument.ArgumentKind",
          "description": "",
          "values": [
            {
              "name": "ARGUMENT_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "GAS",
              "number": "1",
              "description": "The gas coin."
            },
            {
              "name": "INPUT",
              "number": "2",
              "description": "One of the input objects or primitive values (from\n`ProgrammableTransaction` inputs)."
            },
            {
              "name": "RESULT",
              "number": "3",
              "description": "The result of another command (from `ProgrammableTransaction` commands)."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Argument",
          "longName": "Argument",
          "fullName": "sui.rpc.v2beta2.Argument",
          "description": "An argument to a programmable transaction command.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "ArgumentKind",
              "longType": "Argument.ArgumentKind",
              "fullType": "sui.rpc.v2beta2.Argument.ArgumentKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "input",
              "description": "Index of an input when `kind` is `INPUT`.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_input",
              "defaultValue": ""
            },
            {
              "name": "result",
              "description": "Index of a result when `kind` is `RESULT`.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_result",
              "defaultValue": ""
            },
            {
              "name": "subresult",
              "description": "Used to access a nested result when `kind` is `RESULT`.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_subresult",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/signature_scheme.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": false,
      "hasServices": false,
      "enums": [
        {
          "name": "SignatureScheme",
          "longName": "SignatureScheme",
          "fullName": "sui.rpc.v2beta2.SignatureScheme",
          "description": "Flag use to disambiguate the signature schemes supported by Sui.\n\nNote: the enum values defined by this proto message exactly match their\nexpected BCS serialized values when serialized as a u8. See\n[enum.SignatureScheme](https://mystenlabs.github.io/sui-rust-sdk/sui_sdk_types/enum.SignatureScheme.html)\nfor more information about signature schemes.",
          "values": [
            {
              "name": "ED25519",
              "number": "0",
              "description": ""
            },
            {
              "name": "SECP256K1",
              "number": "1",
              "description": ""
            },
            {
              "name": "SECP256R1",
              "number": "2",
              "description": ""
            },
            {
              "name": "MULTISIG",
              "number": "3",
              "description": ""
            },
            {
              "name": "BLS12381",
              "number": "4",
              "description": ""
            },
            {
              "name": "ZKLOGIN",
              "number": "5",
              "description": ""
            },
            {
              "name": "PASSKEY",
              "number": "6",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/system_state.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MoveTable",
          "longName": "MoveTable",
          "fullName": "sui.rpc.v2beta2.MoveTable",
          "description": "A message that represents a Move `0x2::table::Table` or `0x2::bag::Bag`",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The UID of the table or bag",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "size",
              "description": "The size or number of key-value pairs in the table or bag",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_size",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakeSubsidy",
          "longName": "StakeSubsidy",
          "fullName": "sui.rpc.v2beta2.StakeSubsidy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "balance",
              "description": "Balance of SUI set aside for stake subsidies that will be drawn down over time.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_balance",
              "defaultValue": ""
            },
            {
              "name": "distribution_counter",
              "description": "Count of the number of times stake subsidies have been distributed.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_distribution_counter",
              "defaultValue": ""
            },
            {
              "name": "current_distribution_amount",
              "description": "The amount of stake subsidy to be drawn down per distribution.\nThis amount decays and decreases over time.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_current_distribution_amount",
              "defaultValue": ""
            },
            {
              "name": "stake_subsidy_period_length",
              "description": "Number of distributions to occur before the distribution amount decays.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_stake_subsidy_period_length",
              "defaultValue": ""
            },
            {
              "name": "stake_subsidy_decrease_rate",
              "description": "The rate at which the distribution amount decays at the end of each\nperiod. Expressed in basis points.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_stake_subsidy_decrease_rate",
              "defaultValue": ""
            },
            {
              "name": "extra_fields",
              "description": "Any extra fields that's not defined statically.",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_extra_fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StakingPool",
          "longName": "StakingPool",
          "fullName": "sui.rpc.v2beta2.StakingPool",
          "description": "A staking pool embedded in each validator struct in the system state object.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "UID of the StakingPool object",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "activation_epoch",
              "description": "The epoch at which this pool became active.\nThe value is `None` if the pool is pre-active and `Some(\u003cepoch_number\u003e)` if active or inactive.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_activation_epoch",
              "defaultValue": ""
            },
            {
              "name": "deactivation_epoch",
              "description": "The epoch at which this staking pool ceased to be active. `None` = {pre-active, active},\n`Some(\u003cepoch_number\u003e)` if in-active, and it was de-activated at epoch `\u003cepoch_number\u003e`.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_deactivation_epoch",
              "defaultValue": ""
            },
            {
              "name": "sui_balance",
              "description": "The total number of SUI tokens in this pool, including the SUI in the rewards_pool, as well as in all the principal\nin the `StakedSui` object, updated at epoch boundaries.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sui_balance",
              "defaultValue": ""
            },
            {
              "name": "rewards_pool",
              "description": "The epoch stake rewards will be added here at the end of each epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_rewards_pool",
              "defaultValue": ""
            },
            {
              "name": "pool_token_balance",
              "description": "Total number of pool tokens issued by the pool.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pool_token_balance",
              "defaultValue": ""
            },
            {
              "name": "exchange_rates",
              "description": "Exchange rate history of previous epochs.\n\nThe entries start from the `activation_epoch` of this pool and contains exchange rates at the beginning of each epoch,\ni.e., right after the rewards for the previous epoch have been deposited into the pool.\n\nkey: u64 (epoch number), value: PoolTokenExchangeRate",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_exchange_rates",
              "defaultValue": ""
            },
            {
              "name": "pending_stake",
              "description": "Pending stake amount for this epoch, emptied at epoch boundaries.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pending_stake",
              "defaultValue": ""
            },
            {
              "name": "pending_total_sui_withdraw",
              "description": "Pending stake withdrawn during the current epoch, emptied at epoch boundaries.\nThis includes both the principal and rewards SUI withdrawn.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pending_total_sui_withdraw",
              "defaultValue": ""
            },
            {
              "name": "pending_pool_token_withdraw",
              "description": "Pending pool token withdrawn during the current epoch, emptied at epoch boundaries.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pending_pool_token_withdraw",
              "defaultValue": ""
            },
            {
              "name": "extra_fields",
              "description": "Any extra fields that's not defined statically.",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_extra_fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StorageFund",
          "longName": "StorageFund",
          "fullName": "sui.rpc.v2beta2.StorageFund",
          "description": "Struct representing the onchain storage fund.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "total_object_storage_rebates",
              "description": "This is the sum of `storage_rebate` of\nall objects currently stored on-chain. To maintain this invariant, the only inflow of this\nbalance is storage charges collected from transactions, and the only outflow is storage rebates\nof transactions, including both the portion refunded to the transaction senders as well as\nthe non-refundable portion taken out and put into `non_refundable_balance`.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_total_object_storage_rebates",
              "defaultValue": ""
            },
            {
              "name": "non_refundable_balance",
              "description": "Represents any remaining inflow of the storage fund that should not\nbe taken out of the fund.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_non_refundable_balance",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SystemParameters",
          "longName": "SystemParameters",
          "fullName": "sui.rpc.v2beta2.SystemParameters",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_duration_ms",
              "description": "The duration of an epoch, in milliseconds.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_duration_ms",
              "defaultValue": ""
            },
            {
              "name": "stake_subsidy_start_epoch",
              "description": "The starting epoch in which stake subsidies start being paid out",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_stake_subsidy_start_epoch",
              "defaultValue": ""
            },
            {
              "name": "min_validator_count",
              "description": "Minimum number of active validators at any moment.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_min_validator_count",
              "defaultValue": ""
            },
            {
              "name": "max_validator_count",
              "description": "Maximum number of active validators at any moment.\nWe do not allow the number of validators in any epoch to go above this.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_validator_count",
              "defaultValue": ""
            },
            {
              "name": "min_validator_joining_stake",
              "description": "Deprecated.\nLower-bound on the amount of stake required to become a validator.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_min_validator_joining_stake",
              "defaultValue": ""
            },
            {
              "name": "validator_low_stake_threshold",
              "description": "Deprecated.\nValidators with stake amount below `validator_low_stake_threshold` are considered to\nhave low stake and will be escorted out of the validator set after being below this\nthreshold for more than `validator_low_stake_grace_period` number of epochs.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_validator_low_stake_threshold",
              "defaultValue": ""
            },
            {
              "name": "validator_very_low_stake_threshold",
              "description": "Deprecated.\nValidators with stake below `validator_very_low_stake_threshold` will be removed\nimmediately at epoch change, no grace period.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_validator_very_low_stake_threshold",
              "defaultValue": ""
            },
            {
              "name": "validator_low_stake_grace_period",
              "description": "A validator can have stake below `validator_low_stake_threshold`\nfor this many epochs before being kicked out.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_validator_low_stake_grace_period",
              "defaultValue": ""
            },
            {
              "name": "extra_fields",
              "description": "Any extra fields that are not defined statically.",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_extra_fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SystemState",
          "longName": "SystemState",
          "fullName": "sui.rpc.v2beta2.SystemState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "The version of the system state data structure type.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "The epoch id",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "protocol_version",
              "description": "The protocol version",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_protocol_version",
              "defaultValue": ""
            },
            {
              "name": "validators",
              "description": "Information about the validators",
              "label": "optional",
              "type": "ValidatorSet",
              "longType": "ValidatorSet",
              "fullType": "sui.rpc.v2beta2.ValidatorSet",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_validators",
              "defaultValue": ""
            },
            {
              "name": "storage_fund",
              "description": "Storage Fund info",
              "label": "optional",
              "type": "StorageFund",
              "longType": "StorageFund",
              "fullType": "sui.rpc.v2beta2.StorageFund",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_fund",
              "defaultValue": ""
            },
            {
              "name": "parameters",
              "description": "Set of system config parameters",
              "label": "optional",
              "type": "SystemParameters",
              "longType": "SystemParameters",
              "fullType": "sui.rpc.v2beta2.SystemParameters",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parameters",
              "defaultValue": ""
            },
            {
              "name": "reference_gas_price",
              "description": "The reference gas price for this epoch",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference_gas_price",
              "defaultValue": ""
            },
            {
              "name": "validator_report_records",
              "description": "A list of the records of validator reporting each other.\n\nThere is an entry in this list for each validator that has been reported\nat least once. Each record contains all the validators that reported\nthem. If a validator has never been reported they don't have a record in this list.\nThis lists persists across epoch: a peer continues being in a reported state until the\nreporter doesn't explicitly remove their report.",
              "label": "repeated",
              "type": "ValidatorReportRecord",
              "longType": "ValidatorReportRecord",
              "fullType": "sui.rpc.v2beta2.ValidatorReportRecord",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stake_subsidy",
              "description": "Schedule of stake subsidies given out each epoch.",
              "label": "optional",
              "type": "StakeSubsidy",
              "longType": "StakeSubsidy",
              "fullType": "sui.rpc.v2beta2.StakeSubsidy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_stake_subsidy",
              "defaultValue": ""
            },
            {
              "name": "safe_mode",
              "description": "Whether the system is running in a downgraded safe mode due to a non-recoverable bug.\nThis is set whenever we failed to execute advance_epoch, and ended up executing advance_epoch_safe_mode.\nIt can be reset once we are able to successfully execute advance_epoch.\nThe rest of the fields starting with `safe_mode_` are accumulated during safe mode\nwhen advance_epoch_safe_mode is executed. They will eventually be processed once we\nare out of safe mode.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_safe_mode",
              "defaultValue": ""
            },
            {
              "name": "safe_mode_storage_rewards",
              "description": "Storage rewards accumulated during safe_mode",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_safe_mode_storage_rewards",
              "defaultValue": ""
            },
            {
              "name": "safe_mode_computation_rewards",
              "description": "Computation rewards accumulated during safe_mode",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_safe_mode_computation_rewards",
              "defaultValue": ""
            },
            {
              "name": "safe_mode_storage_rebates",
              "description": "Storage rebates paid out during safe_mode",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_safe_mode_storage_rebates",
              "defaultValue": ""
            },
            {
              "name": "safe_mode_non_refundable_storage_fee",
              "description": "Nonrefundable storage fees accumulated during safe_mode",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_safe_mode_non_refundable_storage_fee",
              "defaultValue": ""
            },
            {
              "name": "epoch_start_timestamp_ms",
              "description": "Unix timestamp of when this this epoch started",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_start_timestamp_ms",
              "defaultValue": ""
            },
            {
              "name": "extra_fields",
              "description": "Any extra fields that's not defined statically.",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_extra_fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Validator",
          "longName": "Validator",
          "fullName": "sui.rpc.v2beta2.Validator",
          "description": "Definition of a Validator in the system contracts\n\nNote: fields of ValidatorMetadata are flattened into this type",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "A unique human-readable name of this validator.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "The Sui Address of the validator. This is the sender that created the Validator object,\nand also the address to send validator/coins to during withdraws.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_description",
              "defaultValue": ""
            },
            {
              "name": "image_url",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_image_url",
              "defaultValue": ""
            },
            {
              "name": "project_url",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_project_url",
              "defaultValue": ""
            },
            {
              "name": "protocol_public_key",
              "description": "The public key bytes corresponding to the private key that the validator\nholds to sign transactions. For now, this is the same as AuthorityName.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_protocol_public_key",
              "defaultValue": ""
            },
            {
              "name": "proof_of_possession",
              "description": "This is a proof that the validator has ownership of the protocol private key",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof_of_possession",
              "defaultValue": ""
            },
            {
              "name": "network_public_key",
              "description": "The public key bytes corresponding to the private key that the validator\nuses to establish TLS connections",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_network_public_key",
              "defaultValue": ""
            },
            {
              "name": "worker_public_key",
              "description": "The public key bytes correstponding to the Narwhal Worker",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_worker_public_key",
              "defaultValue": ""
            },
            {
              "name": "network_address",
              "description": "The network address of the validator (could also contain extra info such as port, DNS and etc.).",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_network_address",
              "defaultValue": ""
            },
            {
              "name": "p2p_address",
              "description": "The address of the validator used for p2p activities such as state sync (could also contain extra info such as port, DNS and etc.).",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_p2p_address",
              "defaultValue": ""
            },
            {
              "name": "primary_address",
              "description": "The address of the narwhal primary",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_primary_address",
              "defaultValue": ""
            },
            {
              "name": "worker_address",
              "description": "The address of the narwhal worker",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_worker_address",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_protocol_public_key",
              "description": "",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_protocol_public_key",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_proof_of_possession",
              "description": "",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_proof_of_possession",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_network_public_key",
              "description": "",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_network_public_key",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_worker_public_key",
              "description": "",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_worker_public_key",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_network_address",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_network_address",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_p2p_address",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_p2p_address",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_primary_address",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_primary_address",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_worker_address",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_worker_address",
              "defaultValue": ""
            },
            {
              "name": "metadata_extra_fields",
              "description": "Any extra fields that's not defined statically in the `ValidatorMetadata` struct",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_metadata_extra_fields",
              "defaultValue": ""
            },
            {
              "name": "voting_power",
              "description": "The voting power of this validator, which might be different from its\nstake amount.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_voting_power",
              "defaultValue": ""
            },
            {
              "name": "operation_cap_id",
              "description": "The ID of this validator's current valid `UnverifiedValidatorOperationCap`",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_operation_cap_id",
              "defaultValue": ""
            },
            {
              "name": "gas_price",
              "description": "Gas price quote, updated only at end of epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_price",
              "defaultValue": ""
            },
            {
              "name": "staking_pool",
              "description": "Staking pool for this validator.",
              "label": "optional",
              "type": "StakingPool",
              "longType": "StakingPool",
              "fullType": "sui.rpc.v2beta2.StakingPool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_staking_pool",
              "defaultValue": ""
            },
            {
              "name": "commission_rate",
              "description": "Commission rate of the validator, in basis point.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_commission_rate",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_stake",
              "description": "Total amount of stake that would be active in the next epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_stake",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_gas_price",
              "description": "This validator's gas price quote for the next epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_gas_price",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_commission_rate",
              "description": "The commission rate of the validator starting the next epoch, in basis point.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_commission_rate",
              "defaultValue": ""
            },
            {
              "name": "extra_fields",
              "description": "Any extra fields that's not defined statically.",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_extra_fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorReportRecord",
          "longName": "ValidatorReportRecord",
          "fullName": "sui.rpc.v2beta2.ValidatorReportRecord",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "reported",
              "description": "The address of the validator being reported",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reported",
              "defaultValue": ""
            },
            {
              "name": "reporters",
              "description": "The list of validator (addresses) that are reporting on the validator specified by `reported`",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorSet",
          "longName": "ValidatorSet",
          "fullName": "sui.rpc.v2beta2.ValidatorSet",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "total_stake",
              "description": "Total amount of stake from all active validators at the beginning of the epoch.\nWritten only once per epoch, in `advance_epoch` function.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_total_stake",
              "defaultValue": ""
            },
            {
              "name": "active_validators",
              "description": "The current list of active validators.",
              "label": "repeated",
              "type": "Validator",
              "longType": "Validator",
              "fullType": "sui.rpc.v2beta2.Validator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_active_validators",
              "description": "List of new validator candidates added during the current epoch.\nThey will be processed at the end of the epoch.\n\nkey: u64 (index), value: 0x3::validator::Validator",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pending_active_validators",
              "defaultValue": ""
            },
            {
              "name": "pending_removals",
              "description": "Removal requests from the validators. Each element is an index\npointing to `active_validators`.",
              "label": "repeated",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "staking_pool_mappings",
              "description": "Mappings from staking pool's ID to the sui address of a validator.\n\nkey: address (staking pool Id), value: address (sui address of the validator)",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_staking_pool_mappings",
              "defaultValue": ""
            },
            {
              "name": "inactive_validators",
              "description": "Mapping from a staking pool ID to the inactive validator that has that pool as its staking pool.\nWhen a validator is deactivated the validator is removed from `active_validators` it\nis added to this table so that stakers can continue to withdraw their stake from it.\n\nkey: address (staking pool Id), value: 0x3::validator_wrapper::ValidatorWrapper",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_inactive_validators",
              "defaultValue": ""
            },
            {
              "name": "validator_candidates",
              "description": "Table storing preactive/candidate validators, mapping their addresses to their `Validator ` structs.\nWhen an address calls `request_add_validator_candidate`, they get added to this table and become a preactive\nvalidator.\nWhen the candidate has met the min stake requirement, they can call `request_add_validator` to\nofficially add them to the active validator set `active_validators` next epoch.\n\nkey: address (sui address of the validator), value: 0x3::validator_wrapper::ValidatorWrapper",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_validator_candidates",
              "defaultValue": ""
            },
            {
              "name": "at_risk_validators",
              "description": "Table storing the number of epochs during which a validator's stake has been below the low stake threshold.",
              "label": "repeated",
              "type": "AtRiskValidatorsEntry",
              "longType": "ValidatorSet.AtRiskValidatorsEntry",
              "fullType": "sui.rpc.v2beta2.ValidatorSet.AtRiskValidatorsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "extra_fields",
              "description": "Any extra fields that's not defined statically.",
              "label": "optional",
              "type": "MoveTable",
              "longType": "MoveTable",
              "fullType": "sui.rpc.v2beta2.MoveTable",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_extra_fields",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AtRiskValidatorsEntry",
          "longName": "ValidatorSet.AtRiskValidatorsEntry",
          "fullName": "sui.rpc.v2beta2.ValidatorSet.AtRiskValidatorsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/ledger_service.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BatchGetObjectsRequest",
          "longName": "BatchGetObjectsRequest",
          "fullName": "sui.rpc.v2beta2.BatchGetObjectsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "requests",
              "description": "",
              "label": "repeated",
              "type": "GetObjectRequest",
              "longType": "GetObjectRequest",
              "fullType": "sui.rpc.v2beta2.GetObjectRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "Mask specifying which fields to read.\nIf no mask is specified, defaults to `object_id,version,digest`.",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BatchGetObjectsResponse",
          "longName": "BatchGetObjectsResponse",
          "fullName": "sui.rpc.v2beta2.BatchGetObjectsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "",
              "label": "repeated",
              "type": "GetObjectResult",
              "longType": "GetObjectResult",
              "fullType": "sui.rpc.v2beta2.GetObjectResult",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BatchGetTransactionsRequest",
          "longName": "BatchGetTransactionsRequest",
          "fullName": "sui.rpc.v2beta2.BatchGetTransactionsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digests",
              "description": "Required. The digests of the requested transactions.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "Mask specifying which fields to read.\nIf no mask is specified, defaults to `object_id,version,digest`.",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BatchGetTransactionsResponse",
          "longName": "BatchGetTransactionsResponse",
          "fullName": "sui.rpc.v2beta2.BatchGetTransactionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transactions",
              "description": "",
              "label": "repeated",
              "type": "GetTransactionResult",
              "longType": "GetTransactionResult",
              "fullType": "sui.rpc.v2beta2.GetTransactionResult",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCheckpointRequest",
          "longName": "GetCheckpointRequest",
          "fullName": "sui.rpc.v2beta2.GetCheckpointRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "sequence_number",
              "description": "The sequence number of the requested checkpoint.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "checkpoint_id",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of the requested checkpoint.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "checkpoint_id",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "Mask specifying which fields to read.\nIf no mask is specified, defaults to `object_id,version,digest`.",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCheckpointResponse",
          "longName": "GetCheckpointResponse",
          "fullName": "sui.rpc.v2beta2.GetCheckpointResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "checkpoint",
              "description": "",
              "label": "optional",
              "type": "Checkpoint",
              "longType": "Checkpoint",
              "fullType": "sui.rpc.v2beta2.Checkpoint",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_checkpoint",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEpochRequest",
          "longName": "GetEpochRequest",
          "fullName": "sui.rpc.v2beta2.GetEpochRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "The requested epoch.\nIf no epoch is provided the current epoch will be returned.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "Mask specifying which fields to read.\nIf no mask is specified, defaults to `epoch`.",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetEpochResponse",
          "longName": "GetEpochResponse",
          "fullName": "sui.rpc.v2beta2.GetEpochResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "optional",
              "type": "Epoch",
              "longType": "Epoch",
              "fullType": "sui.rpc.v2beta2.Epoch",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetObjectRequest",
          "longName": "GetObjectRequest",
          "fullName": "sui.rpc.v2beta2.GetObjectRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "Required. The `ObjectId` of the requested object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Request a specific version of the object.\nIf no version is specified, and the object is live, then the latest\nversion of the object is returned.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "Mask specifying which fields to read.\nIf no mask is specified, defaults to `object_id,version,digest`.",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetObjectResponse",
          "longName": "GetObjectResponse",
          "fullName": "sui.rpc.v2beta2.GetObjectResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object",
              "description": "",
              "label": "optional",
              "type": "Object",
              "longType": "Object",
              "fullType": "sui.rpc.v2beta2.Object",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetObjectResult",
          "longName": "GetObjectResult",
          "fullName": "sui.rpc.v2beta2.GetObjectResult",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object",
              "description": "",
              "label": "",
              "type": "Object",
              "longType": "Object",
              "fullType": "sui.rpc.v2beta2.Object",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "",
              "label": "",
              "type": "Status",
              "longType": "google.rpc.Status",
              "fullType": "google.rpc.Status",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetServiceInfoRequest",
          "longName": "GetServiceInfoRequest",
          "fullName": "sui.rpc.v2beta2.GetServiceInfoRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "GetServiceInfoResponse",
          "longName": "GetServiceInfoResponse",
          "fullName": "sui.rpc.v2beta2.GetServiceInfoResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "chain_id",
              "description": "The chain identifier of the chain that this node is on.\n\nThe chain identifier is the digest of the genesis checkpoint, the\ncheckpoint with sequence number 0.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_chain_id",
              "defaultValue": ""
            },
            {
              "name": "chain",
              "description": "Human-readable name of the chain that this node is on.\n\nThis is intended to be a human-readable name like `mainnet`, `testnet`, and so on.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_chain",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Current epoch of the node based on its highest executed checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "checkpoint_height",
              "description": "Checkpoint height of the most recently executed checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_checkpoint_height",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Unix timestamp of the most recently executed checkpoint.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_timestamp",
              "defaultValue": ""
            },
            {
              "name": "lowest_available_checkpoint",
              "description": "The lowest checkpoint for which checkpoints and transaction data are available.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lowest_available_checkpoint",
              "defaultValue": ""
            },
            {
              "name": "lowest_available_checkpoint_objects",
              "description": "The lowest checkpoint for which object data is available.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lowest_available_checkpoint_objects",
              "defaultValue": ""
            },
            {
              "name": "server",
              "description": "Software version of the service. Similar to the `server` http header.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_server",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransactionRequest",
          "longName": "GetTransactionRequest",
          "fullName": "sui.rpc.v2beta2.GetTransactionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "Required. The digest of the requested transaction.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "Mask specifying which fields to read.\nIf no mask is specified, defaults to `digest`.",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransactionResponse",
          "longName": "GetTransactionResponse",
          "fullName": "sui.rpc.v2beta2.GetTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "",
              "label": "optional",
              "type": "ExecutedTransaction",
              "longType": "ExecutedTransaction",
              "fullType": "sui.rpc.v2beta2.ExecutedTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetTransactionResult",
          "longName": "GetTransactionResult",
          "fullName": "sui.rpc.v2beta2.GetTransactionResult",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "",
              "label": "",
              "type": "ExecutedTransaction",
              "longType": "ExecutedTransaction",
              "fullType": "sui.rpc.v2beta2.ExecutedTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "",
              "label": "",
              "type": "Status",
              "longType": "google.rpc.Status",
              "fullType": "google.rpc.Status",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "LedgerService",
          "longName": "LedgerService",
          "fullName": "sui.rpc.v2beta2.LedgerService",
          "description": "",
          "methods": [
            {
              "name": "GetServiceInfo",
              "description": "Query the service for general information about its current state.",
              "requestType": "GetServiceInfoRequest",
              "requestLongType": "GetServiceInfoRequest",
              "requestFullType": "sui.rpc.v2beta2.GetServiceInfoRequest",
              "requestStreaming": false,
              "responseType": "GetServiceInfoResponse",
              "responseLongType": "GetServiceInfoResponse",
              "responseFullType": "sui.rpc.v2beta2.GetServiceInfoResponse",
              "responseStreaming": false
            },
            {
              "name": "GetObject",
              "description": "",
              "requestType": "GetObjectRequest",
              "requestLongType": "GetObjectRequest",
              "requestFullType": "sui.rpc.v2beta2.GetObjectRequest",
              "requestStreaming": false,
              "responseType": "GetObjectResponse",
              "responseLongType": "GetObjectResponse",
              "responseFullType": "sui.rpc.v2beta2.GetObjectResponse",
              "responseStreaming": false
            },
            {
              "name": "BatchGetObjects",
              "description": "",
              "requestType": "BatchGetObjectsRequest",
              "requestLongType": "BatchGetObjectsRequest",
              "requestFullType": "sui.rpc.v2beta2.BatchGetObjectsRequest",
              "requestStreaming": false,
              "responseType": "BatchGetObjectsResponse",
              "responseLongType": "BatchGetObjectsResponse",
              "responseFullType": "sui.rpc.v2beta2.BatchGetObjectsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetTransaction",
              "description": "",
              "requestType": "GetTransactionRequest",
              "requestLongType": "GetTransactionRequest",
              "requestFullType": "sui.rpc.v2beta2.GetTransactionRequest",
              "requestStreaming": false,
              "responseType": "GetTransactionResponse",
              "responseLongType": "GetTransactionResponse",
              "responseFullType": "sui.rpc.v2beta2.GetTransactionResponse",
              "responseStreaming": false
            },
            {
              "name": "BatchGetTransactions",
              "description": "",
              "requestType": "BatchGetTransactionsRequest",
              "requestLongType": "BatchGetTransactionsRequest",
              "requestFullType": "sui.rpc.v2beta2.BatchGetTransactionsRequest",
              "requestStreaming": false,
              "responseType": "BatchGetTransactionsResponse",
              "responseLongType": "BatchGetTransactionsResponse",
              "responseFullType": "sui.rpc.v2beta2.BatchGetTransactionsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetCheckpoint",
              "description": "",
              "requestType": "GetCheckpointRequest",
              "requestLongType": "GetCheckpointRequest",
              "requestFullType": "sui.rpc.v2beta2.GetCheckpointRequest",
              "requestStreaming": false,
              "responseType": "GetCheckpointResponse",
              "responseLongType": "GetCheckpointResponse",
              "responseFullType": "sui.rpc.v2beta2.GetCheckpointResponse",
              "responseStreaming": false
            },
            {
              "name": "GetEpoch",
              "description": "",
              "requestType": "GetEpochRequest",
              "requestLongType": "GetEpochRequest",
              "requestFullType": "sui.rpc.v2beta2.GetEpochRequest",
              "requestStreaming": false,
              "responseType": "GetEpochResponse",
              "responseLongType": "GetEpochResponse",
              "responseFullType": "sui.rpc.v2beta2.GetEpochResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "sui/rpc/v2beta2/owner.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "OwnerKind",
          "longName": "Owner.OwnerKind",
          "fullName": "sui.rpc.v2beta2.Owner.OwnerKind",
          "description": "",
          "values": [
            {
              "name": "OWNER_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "ADDRESS",
              "number": "1",
              "description": ""
            },
            {
              "name": "OBJECT",
              "number": "2",
              "description": ""
            },
            {
              "name": "SHARED",
              "number": "3",
              "description": ""
            },
            {
              "name": "IMMUTABLE",
              "number": "4",
              "description": ""
            },
            {
              "name": "CONSENSUS_ADDRESS",
              "number": "5",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Owner",
          "longName": "Owner",
          "fullName": "sui.rpc.v2beta2.Owner",
          "description": "Enum of different types of ownership for an object.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "OwnerKind",
              "longType": "Owner.OwnerKind",
              "fullType": "sui.rpc.v2beta2.Owner.OwnerKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "Address or ObjectId of the owner",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The `initial_shared_version` if kind is `SHARED` or `start_version` if kind `CONSENSUS_ADDRESS`.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/executed_transaction.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ExecutedTransaction",
          "longName": "ExecutedTransaction",
          "fullName": "sui.rpc.v2beta2.ExecutedTransaction",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "The digest of this Transaction.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "transaction",
              "description": "The transaction itself.",
              "label": "optional",
              "type": "Transaction",
              "longType": "Transaction",
              "fullType": "sui.rpc.v2beta2.Transaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "List of user signatures that are used to authorize the\nexecution of this transaction.",
              "label": "repeated",
              "type": "UserSignature",
              "longType": "UserSignature",
              "fullType": "sui.rpc.v2beta2.UserSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "effects",
              "description": "The `TransactionEffects` for this transaction.",
              "label": "optional",
              "type": "TransactionEffects",
              "longType": "TransactionEffects",
              "fullType": "sui.rpc.v2beta2.TransactionEffects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "The `TransactionEvents` for this transaction.\n\nThis field might be empty, even if it was explicitly requested, if the\ntransaction didn't produce any events.\n`sui.types.TransactionEffects.events_digest` is populated if the\ntransaction produced any events.",
              "label": "optional",
              "type": "TransactionEvents",
              "longType": "TransactionEvents",
              "fullType": "sui.rpc.v2beta2.TransactionEvents",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events",
              "defaultValue": ""
            },
            {
              "name": "checkpoint",
              "description": "The sequence number for the checkpoint that includes this transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_checkpoint",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "The Unix timestamp of the checkpoint that includes this transaction.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_timestamp",
              "defaultValue": ""
            },
            {
              "name": "balance_changes",
              "description": "",
              "label": "repeated",
              "type": "BalanceChange",
              "longType": "BalanceChange",
              "fullType": "sui.rpc.v2beta2.BalanceChange",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "input_objects",
              "description": "Set of input objects used during the execution of this transaction.",
              "label": "repeated",
              "type": "Object",
              "longType": "Object",
              "fullType": "sui.rpc.v2beta2.Object",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "output_objects",
              "description": "Set of output objects produced from the execution of this transaction.",
              "label": "repeated",
              "type": "Object",
              "longType": "Object",
              "fullType": "sui.rpc.v2beta2.Object",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/signature.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CircomG1",
          "longName": "CircomG1",
          "fullName": "sui.rpc.v2beta2.CircomG1",
          "description": "A G1 point.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "e0",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e0",
              "defaultValue": ""
            },
            {
              "name": "e1",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e1",
              "defaultValue": ""
            },
            {
              "name": "e2",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e2",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CircomG2",
          "longName": "CircomG2",
          "fullName": "sui.rpc.v2beta2.CircomG2",
          "description": "A G2 point.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "e00",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e00",
              "defaultValue": ""
            },
            {
              "name": "e01",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e01",
              "defaultValue": ""
            },
            {
              "name": "e10",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e10",
              "defaultValue": ""
            },
            {
              "name": "e11",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e11",
              "defaultValue": ""
            },
            {
              "name": "e20",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e20",
              "defaultValue": ""
            },
            {
              "name": "e21",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e21",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigAggregatedSignature",
          "longName": "MultisigAggregatedSignature",
          "fullName": "sui.rpc.v2beta2.MultisigAggregatedSignature",
          "description": "Aggregated signature from members of a multisig committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "signatures",
              "description": "The plain signatures encoded with signature scheme.\n\nThe signatures must be in the same order as they are listed in the committee.",
              "label": "repeated",
              "type": "MultisigMemberSignature",
              "longType": "MultisigMemberSignature",
              "fullType": "sui.rpc.v2beta2.MultisigMemberSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bitmap",
              "description": "Bitmap indicating which committee members contributed to the\nsignature.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bitmap",
              "defaultValue": ""
            },
            {
              "name": "legacy_bitmap",
              "description": "If present, means this signature's on-chain format uses the old\nlegacy multisig format.",
              "label": "repeated",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "committee",
              "description": "The committee to use to validate this signature.",
              "label": "optional",
              "type": "MultisigCommittee",
              "longType": "MultisigCommittee",
              "fullType": "sui.rpc.v2beta2.MultisigCommittee",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_committee",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigCommittee",
          "longName": "MultisigCommittee",
          "fullName": "sui.rpc.v2beta2.MultisigCommittee",
          "description": "A multisig committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "members",
              "description": "A list of committee members and their corresponding weight.",
              "label": "repeated",
              "type": "MultisigMember",
              "longType": "MultisigMember",
              "fullType": "sui.rpc.v2beta2.MultisigMember",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "threshold",
              "description": "The threshold of signatures needed to validate a signature from\nthis committee.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_threshold",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigMember",
          "longName": "MultisigMember",
          "fullName": "sui.rpc.v2beta2.MultisigMember",
          "description": "A member in a multisig committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "public_key",
              "description": "The public key of the committee member.",
              "label": "optional",
              "type": "MultisigMemberPublicKey",
              "longType": "MultisigMemberPublicKey",
              "fullType": "sui.rpc.v2beta2.MultisigMemberPublicKey",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            },
            {
              "name": "weight",
              "description": "The weight of this member's signature.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_weight",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigMemberPublicKey",
          "longName": "MultisigMemberPublicKey",
          "fullName": "sui.rpc.v2beta2.MultisigMemberPublicKey",
          "description": "Set of valid public keys for multisig committee members.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "scheme",
              "description": "The signature scheme of this public key.",
              "label": "optional",
              "type": "SignatureScheme",
              "longType": "SignatureScheme",
              "fullType": "sui.rpc.v2beta2.SignatureScheme",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_scheme",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "Public key bytes if scheme is ed25519 | secp256k1 | secp256r1 | passkey.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            },
            {
              "name": "zklogin",
              "description": "A zklogin public identifier if scheme is zklogin.",
              "label": "optional",
              "type": "ZkLoginPublicIdentifier",
              "longType": "ZkLoginPublicIdentifier",
              "fullType": "sui.rpc.v2beta2.ZkLoginPublicIdentifier",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_zklogin",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MultisigMemberSignature",
          "longName": "MultisigMemberSignature",
          "fullName": "sui.rpc.v2beta2.MultisigMemberSignature",
          "description": "A signature from a member of a multisig committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "scheme",
              "description": "The signature scheme of this signature.",
              "label": "optional",
              "type": "SignatureScheme",
              "longType": "SignatureScheme",
              "fullType": "sui.rpc.v2beta2.SignatureScheme",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_scheme",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Signature bytes if scheme is ed25519 | secp256k1 | secp256r1.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "zklogin",
              "description": "The zklogin authenticator if scheme is `ZKLOGIN`.",
              "label": "optional",
              "type": "ZkLoginAuthenticator",
              "longType": "ZkLoginAuthenticator",
              "fullType": "sui.rpc.v2beta2.ZkLoginAuthenticator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_zklogin",
              "defaultValue": ""
            },
            {
              "name": "passkey",
              "description": "The passkey authenticator if scheme is `PASSKEY`.",
              "label": "optional",
              "type": "PasskeyAuthenticator",
              "longType": "PasskeyAuthenticator",
              "fullType": "sui.rpc.v2beta2.PasskeyAuthenticator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_passkey",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PasskeyAuthenticator",
          "longName": "PasskeyAuthenticator",
          "fullName": "sui.rpc.v2beta2.PasskeyAuthenticator",
          "description": "A passkey authenticator.\n\nSee\n[struct.PasskeyAuthenticator](https://mystenlabs.github.io/sui-rust-sdk/sui_sdk_types/struct.PasskeyAuthenticator.html#bcs)\nfor more information on the requirements on the shape of the\n`client_data_json` field.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "authenticator_data",
              "description": "Opaque authenticator data for this passkey signature.\n\nSee [Authenticator Data](https://www.w3.org/TR/webauthn-2/#sctn-authenticator-data) for\nmore information on this field.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_authenticator_data",
              "defaultValue": ""
            },
            {
              "name": "client_data_json",
              "description": "Structured, unparsed, JSON for this passkey signature.\n\nSee [CollectedClientData](https://www.w3.org/TR/webauthn-2/#dictdef-collectedclientdata)\nfor more information on this field.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_client_data_json",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "A secp256r1 signature.",
              "label": "optional",
              "type": "SimpleSignature",
              "longType": "SimpleSignature",
              "fullType": "sui.rpc.v2beta2.SimpleSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimpleSignature",
          "longName": "SimpleSignature",
          "fullName": "sui.rpc.v2beta2.SimpleSignature",
          "description": "Either an ed25519, secp256k1 or secp256r1 signature",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "scheme",
              "description": "The signature scheme of this signature.",
              "label": "optional",
              "type": "SignatureScheme",
              "longType": "SignatureScheme",
              "fullType": "sui.rpc.v2beta2.SignatureScheme",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_scheme",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "Signature bytes",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "public_key",
              "description": "Public key bytes",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserSignature",
          "longName": "UserSignature",
          "fullName": "sui.rpc.v2beta2.UserSignature",
          "description": "A signature from a user.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bcs",
              "description": "This signature serialized as as BCS.\n\nWhen provided as input this will support both the form that is length\nprefixed as well as not length prefixed.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bcs",
              "defaultValue": ""
            },
            {
              "name": "scheme",
              "description": "The signature scheme of this signature.",
              "label": "optional",
              "type": "SignatureScheme",
              "longType": "SignatureScheme",
              "fullType": "sui.rpc.v2beta2.SignatureScheme",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_scheme",
              "defaultValue": ""
            },
            {
              "name": "simple",
              "description": "Simple signature if scheme is ed25519 | secp256k1 | secp256r1.",
              "label": "",
              "type": "SimpleSignature",
              "longType": "SimpleSignature",
              "fullType": "sui.rpc.v2beta2.SimpleSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "multisig",
              "description": "The multisig aggregated signature if scheme is `MULTISIG`.",
              "label": "",
              "type": "MultisigAggregatedSignature",
              "longType": "MultisigAggregatedSignature",
              "fullType": "sui.rpc.v2beta2.MultisigAggregatedSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "zklogin",
              "description": "The zklogin authenticator if scheme is `ZKLOGIN`.",
              "label": "",
              "type": "ZkLoginAuthenticator",
              "longType": "ZkLoginAuthenticator",
              "fullType": "sui.rpc.v2beta2.ZkLoginAuthenticator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            },
            {
              "name": "passkey",
              "description": "The passkey authenticator if scheme is `PASSKEY`.",
              "label": "",
              "type": "PasskeyAuthenticator",
              "longType": "PasskeyAuthenticator",
              "fullType": "sui.rpc.v2beta2.PasskeyAuthenticator",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "signature",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorAggregatedSignature",
          "longName": "ValidatorAggregatedSignature",
          "fullName": "sui.rpc.v2beta2.ValidatorAggregatedSignature",
          "description": "An aggregated signature from multiple validators.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "The epoch when this signature was produced.\n\nThis can be used to lookup the `ValidatorCommittee` from this epoch\nto verify this signature.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "The 48-byte Bls12381 aggregated signature.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "bitmap",
              "description": "Bitmap indicating which members of the committee contributed to\nthis signature.",
              "label": "repeated",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorCommittee",
          "longName": "ValidatorCommittee",
          "fullName": "sui.rpc.v2beta2.ValidatorCommittee",
          "description": "The validator set for a particular epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "The epoch where this committee governs.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "members",
              "description": "The committee members.",
              "label": "repeated",
              "type": "ValidatorCommitteeMember",
              "longType": "ValidatorCommitteeMember",
              "fullType": "sui.rpc.v2beta2.ValidatorCommitteeMember",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorCommitteeMember",
          "longName": "ValidatorCommitteeMember",
          "fullName": "sui.rpc.v2beta2.ValidatorCommitteeMember",
          "description": "A member of a validator committee.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "public_key",
              "description": "The 96-byte Bls12381 public key for this validator.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_public_key",
              "defaultValue": ""
            },
            {
              "name": "weight",
              "description": "voting weight this validator possesses.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_weight",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginAuthenticator",
          "longName": "ZkLoginAuthenticator",
          "fullName": "sui.rpc.v2beta2.ZkLoginAuthenticator",
          "description": "A zklogin authenticator.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "inputs",
              "description": "Zklogin proof and inputs required to perform proof verification.",
              "label": "optional",
              "type": "ZkLoginInputs",
              "longType": "ZkLoginInputs",
              "fullType": "sui.rpc.v2beta2.ZkLoginInputs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_inputs",
              "defaultValue": ""
            },
            {
              "name": "max_epoch",
              "description": "Maximum epoch for which the proof is valid.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_epoch",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "User signature with the public key attested to by the provided proof.",
              "label": "optional",
              "type": "SimpleSignature",
              "longType": "SimpleSignature",
              "fullType": "sui.rpc.v2beta2.SimpleSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginClaim",
          "longName": "ZkLoginClaim",
          "fullName": "sui.rpc.v2beta2.ZkLoginClaim",
          "description": "A claim of the iss in a zklogin proof.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "value",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value",
              "defaultValue": ""
            },
            {
              "name": "index_mod_4",
              "description": "",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_index_mod_4",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginInputs",
          "longName": "ZkLoginInputs",
          "fullName": "sui.rpc.v2beta2.ZkLoginInputs",
          "description": "A zklogin groth16 proof and the required inputs to perform proof verification.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "proof_points",
              "description": "",
              "label": "optional",
              "type": "ZkLoginProof",
              "longType": "ZkLoginProof",
              "fullType": "sui.rpc.v2beta2.ZkLoginProof",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_proof_points",
              "defaultValue": ""
            },
            {
              "name": "iss_base64_details",
              "description": "",
              "label": "optional",
              "type": "ZkLoginClaim",
              "longType": "ZkLoginClaim",
              "fullType": "sui.rpc.v2beta2.ZkLoginClaim",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_iss_base64_details",
              "defaultValue": ""
            },
            {
              "name": "header_base64",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_header_base64",
              "defaultValue": ""
            },
            {
              "name": "address_seed",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address_seed",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginProof",
          "longName": "ZkLoginProof",
          "fullName": "sui.rpc.v2beta2.ZkLoginProof",
          "description": "A zklogin groth16 proof.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "a",
              "description": "",
              "label": "optional",
              "type": "CircomG1",
              "longType": "CircomG1",
              "fullType": "sui.rpc.v2beta2.CircomG1",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_a",
              "defaultValue": ""
            },
            {
              "name": "b",
              "description": "",
              "label": "optional",
              "type": "CircomG2",
              "longType": "CircomG2",
              "fullType": "sui.rpc.v2beta2.CircomG2",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_b",
              "defaultValue": ""
            },
            {
              "name": "c",
              "description": "",
              "label": "optional",
              "type": "CircomG1",
              "longType": "CircomG1",
              "fullType": "sui.rpc.v2beta2.CircomG1",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_c",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ZkLoginPublicIdentifier",
          "longName": "ZkLoginPublicIdentifier",
          "fullName": "sui.rpc.v2beta2.ZkLoginPublicIdentifier",
          "description": "Public key equivalent for zklogin authenticators.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "iss",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_iss",
              "defaultValue": ""
            },
            {
              "name": "address_seed",
              "description": "base10 encoded Bn254FieldElement",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address_seed",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/live_data_service.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "SupplyState",
          "longName": "CoinTreasury.SupplyState",
          "fullName": "sui.rpc.v2beta2.CoinTreasury.SupplyState",
          "description": "Supply state of a coin, matching the Move SupplyState enum",
          "values": [
            {
              "name": "SUPPLY_STATE_UNKNOWN",
              "number": "0",
              "description": "Supply is unknown or TreasuryCap still exists (minting still possible)"
            },
            {
              "name": "FIXED",
              "number": "1",
              "description": "Supply is fixed (TreasuryCap consumed, no more minting possible)"
            }
          ]
        },
        {
          "name": "DynamicFieldKind",
          "longName": "DynamicField.DynamicFieldKind",
          "fullName": "sui.rpc.v2beta2.DynamicField.DynamicFieldKind",
          "description": "",
          "values": [
            {
              "name": "DYNAMIC_FIELD_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "FIELD",
              "number": "1",
              "description": ""
            },
            {
              "name": "OBJECT",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "TransactionChecks",
          "longName": "SimulateTransactionRequest.TransactionChecks",
          "fullName": "sui.rpc.v2beta2.SimulateTransactionRequest.TransactionChecks",
          "description": "buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX",
          "values": [
            {
              "name": "ENABLED",
              "number": "0",
              "description": ""
            },
            {
              "name": "DISABLED",
              "number": "1",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Balance",
          "longName": "Balance",
          "fullName": "sui.rpc.v2beta2.Balance",
          "description": "Balance information for a specific coin type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "coin_type",
              "description": "The type of the coin (e.g., 0x2::sui::SUI).",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_type",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Shows the total balance of the coin in its smallest unit.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_balance",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CoinMetadata",
          "longName": "CoinMetadata",
          "fullName": "sui.rpc.v2beta2.CoinMetadata",
          "description": "Metadata for a coin type",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ObjectId of the `0x2::coin::CoinMetadata` object or\n0x2::sui::coin_registry::CoinData object (when registered with CoinRegistry).",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "decimals",
              "description": "Number of decimal places to coin uses.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_decimals",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name for the token",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "symbol",
              "description": "Symbol for the token",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_symbol",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "Description of the token",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_description",
              "defaultValue": ""
            },
            {
              "name": "icon_url",
              "description": "URL for the token logo",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_icon_url",
              "defaultValue": ""
            },
            {
              "name": "metadata_cap_id",
              "description": "The MetadataCap ID if it has been claimed for this coin type.\nThis capability allows updating the coin's metadata fields.\nOnly populated when metadata is from CoinRegistry.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_metadata_cap_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CoinTreasury",
          "longName": "CoinTreasury",
          "fullName": "sui.rpc.v2beta2.CoinTreasury",
          "description": "Information about a coin type's `0x2::coin::TreasuryCap` and its total available supply",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ObjectId of the `0x2::coin::TreasuryCap` object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "total_supply",
              "description": "Total available supply for this coin type.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_total_supply",
              "defaultValue": ""
            },
            {
              "name": "supply_state",
              "description": "Supply state indicating if the supply is fixed or can still be minted",
              "label": "optional",
              "type": "SupplyState",
              "longType": "CoinTreasury.SupplyState",
              "fullType": "sui.rpc.v2beta2.CoinTreasury.SupplyState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_supply_state",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CommandOutput",
          "longName": "CommandOutput",
          "fullName": "sui.rpc.v2beta2.CommandOutput",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "argument",
              "description": "",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_argument",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value",
              "defaultValue": ""
            },
            {
              "name": "json",
              "description": "JSON rendering of the output.",
              "label": "optional",
              "type": "Value",
              "longType": "google.protobuf.Value",
              "fullType": "google.protobuf.Value",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_json",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CommandResult",
          "longName": "CommandResult",
          "fullName": "sui.rpc.v2beta2.CommandResult",
          "description": "An intermediate result/output from the execution of a single command",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "return_values",
              "description": "",
              "label": "repeated",
              "type": "CommandOutput",
              "longType": "CommandOutput",
              "fullType": "sui.rpc.v2beta2.CommandOutput",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mutated_by_ref",
              "description": "",
              "label": "repeated",
              "type": "CommandOutput",
              "longType": "CommandOutput",
              "fullType": "sui.rpc.v2beta2.CommandOutput",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DynamicField",
          "longName": "DynamicField",
          "fullName": "sui.rpc.v2beta2.DynamicField",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "DynamicFieldKind",
              "longType": "DynamicField.DynamicFieldKind",
              "fullType": "sui.rpc.v2beta2.DynamicField.DynamicFieldKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "parent",
              "description": "ObjectId of this dynamic field's parent.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parent",
              "defaultValue": ""
            },
            {
              "name": "field_id",
              "description": "ObjectId of this dynamic field.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_field_id",
              "defaultValue": ""
            },
            {
              "name": "name_type",
              "description": "The type of the dynamic field \"name\"",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name_type",
              "defaultValue": ""
            },
            {
              "name": "name_value",
              "description": "The serialized move value of \"name\"",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name_value",
              "defaultValue": ""
            },
            {
              "name": "value_type",
              "description": "The type of the dynamic field \"value\".\n\nIf this is a dynamic object field then this is the type of the object\nitself (which is a child of this field), otherwise this is the type of the\nvalue of this field.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value_type",
              "defaultValue": ""
            },
            {
              "name": "dynamic_object_id",
              "description": "The ObjectId of the child object when a child is a dynamic\nobject field.\n\nThe presence or absence of this field can be used to determine if a child\nis a dynamic field or a dynamic child object",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_dynamic_object_id",
              "defaultValue": ""
            },
            {
              "name": "object",
              "description": "The object itself when a child is a dynamic object field.",
              "label": "optional",
              "type": "Object",
              "longType": "Object",
              "fullType": "sui.rpc.v2beta2.Object",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetBalanceRequest",
          "longName": "GetBalanceRequest",
          "fullName": "sui.rpc.v2beta2.GetBalanceRequest",
          "description": "Request message for `LiveDataService.GetBalance`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "Required. The owner's Sui address.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "coin_type",
              "description": "Required. The type names for the coin (e.g., 0x2::sui::SUI).",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetBalanceResponse",
          "longName": "GetBalanceResponse",
          "fullName": "sui.rpc.v2beta2.GetBalanceResponse",
          "description": "Response message for `LiveDataService.GetBalance`.\nReturn the total coin balance for one coin type, owned by the address owner.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "balance",
              "description": "The balance information for the requested coin type.",
              "label": "optional",
              "type": "Balance",
              "longType": "Balance",
              "fullType": "sui.rpc.v2beta2.Balance",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_balance",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCoinInfoRequest",
          "longName": "GetCoinInfoRequest",
          "fullName": "sui.rpc.v2beta2.GetCoinInfoRequest",
          "description": "Request message for `NodeService.GetCoinInfo`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "coin_type",
              "description": "The coin type to request information about",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetCoinInfoResponse",
          "longName": "GetCoinInfoResponse",
          "fullName": "sui.rpc.v2beta2.GetCoinInfoResponse",
          "description": "Response message for `NodeService.GetCoinInfo`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "coin_type",
              "description": "Required. The coin type.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_type",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "This field will be populated with information about this coin\ntype's `0x2::coin::CoinMetadata` if it exists and has not been wrapped.",
              "label": "optional",
              "type": "CoinMetadata",
              "longType": "CoinMetadata",
              "fullType": "sui.rpc.v2beta2.CoinMetadata",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_metadata",
              "defaultValue": ""
            },
            {
              "name": "treasury",
              "description": "This field will be populated with information about this coin\ntype's `0x2::coin::TreasuryCap` if it exists and has not been wrapped.",
              "label": "optional",
              "type": "CoinTreasury",
              "longType": "CoinTreasury",
              "fullType": "sui.rpc.v2beta2.CoinTreasury",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_treasury",
              "defaultValue": ""
            },
            {
              "name": "regulated_metadata",
              "description": "If this coin type is a regulated coin, this field will be\npopulated with information about its `0x2::coin::RegulatedCoinMetadata`\nobject.",
              "label": "optional",
              "type": "RegulatedCoinMetadata",
              "longType": "RegulatedCoinMetadata",
              "fullType": "sui.rpc.v2beta2.RegulatedCoinMetadata",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_regulated_metadata",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListBalancesRequest",
          "longName": "ListBalancesRequest",
          "fullName": "sui.rpc.v2beta2.ListBalancesRequest",
          "description": "Request message for `LiveDataService.ListBalances`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "Required. The owner's Sui address.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "page_size",
              "description": "The maximum number of balance entries to return. The service may return fewer than this value.\nIf unspecified, at most `50` entries will be returned.\nThe maximum value is `1000`; values above `1000` will be coerced to `1000`.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_size",
              "defaultValue": ""
            },
            {
              "name": "page_token",
              "description": "A page token, received from a previous `ListBalances` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListBalances` must\nmatch the call that provided the page token.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_token",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListBalancesResponse",
          "longName": "ListBalancesResponse",
          "fullName": "sui.rpc.v2beta2.ListBalancesResponse",
          "description": "Response message for `LiveDataService.ListBalances`.\nReturn the total coin balance for all coin types, owned by the address owner.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "balances",
              "description": "The list of coin types and their respective balances.",
              "label": "repeated",
              "type": "Balance",
              "longType": "Balance",
              "fullType": "sui.rpc.v2beta2.Balance",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_page_token",
              "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_page_token",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDynamicFieldsRequest",
          "longName": "ListDynamicFieldsRequest",
          "fullName": "sui.rpc.v2beta2.ListDynamicFieldsRequest",
          "description": "Request message for `NodeService.ListDynamicFields`",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "parent",
              "description": "Required. The `UID` of the parent, which owns the collections of dynamic fields.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parent",
              "defaultValue": ""
            },
            {
              "name": "page_size",
              "description": "The maximum number of dynamic fields to return. The service may return fewer than this value.\nIf unspecified, at most `50` entries will be returned.\nThe maximum value is `1000`; values above `1000` will be coerced to `1000`.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_size",
              "defaultValue": ""
            },
            {
              "name": "page_token",
              "description": "A page token, received from a previous `ListDynamicFields` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListDynamicFields` must\nmatch the call that provided the page token.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_token",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListDynamicFieldsResponse",
          "longName": "ListDynamicFieldsResponse",
          "fullName": "sui.rpc.v2beta2.ListDynamicFieldsResponse",
          "description": "Response message for `NodeService.ListDynamicFields`",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "dynamic_fields",
              "description": "Page of dynamic fields owned by the specified parent.",
              "label": "repeated",
              "type": "DynamicField",
              "longType": "DynamicField",
              "fullType": "sui.rpc.v2beta2.DynamicField",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_page_token",
              "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_page_token",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOwnedObjectsRequest",
          "longName": "ListOwnedObjectsRequest",
          "fullName": "sui.rpc.v2beta2.ListOwnedObjectsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "Required. The address of the account that owns the objects.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "page_size",
              "description": "The maximum number of entries return. The service may return fewer than this value.\nIf unspecified, at most `50` entries will be returned.\nThe maximum value is `1000`; values above `1000` will be coerced to `1000`.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_size",
              "defaultValue": ""
            },
            {
              "name": "page_token",
              "description": "A page token, received from a previous `ListOwnedObjects` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListOwnedObjects` must\nmatch the call that provided the page token.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_token",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            },
            {
              "name": "object_type",
              "description": "Optional type filter to limit the types of objects listed.\n\nProviding an object type with no type params will return objects of that\ntype with any type parameter, e.g. `0x2::coin::Coin` will return all\n`Coin\u003cT\u003e` objects regardless of the type parameter `T`. Providing a type\nwith a type param will retrict the returned objects to only those objects\nthat match the provided type parameters, e.g.\n`0x2::coin::Coin\u003c0x2::sui::SUI\u003e` will only return `Coin\u003cSUI\u003e` objects.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListOwnedObjectsResponse",
          "longName": "ListOwnedObjectsResponse",
          "fullName": "sui.rpc.v2beta2.ListOwnedObjectsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "Page of dynamic fields owned by the specified parent.",
              "label": "repeated",
              "type": "Object",
              "longType": "Object",
              "fullType": "sui.rpc.v2beta2.Object",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_page_token",
              "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_page_token",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RegulatedCoinMetadata",
          "longName": "RegulatedCoinMetadata",
          "fullName": "sui.rpc.v2beta2.RegulatedCoinMetadata",
          "description": "Information about a regulated coin, which indicates that it makes use of the transfer deny list.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ObjectId of the `0x2::coin::RegulatedCoinMetadata` object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "coin_metadata_object",
              "description": "The ID of the coin's `CoinMetadata` or `CoinData` object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_metadata_object",
              "defaultValue": ""
            },
            {
              "name": "deny_cap_object",
              "description": "The ID of the coin's `DenyCap` object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_deny_cap_object",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimulateTransactionRequest",
          "longName": "SimulateTransactionRequest",
          "fullName": "sui.rpc.v2beta2.SimulateTransactionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "",
              "label": "optional",
              "type": "Transaction",
              "longType": "Transaction",
              "fullType": "sui.rpc.v2beta2.Transaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            },
            {
              "name": "checks",
              "description": "Specify whether checks should be ENABLED (default) or DISABLED while executing the transaction",
              "label": "optional",
              "type": "TransactionChecks",
              "longType": "SimulateTransactionRequest.TransactionChecks",
              "fullType": "sui.rpc.v2beta2.SimulateTransactionRequest.TransactionChecks",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_checks",
              "defaultValue": ""
            },
            {
              "name": "do_gas_selection",
              "description": "Perform gas selection based on a budget estimation and include the\nselected gas payment and budget in the response.\n\nThis option will be ignored if `checks` is `DISABLED`.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_do_gas_selection",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SimulateTransactionResponse",
          "longName": "SimulateTransactionResponse",
          "fullName": "sui.rpc.v2beta2.SimulateTransactionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "",
              "label": "optional",
              "type": "ExecutedTransaction",
              "longType": "ExecutedTransaction",
              "fullType": "sui.rpc.v2beta2.ExecutedTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "outputs",
              "description": "",
              "label": "repeated",
              "type": "CommandResult",
              "longType": "CommandResult",
              "fullType": "sui.rpc.v2beta2.CommandResult",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "LiveDataService",
          "longName": "LiveDataService",
          "fullName": "sui.rpc.v2beta2.LiveDataService",
          "description": "",
          "methods": [
            {
              "name": "ListDynamicFields",
              "description": "",
              "requestType": "ListDynamicFieldsRequest",
              "requestLongType": "ListDynamicFieldsRequest",
              "requestFullType": "sui.rpc.v2beta2.ListDynamicFieldsRequest",
              "requestStreaming": false,
              "responseType": "ListDynamicFieldsResponse",
              "responseLongType": "ListDynamicFieldsResponse",
              "responseFullType": "sui.rpc.v2beta2.ListDynamicFieldsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListOwnedObjects",
              "description": "",
              "requestType": "ListOwnedObjectsRequest",
              "requestLongType": "ListOwnedObjectsRequest",
              "requestFullType": "sui.rpc.v2beta2.ListOwnedObjectsRequest",
              "requestStreaming": false,
              "responseType": "ListOwnedObjectsResponse",
              "responseLongType": "ListOwnedObjectsResponse",
              "responseFullType": "sui.rpc.v2beta2.ListOwnedObjectsResponse",
              "responseStreaming": false
            },
            {
              "name": "GetCoinInfo",
              "description": "",
              "requestType": "GetCoinInfoRequest",
              "requestLongType": "GetCoinInfoRequest",
              "requestFullType": "sui.rpc.v2beta2.GetCoinInfoRequest",
              "requestStreaming": false,
              "responseType": "GetCoinInfoResponse",
              "responseLongType": "GetCoinInfoResponse",
              "responseFullType": "sui.rpc.v2beta2.GetCoinInfoResponse",
              "responseStreaming": false
            },
            {
              "name": "GetBalance",
              "description": "",
              "requestType": "GetBalanceRequest",
              "requestLongType": "GetBalanceRequest",
              "requestFullType": "sui.rpc.v2beta2.GetBalanceRequest",
              "requestStreaming": false,
              "responseType": "GetBalanceResponse",
              "responseLongType": "GetBalanceResponse",
              "responseFullType": "sui.rpc.v2beta2.GetBalanceResponse",
              "responseStreaming": false
            },
            {
              "name": "ListBalances",
              "description": "",
              "requestType": "ListBalancesRequest",
              "requestLongType": "ListBalancesRequest",
              "requestFullType": "sui.rpc.v2beta2.ListBalancesRequest",
              "requestStreaming": false,
              "responseType": "ListBalancesResponse",
              "responseLongType": "ListBalancesResponse",
              "responseFullType": "sui.rpc.v2beta2.ListBalancesResponse",
              "responseStreaming": false
            },
            {
              "name": "SimulateTransaction",
              "description": "",
              "requestType": "SimulateTransactionRequest",
              "requestLongType": "SimulateTransactionRequest",
              "requestFullType": "sui.rpc.v2beta2.SimulateTransactionRequest",
              "requestStreaming": false,
              "responseType": "SimulateTransactionResponse",
              "responseLongType": "SimulateTransactionResponse",
              "responseFullType": "sui.rpc.v2beta2.SimulateTransactionResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "sui/rpc/v2beta2/move_package.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Ability",
          "longName": "Ability",
          "fullName": "sui.rpc.v2beta2.Ability",
          "description": "An `Ability` classifies what operations are permitted for a given type",
          "values": [
            {
              "name": "ABILITY_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "COPY",
              "number": "1",
              "description": "Allows values of types with this ability to be copied"
            },
            {
              "name": "DROP",
              "number": "2",
              "description": "Allows values of types with this ability to be dropped."
            },
            {
              "name": "STORE",
              "number": "3",
              "description": "Allows values of types with this ability to exist inside a struct in global storage"
            },
            {
              "name": "KEY",
              "number": "4",
              "description": "Allows the type to serve as a key for global storage operations"
            }
          ]
        },
        {
          "name": "DatatypeKind",
          "longName": "DatatypeDescriptor.DatatypeKind",
          "fullName": "sui.rpc.v2beta2.DatatypeDescriptor.DatatypeKind",
          "description": "",
          "values": [
            {
              "name": "DATATYPE_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "STRUCT",
              "number": "1",
              "description": ""
            },
            {
              "name": "ENUM",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "Visibility",
          "longName": "FunctionDescriptor.Visibility",
          "fullName": "sui.rpc.v2beta2.FunctionDescriptor.Visibility",
          "description": "",
          "values": [
            {
              "name": "VISIBILITY_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "PRIVATE",
              "number": "1",
              "description": ""
            },
            {
              "name": "PUBLIC",
              "number": "2",
              "description": ""
            },
            {
              "name": "FRIEND",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "Reference",
          "longName": "OpenSignature.Reference",
          "fullName": "sui.rpc.v2beta2.OpenSignature.Reference",
          "description": "",
          "values": [
            {
              "name": "REFERENCE_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "IMMUTABLE",
              "number": "1",
              "description": ""
            },
            {
              "name": "MUTABLE",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "Type",
          "longName": "OpenSignatureBody.Type",
          "fullName": "sui.rpc.v2beta2.OpenSignatureBody.Type",
          "description": "",
          "values": [
            {
              "name": "TYPE_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "ADDRESS",
              "number": "1",
              "description": ""
            },
            {
              "name": "BOOL",
              "number": "2",
              "description": ""
            },
            {
              "name": "U8",
              "number": "3",
              "description": ""
            },
            {
              "name": "U16",
              "number": "4",
              "description": ""
            },
            {
              "name": "U32",
              "number": "5",
              "description": ""
            },
            {
              "name": "U64",
              "number": "6",
              "description": ""
            },
            {
              "name": "U128",
              "number": "7",
              "description": ""
            },
            {
              "name": "U256",
              "number": "8",
              "description": ""
            },
            {
              "name": "VECTOR",
              "number": "9",
              "description": ""
            },
            {
              "name": "DATATYPE",
              "number": "10",
              "description": ""
            },
            {
              "name": "TYPE_PARAMETER",
              "number": "11",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "DatatypeDescriptor",
          "longName": "DatatypeDescriptor",
          "fullName": "sui.rpc.v2beta2.DatatypeDescriptor",
          "description": "Describes a Move Datatype.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "type_name",
              "description": "Fully qualified name of this Datatype.\n\nThis is `\u003cdefining_id\u003e::\u003cmodule\u003e::\u003cname\u003e`",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type_name",
              "defaultValue": ""
            },
            {
              "name": "defining_id",
              "description": "PackageId of the package where this Datatype is defined.\n\nA type's `defining_id` is the `storage_id` of the package version that first introduced or added that type.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_defining_id",
              "defaultValue": ""
            },
            {
              "name": "module",
              "description": "Name of the module where this Datatype is defined",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Name of this Datatype",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "abilities",
              "description": "This type's abilities",
              "label": "repeated",
              "type": "Ability",
              "longType": "Ability",
              "fullType": "sui.rpc.v2beta2.Ability",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type_parameters",
              "description": "Ability constraints and phantom status for this type's generic type parameters",
              "label": "repeated",
              "type": "TypeParameter",
              "longType": "TypeParameter",
              "fullType": "sui.rpc.v2beta2.TypeParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "Indicates whether this datatype is a 'STRUCT' or an 'ENUM'",
              "label": "optional",
              "type": "DatatypeKind",
              "longType": "DatatypeDescriptor.DatatypeKind",
              "fullType": "sui.rpc.v2beta2.DatatypeDescriptor.DatatypeKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "Set of fields if this Datatype is a struct.\n\nThe order of the entries is the order of how the fields are defined.",
              "label": "repeated",
              "type": "FieldDescriptor",
              "longType": "FieldDescriptor",
              "fullType": "sui.rpc.v2beta2.FieldDescriptor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "variants",
              "description": "Set of variants if this Datatype is an enum.\n\nThe order of the entries is the order of how the variants are defined.",
              "label": "repeated",
              "type": "VariantDescriptor",
              "longType": "VariantDescriptor",
              "fullType": "sui.rpc.v2beta2.VariantDescriptor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FieldDescriptor",
          "longName": "FieldDescriptor",
          "fullName": "sui.rpc.v2beta2.FieldDescriptor",
          "description": "Descriptor of a field that belongs to a struct or enum variant",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the field",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "position",
              "description": "Order or position of the field in the struct or enum variant definition.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_position",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of the field",
              "label": "optional",
              "type": "OpenSignatureBody",
              "longType": "OpenSignatureBody",
              "fullType": "sui.rpc.v2beta2.OpenSignatureBody",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FunctionDescriptor",
          "longName": "FunctionDescriptor",
          "fullName": "sui.rpc.v2beta2.FunctionDescriptor",
          "description": "Descriptor of a Move function",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the function",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "visibility",
              "description": "Whether the function is `public`, `private` or `public(friend)`",
              "label": "optional",
              "type": "Visibility",
              "longType": "FunctionDescriptor.Visibility",
              "fullType": "sui.rpc.v2beta2.FunctionDescriptor.Visibility",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_visibility",
              "defaultValue": ""
            },
            {
              "name": "is_entry",
              "description": "Whether the function is marked `entry` or not.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_is_entry",
              "defaultValue": ""
            },
            {
              "name": "type_parameters",
              "description": "Ability constraints for type parameters",
              "label": "repeated",
              "type": "TypeParameter",
              "longType": "TypeParameter",
              "fullType": "sui.rpc.v2beta2.TypeParameter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parameters",
              "description": "Formal parameter types.",
              "label": "repeated",
              "type": "OpenSignature",
              "longType": "OpenSignature",
              "fullType": "sui.rpc.v2beta2.OpenSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "returns",
              "description": "Return types.",
              "label": "repeated",
              "type": "OpenSignature",
              "longType": "OpenSignature",
              "fullType": "sui.rpc.v2beta2.OpenSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Linkage",
          "longName": "Linkage",
          "fullName": "sui.rpc.v2beta2.Linkage",
          "description": "Upgraded package info for the linkage table.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "original_id",
              "description": "Id of the original package.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_original_id",
              "defaultValue": ""
            },
            {
              "name": "upgraded_id",
              "description": "Id of the upgraded package.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_upgraded_id",
              "defaultValue": ""
            },
            {
              "name": "upgraded_version",
              "description": "Version of the upgraded package.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_upgraded_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Module",
          "longName": "Module",
          "fullName": "sui.rpc.v2beta2.Module",
          "description": "A Move Module.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of this module.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "Serialized bytecode of the module.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            },
            {
              "name": "datatypes",
              "description": "List of DataTypes defined by this module.",
              "label": "repeated",
              "type": "DatatypeDescriptor",
              "longType": "DatatypeDescriptor",
              "fullType": "sui.rpc.v2beta2.DatatypeDescriptor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "functions",
              "description": "List of Functions defined by this module.",
              "label": "repeated",
              "type": "FunctionDescriptor",
              "longType": "FunctionDescriptor",
              "fullType": "sui.rpc.v2beta2.FunctionDescriptor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OpenSignature",
          "longName": "OpenSignature",
          "fullName": "sui.rpc.v2beta2.OpenSignature",
          "description": "Representation of a type signature that could appear as a function parameter or return value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "reference",
              "description": "",
              "label": "optional",
              "type": "Reference",
              "longType": "OpenSignature.Reference",
              "fullType": "sui.rpc.v2beta2.OpenSignature.Reference",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference",
              "defaultValue": ""
            },
            {
              "name": "body",
              "description": "",
              "label": "optional",
              "type": "OpenSignatureBody",
              "longType": "OpenSignatureBody",
              "fullType": "sui.rpc.v2beta2.OpenSignatureBody",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_body",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "OpenSignatureBody",
          "longName": "OpenSignatureBody",
          "fullName": "sui.rpc.v2beta2.OpenSignatureBody",
          "description": "Representation of a type signature that could appear as a field type for a struct or enum",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "Type of this signature",
              "label": "optional",
              "type": "Type",
              "longType": "OpenSignatureBody.Type",
              "fullType": "sui.rpc.v2beta2.OpenSignatureBody.Type",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type",
              "defaultValue": ""
            },
            {
              "name": "type_name",
              "description": "Fully qualified name of the datatype when `type` is `DATATYPE`",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type_name",
              "defaultValue": ""
            },
            {
              "name": "type_parameter_instantiation",
              "description": "Set when `type` is `VECTOR` or `DATATYPE`",
              "label": "repeated",
              "type": "OpenSignatureBody",
              "longType": "OpenSignatureBody",
              "fullType": "sui.rpc.v2beta2.OpenSignatureBody",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type_parameter",
              "description": "Position of the type parameter as defined in the containing data type descriptor when `type` is `TYPE_PARAMETER`",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type_parameter",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Package",
          "longName": "Package",
          "fullName": "sui.rpc.v2beta2.Package",
          "description": "A Move Package",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "storage_id",
              "description": "The PackageId of this package\n\nA package's `storage_id` is the Sui ObjectId of the package on-chain.\nOutside of system packages the `storage_id` for every package version is\ndifferent.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_id",
              "defaultValue": ""
            },
            {
              "name": "original_id",
              "description": "The PackageId of the first published version of this package.\n\nA package's `original_id` (sometimes also called its `runtime_id`) is the\n`storage_id` of the first version of this package that has been published.\nThe `original_id`/`runtime_id` is stable across all versions of the\npackage and does not ever change.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_original_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version of this package",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "modules",
              "description": "The modules defined by this package",
              "label": "repeated",
              "type": "Module",
              "longType": "Module",
              "fullType": "sui.rpc.v2beta2.Module",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type_origins",
              "description": "List of datatype origins for mapping datatypes to a package version where\nit was first defined",
              "label": "repeated",
              "type": "TypeOrigin",
              "longType": "TypeOrigin",
              "fullType": "sui.rpc.v2beta2.TypeOrigin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkage",
              "description": "The package's transitive dependencies as a mapping from the package's\nruntime Id (the Id it is referred to by in other packages) to its\nstorage Id (the Id it is loaded from on chain).",
              "label": "repeated",
              "type": "Linkage",
              "longType": "Linkage",
              "fullType": "sui.rpc.v2beta2.Linkage",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TypeOrigin",
          "longName": "TypeOrigin",
          "fullName": "sui.rpc.v2beta2.TypeOrigin",
          "description": "Identifies a struct and the module it was defined in.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "module_name",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module_name",
              "defaultValue": ""
            },
            {
              "name": "datatype_name",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_datatype_name",
              "defaultValue": ""
            },
            {
              "name": "package_id",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TypeParameter",
          "longName": "TypeParameter",
          "fullName": "sui.rpc.v2beta2.TypeParameter",
          "description": "A generic type parameter used in the declaration of a struct or enum.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "constraints",
              "description": "The type parameter constraints",
              "label": "repeated",
              "type": "Ability",
              "longType": "Ability",
              "fullType": "sui.rpc.v2beta2.Ability",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_phantom",
              "description": "Whether the parameter is declared as phantom",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_is_phantom",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariantDescriptor",
          "longName": "VariantDescriptor",
          "fullName": "sui.rpc.v2beta2.VariantDescriptor",
          "description": "Descriptor of an enum variant",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the variant",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "position",
              "description": "Order or position of the variant in the enum definition.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_position",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "Set of fields defined by this variant.",
              "label": "repeated",
              "type": "FieldDescriptor",
              "longType": "FieldDescriptor",
              "fullType": "sui.rpc.v2beta2.FieldDescriptor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/checkpoint.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Checkpoint",
          "longName": "Checkpoint",
          "fullName": "sui.rpc.v2beta2.Checkpoint",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "sequence_number",
              "description": "The height of this checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sequence_number",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this Checkpoint's CheckpointSummary.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "summary",
              "description": "The `CheckpointSummary` for this checkpoint.",
              "label": "optional",
              "type": "CheckpointSummary",
              "longType": "CheckpointSummary",
              "fullType": "sui.rpc.v2beta2.CheckpointSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_summary",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "An aggregated quorum signature from the validator committee that\ncertified this checkpoint.",
              "label": "optional",
              "type": "ValidatorAggregatedSignature",
              "longType": "ValidatorAggregatedSignature",
              "fullType": "sui.rpc.v2beta2.ValidatorAggregatedSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "The `CheckpointContents` for this checkpoint.",
              "label": "optional",
              "type": "CheckpointContents",
              "longType": "CheckpointContents",
              "fullType": "sui.rpc.v2beta2.CheckpointContents",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            },
            {
              "name": "transactions",
              "description": "List of transactions included in this checkpoint.",
              "label": "repeated",
              "type": "ExecutedTransaction",
              "longType": "ExecutedTransaction",
              "fullType": "sui.rpc.v2beta2.ExecutedTransaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/signature_verification_service.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "VerifySignatureRequest",
          "longName": "VerifySignatureRequest",
          "fullName": "sui.rpc.v2beta2.VerifySignatureRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "The message to verify against.\n\nToday the only supported message types are `PersonalMessage` and\n`TransactionData` and the `Bcs.name` must be set to indicate which type of\nmessage is being verified.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_message",
              "defaultValue": ""
            },
            {
              "name": "signature",
              "description": "The siganture to verify.",
              "label": "optional",
              "type": "UserSignature",
              "longType": "UserSignature",
              "fullType": "sui.rpc.v2beta2.UserSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_signature",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "Optional. Address to validate against the provided signature.\n\nIf provided, this address will be compared against the the address derived\nfrom the provide signature and a successful response will only be returned\nif they match.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            },
            {
              "name": "jwks",
              "description": "The set of JWKs to use when verifying Zklogin signatures.\nIf this is empty the current set of valid JWKs stored onchain will be used",
              "label": "repeated",
              "type": "ActiveJwk",
              "longType": "ActiveJwk",
              "fullType": "sui.rpc.v2beta2.ActiveJwk",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerifySignatureResponse",
          "longName": "VerifySignatureResponse",
          "fullName": "sui.rpc.v2beta2.VerifySignatureResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "is_valid",
              "description": "Indicates if the provided signature was valid given the requested parameters.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_is_valid",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "If `is_valid` is `false`, this is the reason for why the signature verification failed.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reason",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "SignatureVerificationService",
          "longName": "SignatureVerificationService",
          "fullName": "sui.rpc.v2beta2.SignatureVerificationService",
          "description": "",
          "methods": [
            {
              "name": "VerifySignature",
              "description": "Perform signature verification of a UserSignature against the provided message.",
              "requestType": "VerifySignatureRequest",
              "requestLongType": "VerifySignatureRequest",
              "requestFullType": "sui.rpc.v2beta2.VerifySignatureRequest",
              "requestStreaming": false,
              "responseType": "VerifySignatureResponse",
              "responseLongType": "VerifySignatureResponse",
              "responseFullType": "sui.rpc.v2beta2.VerifySignatureResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "sui/rpc/v2beta2/checkpoint_contents.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CheckpointContents",
          "longName": "CheckpointContents",
          "fullName": "sui.rpc.v2beta2.CheckpointContents",
          "description": "The committed to contents of a checkpoint.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bcs",
              "description": "This CheckpointContents serialized as BCS.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bcs",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this CheckpointContents.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of this CheckpointContents",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "transactions",
              "description": "Set of transactions committed to in this checkpoint.",
              "label": "repeated",
              "type": "CheckpointedTransactionInfo",
              "longType": "CheckpointedTransactionInfo",
              "fullType": "sui.rpc.v2beta2.CheckpointedTransactionInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointedTransactionInfo",
          "longName": "CheckpointedTransactionInfo",
          "fullName": "sui.rpc.v2beta2.CheckpointedTransactionInfo",
          "description": "Transaction information committed to in a checkpoint.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "Digest of the transaction.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "effects",
              "description": "Digest of the effects.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_effects",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Set of user signatures that authorized the transaction.",
              "label": "repeated",
              "type": "UserSignature",
              "longType": "UserSignature",
              "fullType": "sui.rpc.v2beta2.UserSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/object.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Object",
          "longName": "Object",
          "fullName": "sui.rpc.v2beta2.Object",
          "description": "An object on the Sui blockchain.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bcs",
              "description": "This Object serialized as BCS.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bcs",
              "defaultValue": ""
            },
            {
              "name": "object_id",
              "description": "`ObjectId` for this object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of the object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this Object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Owner of the object.",
              "label": "optional",
              "type": "Owner",
              "longType": "Owner",
              "fullType": "sui.rpc.v2beta2.Owner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "object_type",
              "description": "The type of this object.\n\nThis will be 'package' for packages and a StructTag for move structs.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_type",
              "defaultValue": ""
            },
            {
              "name": "has_public_transfer",
              "description": "DEPRECATED this field is no longer used to determine whether a tx can transfer this\nobject. Instead, it is always calculated from the objects type when loaded in execution.\n\nOnly set for Move structs",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_has_public_transfer",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "BCS bytes of a Move struct value.\n\nOnly set for Move structs",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            },
            {
              "name": "package",
              "description": "Package information for Move Packages",
              "label": "optional",
              "type": "Package",
              "longType": "Package",
              "fullType": "sui.rpc.v2beta2.Package",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package",
              "defaultValue": ""
            },
            {
              "name": "previous_transaction",
              "description": "The digest of the transaction that created or last mutated this object",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_previous_transaction",
              "defaultValue": ""
            },
            {
              "name": "storage_rebate",
              "description": "The amount of SUI to rebate if this object gets deleted.\nThis number is re-calculated each time the object is mutated based on\nthe present storage gas price.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_rebate",
              "defaultValue": ""
            },
            {
              "name": "json",
              "description": "JSON rendering of the object.",
              "label": "optional",
              "type": "Value",
              "longType": "google.protobuf.Value",
              "fullType": "google.protobuf.Value",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_json",
              "defaultValue": ""
            },
            {
              "name": "balance",
              "description": "Current balance if this object is a `0x2::coin::Coin\u003cT\u003e`",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_balance",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/subscription_service.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "SubscribeCheckpointsRequest",
          "longName": "SubscribeCheckpointsRequest",
          "fullName": "sui.rpc.v2beta2.SubscribeCheckpointsRequest",
          "description": "Request message for SubscriptionService.SubscribeCheckpoints",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "read_mask",
              "description": "Optional. Mask for specifiying which parts of the\nSubscribeCheckpointsResponse should be returned.",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubscribeCheckpointsResponse",
          "longName": "SubscribeCheckpointsResponse",
          "fullName": "sui.rpc.v2beta2.SubscribeCheckpointsResponse",
          "description": "Response message for SubscriptionService.SubscribeCheckpoints",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "cursor",
              "description": "Required. The checkpoint sequence number and value of the current cursor\ninto the checkpoint stream",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_cursor",
              "defaultValue": ""
            },
            {
              "name": "checkpoint",
              "description": "The requested data for this checkpoint",
              "label": "optional",
              "type": "Checkpoint",
              "longType": "Checkpoint",
              "fullType": "sui.rpc.v2beta2.Checkpoint",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_checkpoint",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "SubscriptionService",
          "longName": "SubscriptionService",
          "fullName": "sui.rpc.v2beta2.SubscriptionService",
          "description": "",
          "methods": [
            {
              "name": "SubscribeCheckpoints",
              "description": "Subscribe to the stream of checkpoints.\n\nThis API provides a subscription to the checkpoint stream for the Sui\nblockchain. When a subscription is initialized the stream will begin with\nthe latest executed checkpoint as seen by the server. Responses are\nguaranteed to return checkpoints in-order and without gaps. This enables\nclients to know exactly the last checkpoint they have processed and in the\nevent the subscription terminates (either by the client/server or by the\nconnection breaking), clients will be able to reinitailize a subscription\nand then leverage other APIs in order to request data for the checkpoints\nthey missed.",
              "requestType": "SubscribeCheckpointsRequest",
              "requestLongType": "SubscribeCheckpointsRequest",
              "requestFullType": "sui.rpc.v2beta2.SubscribeCheckpointsRequest",
              "requestStreaming": false,
              "responseType": "SubscribeCheckpointsResponse",
              "responseLongType": "SubscribeCheckpointsResponse",
              "responseFullType": "sui.rpc.v2beta2.SubscribeCheckpointsResponse",
              "responseStreaming": true
            }
          ]
        }
      ]
    },
    {
      "name": "sui/rpc/v2beta2/epoch.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Epoch",
          "longName": "Epoch",
          "fullName": "sui.rpc.v2beta2.Epoch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "committee",
              "description": "The committee governing this epoch.",
              "label": "optional",
              "type": "ValidatorCommittee",
              "longType": "ValidatorCommittee",
              "fullType": "sui.rpc.v2beta2.ValidatorCommittee",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_committee",
              "defaultValue": ""
            },
            {
              "name": "system_state",
              "description": "Snapshot of Sui's SystemState (`0x3::sui_system::SystemState`) at the\nbeginning of the epoch, for past epochs, or the current state for the\ncurrent epoch.",
              "label": "optional",
              "type": "SystemState",
              "longType": "SystemState",
              "fullType": "sui.rpc.v2beta2.SystemState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_system_state",
              "defaultValue": ""
            },
            {
              "name": "first_checkpoint",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_first_checkpoint",
              "defaultValue": ""
            },
            {
              "name": "last_checkpoint",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_last_checkpoint",
              "defaultValue": ""
            },
            {
              "name": "start",
              "description": "",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_start",
              "defaultValue": ""
            },
            {
              "name": "end",
              "description": "",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end",
              "defaultValue": ""
            },
            {
              "name": "reference_gas_price",
              "description": "Reference gas price denominated in MIST",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_reference_gas_price",
              "defaultValue": ""
            },
            {
              "name": "protocol_config",
              "description": "",
              "label": "optional",
              "type": "ProtocolConfig",
              "longType": "ProtocolConfig",
              "fullType": "sui.rpc.v2beta2.ProtocolConfig",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_protocol_config",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/gas_cost_summary.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GasCostSummary",
          "longName": "GasCostSummary",
          "fullName": "sui.rpc.v2beta2.GasCostSummary",
          "description": "Summary of gas charges.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "computation_cost",
              "description": "Cost of computation/execution.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_computation_cost",
              "defaultValue": ""
            },
            {
              "name": "storage_cost",
              "description": "Storage cost, it's the sum of all storage cost for all objects created or mutated.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_cost",
              "defaultValue": ""
            },
            {
              "name": "storage_rebate",
              "description": "The amount of storage cost refunded to the user for all objects deleted or mutated in the\ntransaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_rebate",
              "defaultValue": ""
            },
            {
              "name": "non_refundable_storage_fee",
              "description": "The fee for the rebate. The portion of the storage rebate kept by the system.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_non_refundable_storage_fee",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/bcs.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Bcs",
          "longName": "Bcs",
          "fullName": "sui.rpc.v2beta2.Bcs",
          "description": "`Bcs` contains an arbitrary type that is serialized using the\n[BCS](https://mystenlabs.github.io/sui-rust-sdk/sui_sdk_types/index.html#bcs)\nformat as well as a name that identifies the type of the serialized value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name that identifies the type of the serialized value.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Bytes of a BCS serialized value.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_value",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/move_package_service.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GetDatatypeRequest",
          "longName": "GetDatatypeRequest",
          "fullName": "sui.rpc.v2beta2.GetDatatypeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package_id",
              "description": "Required. The `storage_id` of the requested package.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            },
            {
              "name": "module_name",
              "description": "Required. The name of the requested module.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module_name",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Required. The name of the requested datatype.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetDatatypeResponse",
          "longName": "GetDatatypeResponse",
          "fullName": "sui.rpc.v2beta2.GetDatatypeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "datatype",
              "description": "The datatype.",
              "label": "optional",
              "type": "DatatypeDescriptor",
              "longType": "DatatypeDescriptor",
              "fullType": "sui.rpc.v2beta2.DatatypeDescriptor",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_datatype",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFunctionRequest",
          "longName": "GetFunctionRequest",
          "fullName": "sui.rpc.v2beta2.GetFunctionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package_id",
              "description": "Required. The `storage_id` of the requested package.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            },
            {
              "name": "module_name",
              "description": "Required. The name of the requested module.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module_name",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Required. The name of the requested function.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_name",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetFunctionResponse",
          "longName": "GetFunctionResponse",
          "fullName": "sui.rpc.v2beta2.GetFunctionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "function",
              "description": "The function.",
              "label": "optional",
              "type": "FunctionDescriptor",
              "longType": "FunctionDescriptor",
              "fullType": "sui.rpc.v2beta2.FunctionDescriptor",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_function",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetPackageRequest",
          "longName": "GetPackageRequest",
          "fullName": "sui.rpc.v2beta2.GetPackageRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package_id",
              "description": "Required. The `storage_id` of the requested package.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetPackageResponse",
          "longName": "GetPackageResponse",
          "fullName": "sui.rpc.v2beta2.GetPackageResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package",
              "description": "The package.",
              "label": "optional",
              "type": "Package",
              "longType": "Package",
              "fullType": "sui.rpc.v2beta2.Package",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPackageVersionsRequest",
          "longName": "ListPackageVersionsRequest",
          "fullName": "sui.rpc.v2beta2.ListPackageVersionsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package_id",
              "description": "Required. The `storage_id` of any version of the package.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            },
            {
              "name": "page_size",
              "description": "The maximum number of versions to return. The service may return fewer than this value.\nIf unspecified, at most `1000` entries will be returned.\nThe maximum value is `10000`; values above `10000` will be coerced to `10000`.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_size",
              "defaultValue": ""
            },
            {
              "name": "page_token",
              "description": "A page token, received from a previous `ListPackageVersions` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListPackageVersions` must\nmatch the call that provided the page token.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_page_token",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListPackageVersionsResponse",
          "longName": "ListPackageVersionsResponse",
          "fullName": "sui.rpc.v2beta2.ListPackageVersionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "versions",
              "description": "List of all package versions, ordered by version.",
              "label": "repeated",
              "type": "PackageVersion",
              "longType": "PackageVersion",
              "fullType": "sui.rpc.v2beta2.PackageVersion",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_page_token",
              "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_page_token",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PackageVersion",
          "longName": "PackageVersion",
          "fullName": "sui.rpc.v2beta2.PackageVersion",
          "description": "A simplified representation of a package version",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package_id",
              "description": "The storage ID of this package version",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version number",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "MovePackageService",
          "longName": "MovePackageService",
          "fullName": "sui.rpc.v2beta2.MovePackageService",
          "description": "",
          "methods": [
            {
              "name": "GetPackage",
              "description": "",
              "requestType": "GetPackageRequest",
              "requestLongType": "GetPackageRequest",
              "requestFullType": "sui.rpc.v2beta2.GetPackageRequest",
              "requestStreaming": false,
              "responseType": "GetPackageResponse",
              "responseLongType": "GetPackageResponse",
              "responseFullType": "sui.rpc.v2beta2.GetPackageResponse",
              "responseStreaming": false
            },
            {
              "name": "GetDatatype",
              "description": "",
              "requestType": "GetDatatypeRequest",
              "requestLongType": "GetDatatypeRequest",
              "requestFullType": "sui.rpc.v2beta2.GetDatatypeRequest",
              "requestStreaming": false,
              "responseType": "GetDatatypeResponse",
              "responseLongType": "GetDatatypeResponse",
              "responseFullType": "sui.rpc.v2beta2.GetDatatypeResponse",
              "responseStreaming": false
            },
            {
              "name": "GetFunction",
              "description": "",
              "requestType": "GetFunctionRequest",
              "requestLongType": "GetFunctionRequest",
              "requestFullType": "sui.rpc.v2beta2.GetFunctionRequest",
              "requestStreaming": false,
              "responseType": "GetFunctionResponse",
              "responseLongType": "GetFunctionResponse",
              "responseFullType": "sui.rpc.v2beta2.GetFunctionResponse",
              "responseStreaming": false
            },
            {
              "name": "ListPackageVersions",
              "description": "",
              "requestType": "ListPackageVersionsRequest",
              "requestLongType": "ListPackageVersionsRequest",
              "requestFullType": "sui.rpc.v2beta2.ListPackageVersionsRequest",
              "requestStreaming": false,
              "responseType": "ListPackageVersionsResponse",
              "responseLongType": "ListPackageVersionsResponse",
              "responseFullType": "sui.rpc.v2beta2.ListPackageVersionsResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "sui/rpc/v2beta2/object_reference.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ObjectReference",
          "longName": "ObjectReference",
          "fullName": "sui.rpc.v2beta2.ObjectReference",
          "description": "Reference to an object.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "The object id of this object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version of this object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/transaction_execution_service.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ExecuteTransactionRequest",
          "longName": "ExecuteTransactionRequest",
          "fullName": "sui.rpc.v2beta2.ExecuteTransactionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "transaction",
              "description": "The transaction to execute.",
              "label": "optional",
              "type": "Transaction",
              "longType": "Transaction",
              "fullType": "sui.rpc.v2beta2.Transaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            },
            {
              "name": "signatures",
              "description": "Set of `UserSiganture`s authorizing the execution of the provided\ntransaction.",
              "label": "repeated",
              "type": "UserSignature",
              "longType": "UserSignature",
              "fullType": "sui.rpc.v2beta2.UserSignature",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "read_mask",
              "description": "Mask specifying which fields to read.\nIf no mask is specified, defaults to `finality`.",
              "label": "optional",
              "type": "FieldMask",
              "longType": "google.protobuf.FieldMask",
              "fullType": "google.protobuf.FieldMask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_read_mask",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecuteTransactionResponse",
          "longName": "ExecuteTransactionResponse",
          "fullName": "sui.rpc.v2beta2.ExecuteTransactionResponse",
          "description": "Response message for `NodeService.ExecuteTransaction`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "finality",
              "description": "Indicates the finality of the executed transaction.",
              "label": "optional",
              "type": "TransactionFinality",
              "longType": "TransactionFinality",
              "fullType": "sui.rpc.v2beta2.TransactionFinality",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_finality",
              "defaultValue": ""
            },
            {
              "name": "transaction",
              "description": "",
              "label": "optional",
              "type": "ExecutedTransaction",
              "longType": "ExecutedTransaction",
              "fullType": "sui.rpc.v2beta2.ExecutedTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionFinality",
          "longName": "TransactionFinality",
          "fullName": "sui.rpc.v2beta2.TransactionFinality",
          "description": "Indicates the finality of the executed transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "certified",
              "description": "A quorum certificate certifying that a transaction is final but might not\nbe included in a checkpoint yet.",
              "label": "",
              "type": "ValidatorAggregatedSignature",
              "longType": "ValidatorAggregatedSignature",
              "fullType": "sui.rpc.v2beta2.ValidatorAggregatedSignature",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "finality",
              "defaultValue": ""
            },
            {
              "name": "checkpointed",
              "description": "Sequence number of the checkpoint that includes the transaction.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "finality",
              "defaultValue": ""
            },
            {
              "name": "quorum_executed",
              "description": "Indicates that a quorum of validators has executed the transaction but\nthat it might not be included in a checkpoint yet.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "finality",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "TransactionExecutionService",
          "longName": "TransactionExecutionService",
          "fullName": "sui.rpc.v2beta2.TransactionExecutionService",
          "description": "",
          "methods": [
            {
              "name": "ExecuteTransaction",
              "description": "",
              "requestType": "ExecuteTransactionRequest",
              "requestLongType": "ExecuteTransactionRequest",
              "requestFullType": "sui.rpc.v2beta2.ExecuteTransactionRequest",
              "requestStreaming": false,
              "responseType": "ExecuteTransactionResponse",
              "responseLongType": "ExecuteTransactionResponse",
              "responseFullType": "sui.rpc.v2beta2.ExecuteTransactionResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "sui/rpc/v2beta2/effects.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "IdOperation",
          "longName": "ChangedObject.IdOperation",
          "fullName": "sui.rpc.v2beta2.ChangedObject.IdOperation",
          "description": "",
          "values": [
            {
              "name": "ID_OPERATION_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "NONE",
              "number": "1",
              "description": ""
            },
            {
              "name": "CREATED",
              "number": "2",
              "description": ""
            },
            {
              "name": "DELETED",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "InputObjectState",
          "longName": "ChangedObject.InputObjectState",
          "fullName": "sui.rpc.v2beta2.ChangedObject.InputObjectState",
          "description": "",
          "values": [
            {
              "name": "INPUT_OBJECT_STATE_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "INPUT_OBJECT_STATE_DOES_NOT_EXIST",
              "number": "1",
              "description": ""
            },
            {
              "name": "INPUT_OBJECT_STATE_EXISTS",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "OutputObjectState",
          "longName": "ChangedObject.OutputObjectState",
          "fullName": "sui.rpc.v2beta2.ChangedObject.OutputObjectState",
          "description": "",
          "values": [
            {
              "name": "OUTPUT_OBJECT_STATE_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "OUTPUT_OBJECT_STATE_DOES_NOT_EXIST",
              "number": "1",
              "description": ""
            },
            {
              "name": "OUTPUT_OBJECT_STATE_OBJECT_WRITE",
              "number": "2",
              "description": ""
            },
            {
              "name": "OUTPUT_OBJECT_STATE_PACKAGE_WRITE",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "UnchangedConsensusObjectKind",
          "longName": "UnchangedConsensusObject.UnchangedConsensusObjectKind",
          "fullName": "sui.rpc.v2beta2.UnchangedConsensusObject.UnchangedConsensusObjectKind",
          "description": "",
          "values": [
            {
              "name": "UNCHANGED_CONSENSUS_OBJECT_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "READ_ONLY_ROOT",
              "number": "1",
              "description": "Read-only consensus object from the input."
            },
            {
              "name": "MUTATE_CONSENSUS_STREAM_ENDED",
              "number": "2",
              "description": "Objects with ended consensus streams that appear mutably/owned in the input."
            },
            {
              "name": "READ_CONSENSUS_STREAM_ENDED",
              "number": "3",
              "description": "Objects with ended consensus streams objects that appear as read-only in the input."
            },
            {
              "name": "CANCELED",
              "number": "4",
              "description": "Consensus objects that were congested and resulted in this transaction being\ncanceled."
            },
            {
              "name": "PER_EPOCH_CONFIG",
              "number": "5",
              "description": "Read of a per-epoch config object that should remain the same during an\nepoch. This optionally will indicate the sequence number of the config\nobject at the start of the epoch."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "ChangedObject",
          "longName": "ChangedObject",
          "fullName": "sui.rpc.v2beta2.ChangedObject",
          "description": "Input/output state of an object that was changed during execution.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "ID of the object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "input_state",
              "description": "",
              "label": "optional",
              "type": "InputObjectState",
              "longType": "ChangedObject.InputObjectState",
              "fullType": "sui.rpc.v2beta2.ChangedObject.InputObjectState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_input_state",
              "defaultValue": ""
            },
            {
              "name": "input_version",
              "description": "Version of the object before this transaction executed.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_input_version",
              "defaultValue": ""
            },
            {
              "name": "input_digest",
              "description": "Digest of the object before this transaction executed.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_input_digest",
              "defaultValue": ""
            },
            {
              "name": "input_owner",
              "description": "Owner of the object before this transaction executed.",
              "label": "optional",
              "type": "Owner",
              "longType": "Owner",
              "fullType": "sui.rpc.v2beta2.Owner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_input_owner",
              "defaultValue": ""
            },
            {
              "name": "output_state",
              "description": "",
              "label": "optional",
              "type": "OutputObjectState",
              "longType": "ChangedObject.OutputObjectState",
              "fullType": "sui.rpc.v2beta2.ChangedObject.OutputObjectState",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_output_state",
              "defaultValue": ""
            },
            {
              "name": "output_version",
              "description": "Version of the object after this transaction executed.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_output_version",
              "defaultValue": ""
            },
            {
              "name": "output_digest",
              "description": "Digest of the object after this transaction executed.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_output_digest",
              "defaultValue": ""
            },
            {
              "name": "output_owner",
              "description": "Owner of the object after this transaction executed.",
              "label": "optional",
              "type": "Owner",
              "longType": "Owner",
              "fullType": "sui.rpc.v2beta2.Owner",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_output_owner",
              "defaultValue": ""
            },
            {
              "name": "id_operation",
              "description": "What happened to an `ObjectId` during execution.",
              "label": "optional",
              "type": "IdOperation",
              "longType": "ChangedObject.IdOperation",
              "fullType": "sui.rpc.v2beta2.ChangedObject.IdOperation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id_operation",
              "defaultValue": ""
            },
            {
              "name": "object_type",
              "description": "Type information is not provided by the effects structure but is instead\nprovided by an indexing layer",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionEffects",
          "longName": "TransactionEffects",
          "fullName": "sui.rpc.v2beta2.TransactionEffects",
          "description": "The effects of executing a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bcs",
              "description": "This TransactionEffects serialized as BCS.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bcs",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this TransactionEffects.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of this TransactionEffects.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of the execution.",
              "label": "optional",
              "type": "ExecutionStatus",
              "longType": "ExecutionStatus",
              "fullType": "sui.rpc.v2beta2.ExecutionStatus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "The epoch when this transaction was executed.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "gas_used",
              "description": "The gas used by this transaction.",
              "label": "optional",
              "type": "GasCostSummary",
              "longType": "GasCostSummary",
              "fullType": "sui.rpc.v2beta2.GasCostSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_used",
              "defaultValue": ""
            },
            {
              "name": "transaction_digest",
              "description": "The transaction digest.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_transaction_digest",
              "defaultValue": ""
            },
            {
              "name": "gas_object",
              "description": "Information about the gas object. Also present in the `changed_objects` vector.\n\nSystem transaction that don't require gas will leave this as `None`.",
              "label": "optional",
              "type": "ChangedObject",
              "longType": "ChangedObject",
              "fullType": "sui.rpc.v2beta2.ChangedObject",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_object",
              "defaultValue": ""
            },
            {
              "name": "events_digest",
              "description": "The digest of the events emitted during execution,\ncan be `None` if the transaction does not emit any event.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_events_digest",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "The set of transaction digests this transaction depends on.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lamport_version",
              "description": "The version number of all the written objects (excluding packages) by this transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lamport_version",
              "defaultValue": ""
            },
            {
              "name": "changed_objects",
              "description": "Objects whose state are changed by this transaction.",
              "label": "repeated",
              "type": "ChangedObject",
              "longType": "ChangedObject",
              "fullType": "sui.rpc.v2beta2.ChangedObject",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unchanged_consensus_objects",
              "description": "Consensus objects that are not mutated in this transaction. Unlike owned objects,\nread-only consensus objects' version are not committed in the transaction,\nand in order for a node to catch up and execute it without consensus sequencing,\nthe version needs to be committed in the effects.",
              "label": "repeated",
              "type": "UnchangedConsensusObject",
              "longType": "UnchangedConsensusObject",
              "fullType": "sui.rpc.v2beta2.UnchangedConsensusObject",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auxiliary_data_digest",
              "description": "Auxiliary data that are not protocol-critical, generated as part of the effects but are stored separately.\nStoring it separately allows us to avoid bloating the effects with data that are not critical.\nIt also provides more flexibility on the format and type of the data.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_auxiliary_data_digest",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UnchangedConsensusObject",
          "longName": "UnchangedConsensusObject",
          "fullName": "sui.rpc.v2beta2.UnchangedConsensusObject",
          "description": "A consensus object that wasn't changed during execution.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "UnchangedConsensusObjectKind",
              "longType": "UnchangedConsensusObject.UnchangedConsensusObjectKind",
              "fullType": "sui.rpc.v2beta2.UnchangedConsensusObject.UnchangedConsensusObjectKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "object_id",
              "description": "ObjectId of the consensus object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of the consensus object.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "Digest of the consensus object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "object_type",
              "description": "Type information is not provided by the effects structure but is instead\nprovided by an indexing layer",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_type",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/input.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "InputKind",
          "longName": "Input.InputKind",
          "fullName": "sui.rpc.v2beta2.Input.InputKind",
          "description": "",
          "values": [
            {
              "name": "INPUT_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "PURE",
              "number": "1",
              "description": "A move value serialized as BCS."
            },
            {
              "name": "IMMUTABLE_OR_OWNED",
              "number": "2",
              "description": "A Move object that is either immutable or address owned."
            },
            {
              "name": "SHARED",
              "number": "3",
              "description": "A Move object whose owner is \"Shared\"."
            },
            {
              "name": "RECEIVING",
              "number": "4",
              "description": "A Move object that is attempted to be received in this transaction."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Input",
          "longName": "Input",
          "fullName": "sui.rpc.v2beta2.Input",
          "description": "An input to a user transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "InputKind",
              "longType": "Input.InputKind",
              "fullType": "sui.rpc.v2beta2.Input.InputKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "pure",
              "description": "A move value serialized as BCS.\n\nFor normal operations this is required to be a move primitive type and not contain structs\nor objects.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pure",
              "defaultValue": ""
            },
            {
              "name": "object_id",
              "description": "`ObjectId` of the object input.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Requested version of the input object when `kind` is `IMMUTABLE_OR_OWNED`\nor `RECEIVING` or if `kind` is `SHARED` this is the initial version of the\nobject when it was shared",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "mutable",
              "description": "Controls whether the caller asks for a mutable reference to the shared\nobject.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_mutable",
              "defaultValue": ""
            },
            {
              "name": "literal",
              "description": "A literal value\n\nINPUT ONLY",
              "label": "optional",
              "type": "Value",
              "longType": "google.protobuf.Value",
              "fullType": "google.protobuf.Value",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_literal",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/balance_change.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BalanceChange",
          "longName": "BalanceChange",
          "fullName": "sui.rpc.v2beta2.BalanceChange",
          "description": "The delta, or change, in balance for an address for a particular `Coin` type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "The account address that is affected by this balance change event.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            },
            {
              "name": "coin_type",
              "description": "The `Coin` type of this balance change event.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_type",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The amount or change in balance.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_amount",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/error_reason.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": false,
      "hasServices": false,
      "enums": [
        {
          "name": "ErrorReason",
          "longName": "ErrorReason",
          "fullName": "sui.rpc.v2beta2.ErrorReason",
          "description": "",
          "values": [
            {
              "name": "ERROR_REASON_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "FIELD_INVALID",
              "number": "1",
              "description": ""
            },
            {
              "name": "FIELD_MISSING",
              "number": "2",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/protocol_config.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ProtocolConfig",
          "longName": "ProtocolConfig",
          "fullName": "sui.rpc.v2beta2.ProtocolConfig",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "protocol_version",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_protocol_version",
              "defaultValue": ""
            },
            {
              "name": "feature_flags",
              "description": "",
              "label": "repeated",
              "type": "FeatureFlagsEntry",
              "longType": "ProtocolConfig.FeatureFlagsEntry",
              "fullType": "sui.rpc.v2beta2.ProtocolConfig.FeatureFlagsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attributes",
              "description": "",
              "label": "repeated",
              "type": "AttributesEntry",
              "longType": "ProtocolConfig.AttributesEntry",
              "fullType": "sui.rpc.v2beta2.ProtocolConfig.AttributesEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AttributesEntry",
          "longName": "ProtocolConfig.AttributesEntry",
          "fullName": "sui.rpc.v2beta2.ProtocolConfig.AttributesEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FeatureFlagsEntry",
          "longName": "ProtocolConfig.FeatureFlagsEntry",
          "fullName": "sui.rpc.v2beta2.ProtocolConfig.FeatureFlagsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/checkpoint_summary.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "CheckpointCommitmentKind",
          "longName": "CheckpointCommitment.CheckpointCommitmentKind",
          "fullName": "sui.rpc.v2beta2.CheckpointCommitment.CheckpointCommitmentKind",
          "description": "",
          "values": [
            {
              "name": "CHECKPOINT_COMMITMENT_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "ECMH_LIVE_OBJECT_SET",
              "number": "1",
              "description": "An elliptic curve multiset hash attesting to the set of objects that\ncomprise the live state of the Sui blockchain."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CheckpointCommitment",
          "longName": "CheckpointCommitment",
          "fullName": "sui.rpc.v2beta2.CheckpointCommitment",
          "description": "A commitment made by a checkpoint.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "CheckpointCommitmentKind",
              "longType": "CheckpointCommitment.CheckpointCommitmentKind",
              "fullType": "sui.rpc.v2beta2.CheckpointCommitment.CheckpointCommitmentKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CheckpointSummary",
          "longName": "CheckpointSummary",
          "fullName": "sui.rpc.v2beta2.CheckpointSummary",
          "description": "A header for a checkpoint on the Sui blockchain.\n\nOn the Sui network, checkpoints define the history of the blockchain. They are quite similar to\nthe concept of blocks used by other blockchains like Bitcoin or Ethereum. The Sui blockchain,\nhowever, forms checkpoints after transaction execution has already happened to provide a\ncertified history of the chain, instead of being formed before execution.\n\nCheckpoints commit to a variety of state, including but not limited to:\n- The hash of the previous checkpoint.\n- The set of transaction digests, their corresponding effects digests, as well as the set of\n  user signatures that authorized its execution.\n- The objects produced by a transaction.\n- The set of live objects that make up the current state of the chain.\n- On epoch transitions, the next validator committee.\n\n`CheckpointSummary`s themselves don't directly include all of the previous information but they\nare the top-level type by which all the information is committed to transitively via cryptographic\nhashes included in the summary. `CheckpointSummary`s are signed and certified by a quorum of\nthe validator committee in a given epoch to allow verification of the chain's state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bcs",
              "description": "This CheckpointSummary serialized as BCS.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bcs",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this CheckpointSummary.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Epoch that this checkpoint belongs to.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "sequence_number",
              "description": "The height of this checkpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sequence_number",
              "defaultValue": ""
            },
            {
              "name": "total_network_transactions",
              "description": "Total number of transactions committed since genesis, including those in this\ncheckpoint.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_total_network_transactions",
              "defaultValue": ""
            },
            {
              "name": "content_digest",
              "description": "The hash of the `CheckpointContents` for this checkpoint.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_content_digest",
              "defaultValue": ""
            },
            {
              "name": "previous_digest",
              "description": "The hash of the previous `CheckpointSummary`.\n\nThis will be `None` only for the first, or genesis, checkpoint.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_previous_digest",
              "defaultValue": ""
            },
            {
              "name": "epoch_rolling_gas_cost_summary",
              "description": "The running total gas costs of all transactions included in the current epoch so far\nuntil this checkpoint.",
              "label": "optional",
              "type": "GasCostSummary",
              "longType": "GasCostSummary",
              "fullType": "sui.rpc.v2beta2.GasCostSummary",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_rolling_gas_cost_summary",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "Timestamp of the checkpoint - number of milliseconds from the Unix epoch\nCheckpoint timestamps are monotonic, but not strongly monotonic - subsequent\ncheckpoints can have the same timestamp if they originate from the same underlining consensus commit.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_timestamp",
              "defaultValue": ""
            },
            {
              "name": "commitments",
              "description": "Commitments to checkpoint-specific state.",
              "label": "repeated",
              "type": "CheckpointCommitment",
              "longType": "CheckpointCommitment",
              "fullType": "sui.rpc.v2beta2.CheckpointCommitment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_of_epoch_data",
              "description": "Extra data only present in the final checkpoint of an epoch.",
              "label": "optional",
              "type": "EndOfEpochData",
              "longType": "EndOfEpochData",
              "fullType": "sui.rpc.v2beta2.EndOfEpochData",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_of_epoch_data",
              "defaultValue": ""
            },
            {
              "name": "version_specific_data",
              "description": "`CheckpointSummary` is not an evolvable structure - it must be readable by any version of\nthe code. Therefore, to allow extensions to be added to `CheckpointSummary`,\nopaque data can be added to checkpoints, which can be deserialized based on the current\nprotocol version.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version_specific_data",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EndOfEpochData",
          "longName": "EndOfEpochData",
          "fullName": "sui.rpc.v2beta2.EndOfEpochData",
          "description": "Data, which when included in a `CheckpointSummary`, signals the end of an `Epoch`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "next_epoch_committee",
              "description": "The set of validators that will be in the `ValidatorCommittee` for the next epoch.",
              "label": "repeated",
              "type": "ValidatorCommitteeMember",
              "longType": "ValidatorCommitteeMember",
              "fullType": "sui.rpc.v2beta2.ValidatorCommitteeMember",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_epoch_protocol_version",
              "description": "The protocol version that is in effect during the next epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_next_epoch_protocol_version",
              "defaultValue": ""
            },
            {
              "name": "epoch_commitments",
              "description": "Commitments to epoch specific state (live object set)",
              "label": "repeated",
              "type": "CheckpointCommitment",
              "longType": "CheckpointCommitment",
              "fullType": "sui.rpc.v2beta2.CheckpointCommitment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/transaction.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "ExecutionTimeObservationKind",
          "longName": "ExecutionTimeObservation.ExecutionTimeObservationKind",
          "fullName": "sui.rpc.v2beta2.ExecutionTimeObservation.ExecutionTimeObservationKind",
          "description": "",
          "values": [
            {
              "name": "EXECUTION_TIME_OBSERVATION_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "MOVE_ENTRY_POINT",
              "number": "1",
              "description": ""
            },
            {
              "name": "TRANSFER_OBJECTS",
              "number": "2",
              "description": ""
            },
            {
              "name": "SPLIT_COINS",
              "number": "3",
              "description": ""
            },
            {
              "name": "MERGE_COINS",
              "number": "4",
              "description": ""
            },
            {
              "name": "PUBLISH",
              "number": "5",
              "description": ""
            },
            {
              "name": "MAKE_MOVE_VECTOR",
              "number": "6",
              "description": ""
            },
            {
              "name": "UPGRADE",
              "number": "7",
              "description": ""
            }
          ]
        },
        {
          "name": "TransactionExpirationKind",
          "longName": "TransactionExpiration.TransactionExpirationKind",
          "fullName": "sui.rpc.v2beta2.TransactionExpiration.TransactionExpirationKind",
          "description": "",
          "values": [
            {
              "name": "TRANSACTION_EXPIRATION_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "NONE",
              "number": "1",
              "description": "The transaction has no expiration."
            },
            {
              "name": "EPOCH",
              "number": "2",
              "description": "Validators won't sign and execute transaction unless the expiration epoch\nis greater than or equal to the current epoch."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "ActiveJwk",
          "longName": "ActiveJwk",
          "fullName": "sui.rpc.v2beta2.ActiveJwk",
          "description": "A new JWK.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Identifier used to uniquely identify a JWK.",
              "label": "optional",
              "type": "JwkId",
              "longType": "JwkId",
              "fullType": "sui.rpc.v2beta2.JwkId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "jwk",
              "description": "The JWK.",
              "label": "optional",
              "type": "Jwk",
              "longType": "Jwk",
              "fullType": "sui.rpc.v2beta2.Jwk",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_jwk",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Most recent epoch in which the JWK was validated.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuthenticatorStateExpire",
          "longName": "AuthenticatorStateExpire",
          "fullName": "sui.rpc.v2beta2.AuthenticatorStateExpire",
          "description": "Expire old JWKs.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "min_epoch",
              "description": "Expire JWKs that have a lower epoch than this.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_min_epoch",
              "defaultValue": ""
            },
            {
              "name": "authenticator_object_initial_shared_version",
              "description": "The initial version of the authenticator object that it was shared at.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_authenticator_object_initial_shared_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuthenticatorStateUpdate",
          "longName": "AuthenticatorStateUpdate",
          "fullName": "sui.rpc.v2beta2.AuthenticatorStateUpdate",
          "description": "Update the set of valid JWKs.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Epoch of the authenticator state update transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "round",
              "description": "Consensus round of the authenticator state update.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_round",
              "defaultValue": ""
            },
            {
              "name": "new_active_jwks",
              "description": "Newly active JWKs.",
              "label": "repeated",
              "type": "ActiveJwk",
              "longType": "ActiveJwk",
              "fullType": "sui.rpc.v2beta2.ActiveJwk",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticator_object_initial_shared_version",
              "description": "The initial version of the authenticator object that it was shared at.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_authenticator_object_initial_shared_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CanceledTransaction",
          "longName": "CanceledTransaction",
          "fullName": "sui.rpc.v2beta2.CanceledTransaction",
          "description": "A transaction that was canceled.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "digest",
              "description": "Digest of the canceled transaction.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "version_assignments",
              "description": "List of object version assignments.",
              "label": "repeated",
              "type": "VersionAssignment",
              "longType": "VersionAssignment",
              "fullType": "sui.rpc.v2beta2.VersionAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ChangeEpoch",
          "longName": "ChangeEpoch",
          "fullName": "sui.rpc.v2beta2.ChangeEpoch",
          "description": "System transaction used to change the epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "The next (to become) epoch ID.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "protocol_version",
              "description": "The protocol version in effect in the new epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_protocol_version",
              "defaultValue": ""
            },
            {
              "name": "storage_charge",
              "description": "The total amount of gas charged for storage during the epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_charge",
              "defaultValue": ""
            },
            {
              "name": "computation_charge",
              "description": "The total amount of gas charged for computation during the epoch.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_computation_charge",
              "defaultValue": ""
            },
            {
              "name": "storage_rebate",
              "description": "The amount of storage rebate refunded to the txn senders.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_storage_rebate",
              "defaultValue": ""
            },
            {
              "name": "non_refundable_storage_fee",
              "description": "The non-refundable storage fee.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_non_refundable_storage_fee",
              "defaultValue": ""
            },
            {
              "name": "epoch_start_timestamp",
              "description": "Unix timestamp when epoch started.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch_start_timestamp",
              "defaultValue": ""
            },
            {
              "name": "system_packages",
              "description": "System packages (specifically framework and Move stdlib) that are written before the new\nepoch starts. This tracks framework upgrades on chain. When executing the `ChangeEpoch` txn,\nthe validator must write out the following modules.  Modules are provided with the version they\nwill be upgraded to, their modules in serialized form (which include their package ID), and\na list of their transitive dependencies.",
              "label": "repeated",
              "type": "SystemPackage",
              "longType": "SystemPackage",
              "fullType": "sui.rpc.v2beta2.SystemPackage",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Command",
          "longName": "Command",
          "fullName": "sui.rpc.v2beta2.Command",
          "description": "A single command in a programmable transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "move_call",
              "description": "A call to either an entry or a public Move function.",
              "label": "",
              "type": "MoveCall",
              "longType": "MoveCall",
              "fullType": "sui.rpc.v2beta2.MoveCall",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "transfer_objects",
              "description": "`(Vec\u003cforall T:key+store. T\u003e, address)`\nIt sends n-objects to the specified address. These objects must have store\n(public transfer) and either the previous owner must be an address or the object must\nbe newly created.",
              "label": "",
              "type": "TransferObjects",
              "longType": "TransferObjects",
              "fullType": "sui.rpc.v2beta2.TransferObjects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "split_coins",
              "description": "`(\u0026mut Coin\u003cT\u003e, Vec\u003cu64\u003e)` -\u003e `Vec\u003cCoin\u003cT\u003e\u003e`\nIt splits off some amounts into new coins with those amounts.",
              "label": "",
              "type": "SplitCoins",
              "longType": "SplitCoins",
              "fullType": "sui.rpc.v2beta2.SplitCoins",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "merge_coins",
              "description": "`(\u0026mut Coin\u003cT\u003e, Vec\u003cCoin\u003cT\u003e\u003e)`\nIt merges n-coins into the first coin.",
              "label": "",
              "type": "MergeCoins",
              "longType": "MergeCoins",
              "fullType": "sui.rpc.v2beta2.MergeCoins",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "publish",
              "description": "Publishes a Move package. It takes the package bytes and a list of the package's transitive\ndependencies to link against on chain.",
              "label": "",
              "type": "Publish",
              "longType": "Publish",
              "fullType": "sui.rpc.v2beta2.Publish",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "make_move_vector",
              "description": "`forall T: Vec\u003cT\u003e -\u003e vector\u003cT\u003e`\nGiven n-values of the same type, it constructs a vector. For non-objects or an empty vector,\nthe type tag must be specified.",
              "label": "",
              "type": "MakeMoveVector",
              "longType": "MakeMoveVector",
              "fullType": "sui.rpc.v2beta2.MakeMoveVector",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            },
            {
              "name": "upgrade",
              "description": "Upgrades a Move package.\nTakes (in order):\n1. A vector of serialized modules for the package.\n2. A vector of object ids for the transitive dependencies of the new package.\n3. The object ID of the package being upgraded.\n4. An argument holding the `UpgradeTicket` that must have been produced from an earlier command in the same\n   programmable transaction.",
              "label": "",
              "type": "Upgrade",
              "longType": "Upgrade",
              "fullType": "sui.rpc.v2beta2.Upgrade",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "command",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ConsensusCommitPrologue",
          "longName": "ConsensusCommitPrologue",
          "fullName": "sui.rpc.v2beta2.ConsensusCommitPrologue",
          "description": "Consensus commit prologue system transaction.\n\nThis message can represent V1, V2, and V3 prologue types.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Epoch of the commit prologue transaction.\n\nPresent in V1, V2, V3, V4.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "round",
              "description": "Consensus round of the commit.\n\nPresent in V1, V2, V3, V4.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_round",
              "defaultValue": ""
            },
            {
              "name": "commit_timestamp",
              "description": "Unix timestamp from consensus.\n\nPresent in V1, V2, V3, V4.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_commit_timestamp",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_digest",
              "description": "Digest of consensus output.\n\nPresent in V2, V3, V4.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_consensus_commit_digest",
              "defaultValue": ""
            },
            {
              "name": "sub_dag_index",
              "description": "The sub DAG index of the consensus commit. This field is populated if there\nare multiple consensus commits per round.\n\nPresent in V3, V4.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sub_dag_index",
              "defaultValue": ""
            },
            {
              "name": "consensus_determined_version_assignments",
              "description": "Stores consensus handler determined consensus object version assignments.\n\nPresent in V3, V4.",
              "label": "optional",
              "type": "ConsensusDeterminedVersionAssignments",
              "longType": "ConsensusDeterminedVersionAssignments",
              "fullType": "sui.rpc.v2beta2.ConsensusDeterminedVersionAssignments",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_consensus_determined_version_assignments",
              "defaultValue": ""
            },
            {
              "name": "additional_state_digest",
              "description": "Digest of any additional state computed by the consensus handler.\nUsed to detect forking bugs as early as possible.\n\nPresent in V4.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_additional_state_digest",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ConsensusDeterminedVersionAssignments",
          "longName": "ConsensusDeterminedVersionAssignments",
          "fullName": "sui.rpc.v2beta2.ConsensusDeterminedVersionAssignments",
          "description": "Version assignments performed by consensus.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Version of this message",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "canceled_transactions",
              "description": "Canceled transaction version assignment.",
              "label": "repeated",
              "type": "CanceledTransaction",
              "longType": "CanceledTransaction",
              "fullType": "sui.rpc.v2beta2.CanceledTransaction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EndOfEpochTransaction",
          "longName": "EndOfEpochTransaction",
          "fullName": "sui.rpc.v2beta2.EndOfEpochTransaction",
          "description": "Set of operations run at the end of the epoch to close out the current epoch\nand start the next one.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "transactions",
              "description": "",
              "label": "repeated",
              "type": "EndOfEpochTransactionKind",
              "longType": "EndOfEpochTransactionKind",
              "fullType": "sui.rpc.v2beta2.EndOfEpochTransactionKind",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EndOfEpochTransactionKind",
          "longName": "EndOfEpochTransactionKind",
          "fullName": "sui.rpc.v2beta2.EndOfEpochTransactionKind",
          "description": "Operation run at the end of an epoch.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "change_epoch",
              "description": "End the epoch and start the next one.",
              "label": "",
              "type": "ChangeEpoch",
              "longType": "ChangeEpoch",
              "fullType": "sui.rpc.v2beta2.ChangeEpoch",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "authenticator_state_expire",
              "description": "Expire JWKs used for zklogin.",
              "label": "",
              "type": "AuthenticatorStateExpire",
              "longType": "AuthenticatorStateExpire",
              "fullType": "sui.rpc.v2beta2.AuthenticatorStateExpire",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "execution_time_observations",
              "description": "Execution time observations from the committee to preserve cross epoch",
              "label": "",
              "type": "ExecutionTimeObservations",
              "longType": "ExecutionTimeObservations",
              "fullType": "sui.rpc.v2beta2.ExecutionTimeObservations",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "authenticator_state_create",
              "description": "Create and initialize the authenticator object used for zklogin.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "randomness_state_create",
              "description": "Create and initialize the randomness object.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "deny_list_state_create",
              "description": "Create and initialize the deny list object.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "bridge_state_create",
              "description": "Create and initialize the bridge object.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "bridge_committee_init",
              "description": "Initialize the bridge committee.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "accumulator_root_create",
              "description": "Create the accumulator root object.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "coin_registry_create",
              "description": "Create and initialize the Coin Registry object.",
              "label": "",
              "type": "Empty",
              "longType": "google.protobuf.Empty",
              "fullType": "google.protobuf.Empty",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecutionTimeObservation",
          "longName": "ExecutionTimeObservation",
          "fullName": "sui.rpc.v2beta2.ExecutionTimeObservation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "ExecutionTimeObservationKind",
              "longType": "ExecutionTimeObservation.ExecutionTimeObservationKind",
              "fullType": "sui.rpc.v2beta2.ExecutionTimeObservation.ExecutionTimeObservationKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "move_entry_point",
              "description": "",
              "label": "optional",
              "type": "MoveCall",
              "longType": "MoveCall",
              "fullType": "sui.rpc.v2beta2.MoveCall",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_move_entry_point",
              "defaultValue": ""
            },
            {
              "name": "validator_observations",
              "description": "",
              "label": "repeated",
              "type": "ValidatorExecutionTimeObservation",
              "longType": "ValidatorExecutionTimeObservation",
              "fullType": "sui.rpc.v2beta2.ValidatorExecutionTimeObservation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecutionTimeObservations",
          "longName": "ExecutionTimeObservations",
          "fullName": "sui.rpc.v2beta2.ExecutionTimeObservations",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Version of this ExecutionTimeObservations",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "observations",
              "description": "",
              "label": "repeated",
              "type": "ExecutionTimeObservation",
              "longType": "ExecutionTimeObservation",
              "fullType": "sui.rpc.v2beta2.ExecutionTimeObservation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GasPayment",
          "longName": "GasPayment",
          "fullName": "sui.rpc.v2beta2.GasPayment",
          "description": "Payment information for executing a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "Set of gas objects to use for payment.",
              "label": "repeated",
              "type": "ObjectReference",
              "longType": "ObjectReference",
              "fullType": "sui.rpc.v2beta2.ObjectReference",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "Owner of the gas objects, either the transaction sender or a sponsor.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_owner",
              "defaultValue": ""
            },
            {
              "name": "price",
              "description": "Gas unit price to use when charging for computation.\n\nMust be greater than or equal to the network's current RGP (reference gas price).",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_price",
              "defaultValue": ""
            },
            {
              "name": "budget",
              "description": "Total budget willing to spend for the execution of a transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_budget",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GenesisTransaction",
          "longName": "GenesisTransaction",
          "fullName": "sui.rpc.v2beta2.GenesisTransaction",
          "description": "The genesis transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "Set of genesis objects.",
              "label": "repeated",
              "type": "Object",
              "longType": "Object",
              "fullType": "sui.rpc.v2beta2.Object",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Jwk",
          "longName": "Jwk",
          "fullName": "sui.rpc.v2beta2.Jwk",
          "description": "A JSON web key.\n\nStruct that contains info for a JWK. A list of them for different kinds can\nbe retrieved from the JWK endpoint (for example, \u003chttps://www.googleapis.com/oauth2/v3/certs\u003e).\nThe JWK is used to verify the JWT token.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kty",
              "description": "Key type parameter, https://datatracker.ietf.org/doc/html/rfc7517#section-4.1.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kty",
              "defaultValue": ""
            },
            {
              "name": "e",
              "description": "RSA public exponent, https://datatracker.ietf.org/doc/html/rfc7517#section-9.3.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_e",
              "defaultValue": ""
            },
            {
              "name": "n",
              "description": "RSA modulus, https://datatracker.ietf.org/doc/html/rfc7517#section-9.3.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_n",
              "defaultValue": ""
            },
            {
              "name": "alg",
              "description": "Algorithm parameter, https://datatracker.ietf.org/doc/html/rfc7517#section-4.4.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_alg",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "JwkId",
          "longName": "JwkId",
          "fullName": "sui.rpc.v2beta2.JwkId",
          "description": "Key to uniquely identify a JWK.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "iss",
              "description": "The issuer or identity of the OIDC provider.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_iss",
              "defaultValue": ""
            },
            {
              "name": "kid",
              "description": "A key ID used to uniquely identify a key from an OIDC provider.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kid",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MakeMoveVector",
          "longName": "MakeMoveVector",
          "fullName": "sui.rpc.v2beta2.MakeMoveVector",
          "description": "Command to build a Move vector out of a set of individual elements.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "element_type",
              "description": "Type of the individual elements.\n\nThis is required to be set when the type can't be inferred, for example when the set of\nprovided arguments are all pure input values.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_element_type",
              "defaultValue": ""
            },
            {
              "name": "elements",
              "description": "The set individual elements to build the vector with.",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MergeCoins",
          "longName": "MergeCoins",
          "fullName": "sui.rpc.v2beta2.MergeCoins",
          "description": "Command to merge multiple coins of the same type into a single coin.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "coin",
              "description": "Coin to merge coins into.",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin",
              "defaultValue": ""
            },
            {
              "name": "coins_to_merge",
              "description": "Set of coins to merge into `coin`.\n\nAll listed coins must be of the same type and be the same type as `coin`",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveCall",
          "longName": "MoveCall",
          "fullName": "sui.rpc.v2beta2.MoveCall",
          "description": "Command to call a Move function.\n\nFunctions that can be called by a `MoveCall` command are those that have a function signature\nthat is either `entry` or `public` (which don't have a reference return type).",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package",
              "description": "The package containing the module and function.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package",
              "defaultValue": ""
            },
            {
              "name": "module",
              "description": "The specific module in the package containing the function.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module",
              "defaultValue": ""
            },
            {
              "name": "function",
              "description": "The function to be called.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_function",
              "defaultValue": ""
            },
            {
              "name": "type_arguments",
              "description": "The type arguments to the function.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "arguments",
              "description": "The arguments to the function.",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ProgrammableTransaction",
          "longName": "ProgrammableTransaction",
          "fullName": "sui.rpc.v2beta2.ProgrammableTransaction",
          "description": "A user transaction.\n\nContains a series of native commands and Move calls where the results of one command can be\nused in future commands.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "inputs",
              "description": "Input objects or primitive values.",
              "label": "repeated",
              "type": "Input",
              "longType": "Input",
              "fullType": "sui.rpc.v2beta2.Input",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "commands",
              "description": "The commands to be executed sequentially. A failure in any command\nresults in the failure of the entire transaction.",
              "label": "repeated",
              "type": "Command",
              "longType": "Command",
              "fullType": "sui.rpc.v2beta2.Command",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Publish",
          "longName": "Publish",
          "fullName": "sui.rpc.v2beta2.Publish",
          "description": "Command to publish a new Move package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "modules",
              "description": "The serialized Move modules.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "Set of packages that the to-be published package depends on.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RandomnessStateUpdate",
          "longName": "RandomnessStateUpdate",
          "fullName": "sui.rpc.v2beta2.RandomnessStateUpdate",
          "description": "Randomness update.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "epoch",
              "description": "Epoch of the randomness state update transaction.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            },
            {
              "name": "randomness_round",
              "description": "Randomness round of the update.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_randomness_round",
              "defaultValue": ""
            },
            {
              "name": "random_bytes",
              "description": "Updated random bytes.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_random_bytes",
              "defaultValue": ""
            },
            {
              "name": "randomness_object_initial_shared_version",
              "description": "The initial version of the randomness object that it was shared at.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_randomness_object_initial_shared_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SplitCoins",
          "longName": "SplitCoins",
          "fullName": "sui.rpc.v2beta2.SplitCoins",
          "description": "Command to split a single coin object into multiple coins.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "coin",
              "description": "The coin to split.",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin",
              "defaultValue": ""
            },
            {
              "name": "amounts",
              "description": "The amounts to split off.",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SystemPackage",
          "longName": "SystemPackage",
          "fullName": "sui.rpc.v2beta2.SystemPackage",
          "description": "System package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "version",
              "description": "Version of the package.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "modules",
              "description": "Move modules.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "Package dependencies.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Transaction",
          "longName": "Transaction",
          "fullName": "sui.rpc.v2beta2.Transaction",
          "description": "A transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bcs",
              "description": "This Transaction serialized as BCS.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bcs",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this Transaction.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Version of this Transaction.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "TransactionKind",
              "longType": "TransactionKind",
              "fullType": "sui.rpc.v2beta2.TransactionKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "sender",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sender",
              "defaultValue": ""
            },
            {
              "name": "gas_payment",
              "description": "",
              "label": "optional",
              "type": "GasPayment",
              "longType": "GasPayment",
              "fullType": "sui.rpc.v2beta2.GasPayment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_gas_payment",
              "defaultValue": ""
            },
            {
              "name": "expiration",
              "description": "",
              "label": "optional",
              "type": "TransactionExpiration",
              "longType": "TransactionExpiration",
              "fullType": "sui.rpc.v2beta2.TransactionExpiration",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_expiration",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionExpiration",
          "longName": "TransactionExpiration",
          "fullName": "sui.rpc.v2beta2.TransactionExpiration",
          "description": "A TTL for a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "TransactionExpirationKind",
              "longType": "TransactionExpiration.TransactionExpirationKind",
              "fullType": "sui.rpc.v2beta2.TransactionExpiration.TransactionExpirationKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_epoch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionKind",
          "longName": "TransactionKind",
          "fullName": "sui.rpc.v2beta2.TransactionKind",
          "description": "Transaction type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "programmable_transaction",
              "description": "A user transaction comprised of a list of native commands and Move calls.",
              "label": "",
              "type": "ProgrammableTransaction",
              "longType": "ProgrammableTransaction",
              "fullType": "sui.rpc.v2beta2.ProgrammableTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "programmable_system_transaction",
              "description": "A system transaction comprised of a list of native commands and Move calls.",
              "label": "",
              "type": "ProgrammableTransaction",
              "longType": "ProgrammableTransaction",
              "fullType": "sui.rpc.v2beta2.ProgrammableTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "change_epoch",
              "description": "System transaction used to end an epoch.\n\nThe `ChangeEpoch` variant is now deprecated (but the `ChangeEpoch` struct is still used by\n`EndOfEpochTransaction`).",
              "label": "",
              "type": "ChangeEpoch",
              "longType": "ChangeEpoch",
              "fullType": "sui.rpc.v2beta2.ChangeEpoch",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "genesis",
              "description": "Transaction used to initialize the chain state.\n\nOnly valid if in the genesis checkpoint (0) and if this is the very first transaction ever\nexecuted on the chain.",
              "label": "",
              "type": "GenesisTransaction",
              "longType": "GenesisTransaction",
              "fullType": "sui.rpc.v2beta2.GenesisTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_prologue_v1",
              "description": "V1 consensus commit update.",
              "label": "",
              "type": "ConsensusCommitPrologue",
              "longType": "ConsensusCommitPrologue",
              "fullType": "sui.rpc.v2beta2.ConsensusCommitPrologue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "authenticator_state_update",
              "description": "Update set of valid JWKs used for zklogin.",
              "label": "",
              "type": "AuthenticatorStateUpdate",
              "longType": "AuthenticatorStateUpdate",
              "fullType": "sui.rpc.v2beta2.AuthenticatorStateUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "end_of_epoch",
              "description": "Set of operations to run at the end of the epoch to close out the current epoch and start\nthe next one.",
              "label": "",
              "type": "EndOfEpochTransaction",
              "longType": "EndOfEpochTransaction",
              "fullType": "sui.rpc.v2beta2.EndOfEpochTransaction",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "randomness_state_update",
              "description": "Randomness update.",
              "label": "",
              "type": "RandomnessStateUpdate",
              "longType": "RandomnessStateUpdate",
              "fullType": "sui.rpc.v2beta2.RandomnessStateUpdate",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_prologue_v2",
              "description": "V2 consensus commit update.",
              "label": "",
              "type": "ConsensusCommitPrologue",
              "longType": "ConsensusCommitPrologue",
              "fullType": "sui.rpc.v2beta2.ConsensusCommitPrologue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_prologue_v3",
              "description": "V3 consensus commit update.",
              "label": "",
              "type": "ConsensusCommitPrologue",
              "longType": "ConsensusCommitPrologue",
              "fullType": "sui.rpc.v2beta2.ConsensusCommitPrologue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            },
            {
              "name": "consensus_commit_prologue_v4",
              "description": "V4 consensus commit update.",
              "label": "",
              "type": "ConsensusCommitPrologue",
              "longType": "ConsensusCommitPrologue",
              "fullType": "sui.rpc.v2beta2.ConsensusCommitPrologue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "kind",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransferObjects",
          "longName": "TransferObjects",
          "fullName": "sui.rpc.v2beta2.TransferObjects",
          "description": "Command to transfer ownership of a set of objects to an address.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "Set of objects to transfer.",
              "label": "repeated",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "The address to transfer ownership to.",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Upgrade",
          "longName": "Upgrade",
          "fullName": "sui.rpc.v2beta2.Upgrade",
          "description": "Command to upgrade an already published package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "modules",
              "description": "The serialized Move modules.",
              "label": "repeated",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dependencies",
              "description": "Set of packages that the to-be published package depends on.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "package",
              "description": "Package ID of the package to upgrade.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package",
              "defaultValue": ""
            },
            {
              "name": "ticket",
              "description": "Ticket authorizing the upgrade.",
              "label": "optional",
              "type": "Argument",
              "longType": "Argument",
              "fullType": "sui.rpc.v2beta2.Argument",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_ticket",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ValidatorExecutionTimeObservation",
          "longName": "ValidatorExecutionTimeObservation",
          "fullName": "sui.rpc.v2beta2.ValidatorExecutionTimeObservation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "validator",
              "description": "Bls12381 public key of the validator",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_validator",
              "defaultValue": ""
            },
            {
              "name": "duration",
              "description": "Duration of an execution observation",
              "label": "optional",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_duration",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VersionAssignment",
          "longName": "VersionAssignment",
          "fullName": "sui.rpc.v2beta2.VersionAssignment",
          "description": "Object version assignment from consensus.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "object_id",
              "description": "`ObjectId` of the object.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_object_id",
              "defaultValue": ""
            },
            {
              "name": "start_version",
              "description": "start version of the consensus stream for this object",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_start_version",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Assigned version.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_version",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/execution_status.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "CommandArgumentErrorKind",
          "longName": "CommandArgumentError.CommandArgumentErrorKind",
          "fullName": "sui.rpc.v2beta2.CommandArgumentError.CommandArgumentErrorKind",
          "description": "",
          "values": [
            {
              "name": "COMMAND_ARGUMENT_ERROR_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_MISMATCH",
              "number": "1",
              "description": "The type of the value does not match the expected type."
            },
            {
              "name": "INVALID_BCS_BYTES",
              "number": "2",
              "description": "The argument cannot be deserialized into a value of the specified type."
            },
            {
              "name": "INVALID_USAGE_OF_PURE_ARGUMENT",
              "number": "3",
              "description": "The argument cannot be instantiated from raw bytes."
            },
            {
              "name": "INVALID_ARGUMENT_TO_PRIVATE_ENTRY_FUNCTION",
              "number": "4",
              "description": "Invalid argument to private entry function.\nPrivate entry functions cannot take arguments from other Move functions."
            },
            {
              "name": "INDEX_OUT_OF_BOUNDS",
              "number": "5",
              "description": "Out of bounds access to input or results.\n\n`index` field will be set indicating the invalid index value."
            },
            {
              "name": "SECONDARY_INDEX_OUT_OF_BOUNDS",
              "number": "6",
              "description": "Out of bounds access to subresult.\n\n`index` and `subresult` fields will be set indicating the invalid index value."
            },
            {
              "name": "INVALID_RESULT_ARITY",
              "number": "7",
              "description": "Invalid usage of result.\nExpected a single result but found either no return value or multiple.\n`index` field will be set indicating the invalid index value."
            },
            {
              "name": "INVALID_GAS_COIN_USAGE",
              "number": "8",
              "description": "Invalid usage of gas coin.\nThe gas coin can only be used by-value with a `TransferObject` command."
            },
            {
              "name": "INVALID_VALUE_USAGE",
              "number": "9",
              "description": "Invalid usage of Move value.\n   - Mutably borrowed values require unique usage.\n   - Immutably borrowed values cannot be taken or borrowed mutably.\n   - Taken values cannot be used again."
            },
            {
              "name": "INVALID_OBJECT_BY_VALUE",
              "number": "10",
              "description": "Immutable objects cannot be passed by-value."
            },
            {
              "name": "INVALID_OBJECT_BY_MUT_REF",
              "number": "11",
              "description": "Immutable objects cannot be passed by mutable reference, `\u0026mut`."
            },
            {
              "name": "CONSENSUS_OBJECT_OPERATION_NOT_ALLOWED",
              "number": "12",
              "description": "Consensus object operations such as wrapping, freezing, or converting to owned are not\nallowed."
            },
            {
              "name": "INVALID_ARGUMENT_ARITY",
              "number": "13",
              "description": "Invalid argument arity. Expected a single argument but found a result that expanded to\nmultiple arguments."
            }
          ]
        },
        {
          "name": "ExecutionErrorKind",
          "longName": "ExecutionError.ExecutionErrorKind",
          "fullName": "sui.rpc.v2beta2.ExecutionError.ExecutionErrorKind",
          "description": "",
          "values": [
            {
              "name": "EXECUTION_ERROR_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "INSUFFICIENT_GAS",
              "number": "1",
              "description": "Insufficient gas."
            },
            {
              "name": "INVALID_GAS_OBJECT",
              "number": "2",
              "description": "Invalid `Gas` object."
            },
            {
              "name": "INVARIANT_VIOLATION",
              "number": "3",
              "description": "Invariant violation."
            },
            {
              "name": "FEATURE_NOT_YET_SUPPORTED",
              "number": "4",
              "description": "Attempted to use feature that is not supported yet."
            },
            {
              "name": "OBJECT_TOO_BIG",
              "number": "5",
              "description": "Move object is larger than the maximum allowed size."
            },
            {
              "name": "PACKAGE_TOO_BIG",
              "number": "6",
              "description": "Package is larger than the maximum allowed size."
            },
            {
              "name": "CIRCULAR_OBJECT_OWNERSHIP",
              "number": "7",
              "description": "Circular object ownership."
            },
            {
              "name": "INSUFFICIENT_COIN_BALANCE",
              "number": "8",
              "description": "Insufficient coin balance for requested operation."
            },
            {
              "name": "COIN_BALANCE_OVERFLOW",
              "number": "9",
              "description": "Coin balance overflowed an u64."
            },
            {
              "name": "PUBLISH_ERROR_NON_ZERO_ADDRESS",
              "number": "10",
              "description": "Publish error, non-zero address.\nThe modules in the package must have their self-addresses set to zero."
            },
            {
              "name": "SUI_MOVE_VERIFICATION_ERROR",
              "number": "11",
              "description": "Sui Move bytecode verification error."
            },
            {
              "name": "MOVE_PRIMITIVE_RUNTIME_ERROR",
              "number": "12",
              "description": "Error from a non-abort instruction.\nPossible causes:\n    Arithmetic error, stack overflow, max value depth, or similar."
            },
            {
              "name": "MOVE_ABORT",
              "number": "13",
              "description": "Move runtime abort."
            },
            {
              "name": "VM_VERIFICATION_OR_DESERIALIZATION_ERROR",
              "number": "14",
              "description": "Bytecode verification error."
            },
            {
              "name": "VM_INVARIANT_VIOLATION",
              "number": "15",
              "description": "MoveVm invariant violation."
            },
            {
              "name": "FUNCTION_NOT_FOUND",
              "number": "16",
              "description": "Function not found."
            },
            {
              "name": "ARITY_MISMATCH",
              "number": "17",
              "description": "Parity mismatch for Move function.\nThe number of arguments does not match the number of parameters."
            },
            {
              "name": "TYPE_ARITY_MISMATCH",
              "number": "18",
              "description": "Type parity mismatch for Move function.\nMismatch between the number of actual versus expected type arguments."
            },
            {
              "name": "NON_ENTRY_FUNCTION_INVOKED",
              "number": "19",
              "description": "Non-entry function invoked. Move Call must start with an entry function."
            },
            {
              "name": "COMMAND_ARGUMENT_ERROR",
              "number": "20",
              "description": "Invalid command argument."
            },
            {
              "name": "TYPE_ARGUMENT_ERROR",
              "number": "21",
              "description": "Type argument error."
            },
            {
              "name": "UNUSED_VALUE_WITHOUT_DROP",
              "number": "22",
              "description": "Unused result without the drop ability."
            },
            {
              "name": "INVALID_PUBLIC_FUNCTION_RETURN_TYPE",
              "number": "23",
              "description": "Invalid public Move function signature.\nUnsupported return type for return value."
            },
            {
              "name": "INVALID_TRANSFER_OBJECT",
              "number": "24",
              "description": "Invalid transfer object, object does not have public transfer."
            },
            {
              "name": "EFFECTS_TOO_LARGE",
              "number": "25",
              "description": "Effects from the transaction are too large."
            },
            {
              "name": "PUBLISH_UPGRADE_MISSING_DEPENDENCY",
              "number": "26",
              "description": "Publish or Upgrade is missing dependency."
            },
            {
              "name": "PUBLISH_UPGRADE_DEPENDENCY_DOWNGRADE",
              "number": "27",
              "description": "Publish or upgrade dependency downgrade.\n\nIndirect (transitive) dependency of published or upgraded package has been assigned an\non-chain version that is less than the version required by one of the package's\ntransitive dependencies."
            },
            {
              "name": "PACKAGE_UPGRADE_ERROR",
              "number": "28",
              "description": "Invalid package upgrade."
            },
            {
              "name": "WRITTEN_OBJECTS_TOO_LARGE",
              "number": "29",
              "description": "Indicates the transaction tried to write objects too large to storage."
            },
            {
              "name": "CERTIFICATE_DENIED",
              "number": "30",
              "description": "Certificate is on the deny list."
            },
            {
              "name": "SUI_MOVE_VERIFICATION_TIMEDOUT",
              "number": "31",
              "description": "Sui Move bytecode verification timed out."
            },
            {
              "name": "CONSENSUS_OBJECT_OPERATION_NOT_ALLOWED",
              "number": "32",
              "description": "The requested consensus object operation is not allowed."
            },
            {
              "name": "INPUT_OBJECT_DELETED",
              "number": "33",
              "description": "Requested consensus object has been deleted."
            },
            {
              "name": "EXECUTION_CANCELED_DUE_TO_CONSENSUS_OBJECT_CONGESTION",
              "number": "34",
              "description": "Certificate is canceled due to congestion on consensus objects."
            },
            {
              "name": "ADDRESS_DENIED_FOR_COIN",
              "number": "35",
              "description": "Address is denied for this coin type."
            },
            {
              "name": "COIN_TYPE_GLOBAL_PAUSE",
              "number": "36",
              "description": "Coin type is globally paused for use."
            },
            {
              "name": "EXECUTION_CANCELED_DUE_TO_RANDOMNESS_UNAVAILABLE",
              "number": "37",
              "description": "Certificate is canceled because randomness could not be generated this epoch."
            },
            {
              "name": "MOVE_VECTOR_ELEM_TOO_BIG",
              "number": "38",
              "description": ""
            },
            {
              "name": "MOVE_RAW_VALUE_TOO_BIG",
              "number": "39",
              "description": ""
            },
            {
              "name": "INVALID_LINKAGE",
              "number": "40",
              "description": ""
            }
          ]
        },
        {
          "name": "PackageUpgradeErrorKind",
          "longName": "PackageUpgradeError.PackageUpgradeErrorKind",
          "fullName": "sui.rpc.v2beta2.PackageUpgradeError.PackageUpgradeErrorKind",
          "description": "",
          "values": [
            {
              "name": "PACKAGE_UPGRADE_ERROR_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "UNABLE_TO_FETCH_PACKAGE",
              "number": "1",
              "description": "Unable to fetch package."
            },
            {
              "name": "NOT_A_PACKAGE",
              "number": "2",
              "description": "Object is not a package."
            },
            {
              "name": "INCOMPATIBLE_UPGRADE",
              "number": "3",
              "description": "Package upgrade is incompatible with previous version."
            },
            {
              "name": "DIGEST_DOES_NOT_MATCH",
              "number": "4",
              "description": "Digest in upgrade ticket and computed digest differ."
            },
            {
              "name": "UNKNOWN_UPGRADE_POLICY",
              "number": "5",
              "description": "Upgrade policy is not valid."
            },
            {
              "name": "PACKAGE_ID_DOES_NOT_MATCH",
              "number": "6",
              "description": "Package ID does not match `PackageId` in upgrade ticket."
            }
          ]
        },
        {
          "name": "TypeArgumentErrorKind",
          "longName": "TypeArgumentError.TypeArgumentErrorKind",
          "fullName": "sui.rpc.v2beta2.TypeArgumentError.TypeArgumentErrorKind",
          "description": "",
          "values": [
            {
              "name": "TYPE_ARGUMENT_ERROR_KIND_UNKNOWN",
              "number": "0",
              "description": ""
            },
            {
              "name": "TYPE_NOT_FOUND",
              "number": "1",
              "description": "A type was not found in the module specified."
            },
            {
              "name": "CONSTRAINT_NOT_SATISFIED",
              "number": "2",
              "description": "A type provided did not match the specified constraint."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CleverError",
          "longName": "CleverError",
          "fullName": "sui.rpc.v2beta2.CleverError",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "error_code",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error_code",
              "defaultValue": ""
            },
            {
              "name": "line_number",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_line_number",
              "defaultValue": ""
            },
            {
              "name": "constant_name",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_constant_name",
              "defaultValue": ""
            },
            {
              "name": "constant_type",
              "description": "",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_constant_type",
              "defaultValue": ""
            },
            {
              "name": "rendered",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "raw",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CoinDenyListError",
          "longName": "CoinDenyListError",
          "fullName": "sui.rpc.v2beta2.CoinDenyListError",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "Denied address.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_address",
              "defaultValue": ""
            },
            {
              "name": "coin_type",
              "description": "Coin type.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_coin_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CommandArgumentError",
          "longName": "CommandArgumentError",
          "fullName": "sui.rpc.v2beta2.CommandArgumentError",
          "description": "An error with an argument to a command.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "argument",
              "description": "Position of the problematic argument.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_argument",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "CommandArgumentErrorKind",
              "longType": "CommandArgumentError.CommandArgumentErrorKind",
              "fullType": "sui.rpc.v2beta2.CommandArgumentError.CommandArgumentErrorKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "index_error",
              "description": "",
              "label": "optional",
              "type": "IndexError",
              "longType": "IndexError",
              "fullType": "sui.rpc.v2beta2.IndexError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_index_error",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CongestedObjects",
          "longName": "CongestedObjects",
          "fullName": "sui.rpc.v2beta2.CongestedObjects",
          "description": "Set of objects that were congested, leading to the transaction's cancellation.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "objects",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecutionError",
          "longName": "ExecutionError",
          "fullName": "sui.rpc.v2beta2.ExecutionError",
          "description": "An error that can occur during the execution of a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "description",
              "description": "A human readable description of the error",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_description",
              "defaultValue": ""
            },
            {
              "name": "command",
              "description": "The command, if any, during which the error occurred.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_command",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "ExecutionErrorKind",
              "longType": "ExecutionError.ExecutionErrorKind",
              "fullType": "sui.rpc.v2beta2.ExecutionError.ExecutionErrorKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "abort",
              "description": "",
              "label": "",
              "type": "MoveAbort",
              "longType": "MoveAbort",
              "fullType": "sui.rpc.v2beta2.MoveAbort",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            },
            {
              "name": "size_error",
              "description": "",
              "label": "",
              "type": "SizeError",
              "longType": "SizeError",
              "fullType": "sui.rpc.v2beta2.SizeError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            },
            {
              "name": "command_argument_error",
              "description": "",
              "label": "",
              "type": "CommandArgumentError",
              "longType": "CommandArgumentError",
              "fullType": "sui.rpc.v2beta2.CommandArgumentError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            },
            {
              "name": "type_argument_error",
              "description": "",
              "label": "",
              "type": "TypeArgumentError",
              "longType": "TypeArgumentError",
              "fullType": "sui.rpc.v2beta2.TypeArgumentError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            },
            {
              "name": "package_upgrade_error",
              "description": "",
              "label": "",
              "type": "PackageUpgradeError",
              "longType": "PackageUpgradeError",
              "fullType": "sui.rpc.v2beta2.PackageUpgradeError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            },
            {
              "name": "index_error",
              "description": "",
              "label": "",
              "type": "IndexError",
              "longType": "IndexError",
              "fullType": "sui.rpc.v2beta2.IndexError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            },
            {
              "name": "object_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            },
            {
              "name": "coin_deny_list_error",
              "description": "",
              "label": "",
              "type": "CoinDenyListError",
              "longType": "CoinDenyListError",
              "fullType": "sui.rpc.v2beta2.CoinDenyListError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            },
            {
              "name": "congested_objects",
              "description": "Set of objects that were congested, leading to the transaction's cancellation.",
              "label": "",
              "type": "CongestedObjects",
              "longType": "CongestedObjects",
              "fullType": "sui.rpc.v2beta2.CongestedObjects",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "error_details",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExecutionStatus",
          "longName": "ExecutionStatus",
          "fullName": "sui.rpc.v2beta2.ExecutionStatus",
          "description": "The status of an executed transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "Indicates if the transaction was successful or not.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_success",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "The error if `success` is false.",
              "label": "optional",
              "type": "ExecutionError",
              "longType": "ExecutionError",
              "fullType": "sui.rpc.v2beta2.ExecutionError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IndexError",
          "longName": "IndexError",
          "fullName": "sui.rpc.v2beta2.IndexError",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "index",
              "description": "Index of an input or result.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_index",
              "defaultValue": ""
            },
            {
              "name": "subresult",
              "description": "Index of a subresult.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_subresult",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveAbort",
          "longName": "MoveAbort",
          "fullName": "sui.rpc.v2beta2.MoveAbort",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "abort_code",
              "description": "",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_abort_code",
              "defaultValue": ""
            },
            {
              "name": "location",
              "description": "Location in Move where the error occurred.",
              "label": "optional",
              "type": "MoveLocation",
              "longType": "MoveLocation",
              "fullType": "sui.rpc.v2beta2.MoveLocation",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_location",
              "defaultValue": ""
            },
            {
              "name": "clever_error",
              "description": "Extra error information if abort code is a \"Clever Error\"",
              "label": "optional",
              "type": "CleverError",
              "longType": "CleverError",
              "fullType": "sui.rpc.v2beta2.CleverError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_clever_error",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MoveLocation",
          "longName": "MoveLocation",
          "fullName": "sui.rpc.v2beta2.MoveLocation",
          "description": "Location in Move bytecode where an error occurred.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package",
              "description": "The package ID.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package",
              "defaultValue": ""
            },
            {
              "name": "module",
              "description": "The module name.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module",
              "defaultValue": ""
            },
            {
              "name": "function",
              "description": "The function index.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_function",
              "defaultValue": ""
            },
            {
              "name": "instruction",
              "description": "Offset of the instruction where the error occurred.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_instruction",
              "defaultValue": ""
            },
            {
              "name": "function_name",
              "description": "The name of the function, if available.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_function_name",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PackageUpgradeError",
          "longName": "PackageUpgradeError",
          "fullName": "sui.rpc.v2beta2.PackageUpgradeError",
          "description": "An error with upgrading a package.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "PackageUpgradeErrorKind",
              "longType": "PackageUpgradeError.PackageUpgradeErrorKind",
              "fullType": "sui.rpc.v2beta2.PackageUpgradeError.PackageUpgradeErrorKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            },
            {
              "name": "package_id",
              "description": "The Package Id.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "A digest.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "policy",
              "description": "The policy.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_policy",
              "defaultValue": ""
            },
            {
              "name": "ticket_id",
              "description": "The ticket Id.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_ticket_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SizeError",
          "longName": "SizeError",
          "fullName": "sui.rpc.v2beta2.SizeError",
          "description": "A size error.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "size",
              "description": "The offending size.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_size",
              "defaultValue": ""
            },
            {
              "name": "max_size",
              "description": "The maximum allowable size.",
              "label": "optional",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_max_size",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TypeArgumentError",
          "longName": "TypeArgumentError",
          "fullName": "sui.rpc.v2beta2.TypeArgumentError",
          "description": "Type argument error.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "type_argument",
              "description": "Index of the problematic type argument.",
              "label": "optional",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_type_argument",
              "defaultValue": ""
            },
            {
              "name": "kind",
              "description": "",
              "label": "optional",
              "type": "TypeArgumentErrorKind",
              "longType": "TypeArgumentError.TypeArgumentErrorKind",
              "fullType": "sui.rpc.v2beta2.TypeArgumentError.TypeArgumentErrorKind",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_kind",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "sui/rpc/v2beta2/event.proto",
      "description": "",
      "package": "sui.rpc.v2beta2",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Event",
          "longName": "Event",
          "fullName": "sui.rpc.v2beta2.Event",
          "description": "An event.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "package_id",
              "description": "Package ID of the top-level function invoked by a `MoveCall` command that triggered this\nevent to be emitted.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_package_id",
              "defaultValue": ""
            },
            {
              "name": "module",
              "description": "Module name of the top-level function invoked by a `MoveCall` command that triggered this\nevent to be emitted.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_module",
              "defaultValue": ""
            },
            {
              "name": "sender",
              "description": "Address of the account that sent the transaction where this event was emitted.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_sender",
              "defaultValue": ""
            },
            {
              "name": "event_type",
              "description": "The type of the event emitted.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_event_type",
              "defaultValue": ""
            },
            {
              "name": "contents",
              "description": "BCS serialized bytes of the event.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_contents",
              "defaultValue": ""
            },
            {
              "name": "json",
              "description": "JSON rendering of the event.",
              "label": "optional",
              "type": "Value",
              "longType": "google.protobuf.Value",
              "fullType": "google.protobuf.Value",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_json",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TransactionEvents",
          "longName": "TransactionEvents",
          "fullName": "sui.rpc.v2beta2.TransactionEvents",
          "description": "Events emitted during the successful execution of a transaction.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bcs",
              "description": "This TransactionEvents serialized as BCS.",
              "label": "optional",
              "type": "Bcs",
              "longType": "Bcs",
              "fullType": "sui.rpc.v2beta2.Bcs",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bcs",
              "defaultValue": ""
            },
            {
              "name": "digest",
              "description": "The digest of this TransactionEvents.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_digest",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "Set of events emitted by a transaction.",
              "label": "repeated",
              "type": "Event",
              "longType": "Event",
              "fullType": "sui.rpc.v2beta2.Event",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}