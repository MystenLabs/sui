//# run
module 0x42.m {
// tests bad casts/integer conversions
entry foo() {
label b0:
    _ = to_u8(true);
    return;
}
}

//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u64(true);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u128(true);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u16(true);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u32(true);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u256(true);
    return;
}

}

//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u8(0x0);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u64(0x0);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u128(0x0);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u16(0x0);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u32(0x0);
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = to_u256(0x0);
    return;
}

}

//# publish
module 0x42.M {
    struct S { x: bool }
    f() {
    label b0:
        _ = to_u8(S { x: true });
        return;
    }
}

//# publish
module 0x42.M {
    struct S { x: bool }
    g() {
    label b0:
        _ = to_u64(S { x: true });
        return;
    }
}

//# publish
module 0x42.M {
    struct S { x: bool }
    h() {
    label b0:
        _ = to_u128(S { x: true });
        return;
    }
}

//# publish
module 0x42.M {
    struct S { x: bool }
    f() {
    label b0:
        _ = to_u16(S { x: true });
        return;
    }
}

//# publish
module 0x42.M {
    struct S { x: bool }
    g() {
    label b0:
        _ = to_u32(S { x: true });
        return;
    }
}

//# publish
module 0x42.M {
    struct S { x: bool }
    h() {
    label b0:
        _ = to_u256(S { x: true });
        return;
    }
}
