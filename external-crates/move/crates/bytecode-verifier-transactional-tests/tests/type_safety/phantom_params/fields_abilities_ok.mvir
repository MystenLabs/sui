//# publish

// This module checks that phantom arguments are not considered by checking against
// the abilities required for the fields of a struct/enum.

module 0x1.M {
    struct NoAbilities { a: bool }

    struct HasDrop<phantom T1, T2> has drop { a: bool }
    struct HasCopy<phantom T1, T2> has copy { a : bool }
    struct HasStore<phantom T1, T2> has store { a : bool }
    struct HasKey<phantom T1, T2> has key { a : bool }

    struct S1 has drop { a: Self.HasDrop<Self.NoAbilities, u64> }
    struct S2 has copy { a: Self.HasCopy<Self.NoAbilities, u64> }
    struct S3 has store { a: Self.HasStore<Self.NoAbilities, u64> }
    struct S4 has key { a: Self.HasStore<Self.NoAbilities, u64> }
}

//# publish

module 0x2.M {
    enum NoAbilities { V{ a: bool } }

    enum HasDrop<phantom T1, T2> has drop { V{ a: bool }}
    enum HasCopy<phantom T1, T2> has copy { V{ a : bool }}
    enum HasStore<phantom T1, T2> has store { V{ a : bool } }
    enum HasKey<phantom T1, T2> has key { V{ a : bool } }

    enum S1 has drop { V{ a: Self.HasDrop<Self.NoAbilities, u64> }}
    enum S2 has copy { V{ a: Self.HasCopy<Self.NoAbilities, u64> }}
    enum S3 has store { V{ a: Self.HasStore<Self.NoAbilities, u64> }}
    enum S4 has key { V{ a: Self.HasStore<Self.NoAbilities, u64> }}
}
