//# publish
module 0x42.M {
    struct S<T> { s: T }
    t(s: signer): Self.S<signer> {
        let x: Self.S<signer>;
    label b0:
        x = S<signer> { s: move(s) };
        // cannot copy signer
        return *&x;
    }
}

//# publish
module 0x42.M {
    struct S<T> { s: T }
    t(s: signer): signer {
        let x: Self.S<signer>;
    label b0:
        x = S<signer> { s: move(s) };
        // cannot copy signer
        return *(&(&x).S<signer>::s);
    }
}
