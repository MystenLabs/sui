// Checks if symbolication enums work correctly.
{
  "project": "tests/enums",
  "file_tests": {
    // test matching of variants
    "variant_match.move": [
      {
        "UseDefTest": {
          "use_line": 7,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 8,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 8,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 9,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 9,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 9,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 9,
          "use_ndx": 3
        }
      },
      {
        "UseDefTest": {
          "use_line": 9,
          "use_ndx": 4
        }
      },
      {
        "UseDefTest": {
          "use_line": 10,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 3
        }
      },
      {
        "UseDefTest": {
          "use_line": 19,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 20,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 20,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 20,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 20,
          "use_ndx": 3
        }
      },
      {
        "UseDefTest": {
          "use_line": 21,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 21,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 21,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 3
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 4
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 5
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 6
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 8
        }
      },
      {
        "UseDefTest": {
          "use_line": 24,
          "use_ndx": 9
        }
      },
      {
        "UseDefTest": {
          "use_line": 25,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 25,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 25,
          "use_ndx": 3
        }
      }
    ],
    // test matching of structs
    "struct_match.move": [
      {
        "UseDefTest": {
          "use_line": 13,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 14,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 14,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 14,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 3
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 4
        }
      }
    ],  
    // test matching of ints
    "int_match.move": [
      {
        "UseDefTest": {
          "use_line": 5,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 5,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 5,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 6,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 6,
          "use_ndx": 1
        }
      }
    ],
    // test displaying of enum with many variants
    "long_enum.move": [
      {
        "UseDefTest": {
          "use_line": 3,
          "use_ndx": 0
        }
      }
    ],
    // test matching of mutable value (guards should be immutable refs)
    "mut_match.move": [
      {
        "UseDefTest": {
          "use_line": 4,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 5,
          "use_ndx": 0
        }
      },
      {
        "UseDefTest": {
          "use_line": 5,
          "use_ndx": 1
        }
      },
      {
        "UseDefTest": {
          "use_line": 5,
          "use_ndx": 2
        }
      }            
    ],
    // test matching of nested patterns
    "nested_match.move": [
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 3
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 4
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 5
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 6
        }
      },
      {
        "UseDefTest": {
          "use_line": 15,
          "use_ndx": 7
        }
      },
      {
        "UseDefTest": {
          "use_line": 16,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 16,
          "use_ndx": 3
        }
      },
      {
        "UseDefTest": {
          "use_line": 16,
          "use_ndx": 4
        }
      },
      {
        "UseDefTest": {
          "use_line": 16,
          "use_ndx": 5
        }
      },
      {
        "UseDefTest": {
          "use_line": 16,
          "use_ndx": 6
        }
      }
    ],
    // tests if a nested pattern var is displayed correctly (it's inside outer guard
    // but should only be displayed as immutable reference when inside inner guard)
    "nested_guard.move": [
      {
        "UseDefTest": {
          "use_line": 4,
          "use_ndx": 2
        }
      },
      {
        "UseDefTest": {
          "use_line": 4,
          "use_ndx": 3
        }
      },
      {
        "UseDefTest": {
          "use_line": 4,
          "use_ndx": 4
        }
      }
    ]
  }
}