// Move bytecode v6
module 1.fixed_point32 {

struct FixedPoint32 has copy, drop, store {
	value: u64
}

public multiply_u64(Arg0: u64, Arg1: FixedPoint32): u64 {
L2:	loc0: u128
B0:
	0: MoveLoc[0](Arg0: u64)
	1: CastU128
	2: ImmBorrowLoc[1](Arg1: FixedPoint32)
	3: ImmBorrowField[0](FixedPoint32.value: u64)
	4: ReadRef
	5: CastU128
	6: Mul
	7: LdU8(32)
	8: Shr
	9: StLoc[2](loc0: u128)
	10: CopyLoc[2](loc0: u128)
	11: LdConst[0](u128: 1844..)
	12: Le
	13: BrFalse(15)
B1:
	14: Branch(17)
B2:
	15: LdConst[3](u64: 131075)
	16: Abort
B3:
	17: MoveLoc[2](loc0: u128)
	18: CastU64
	19: Ret
}

public divide_u64(Arg0: u64, Arg1: FixedPoint32): u64 {
L2:	loc0: u128
B0:
	0: ImmBorrowLoc[1](Arg1: FixedPoint32)
	1: ImmBorrowField[0](FixedPoint32.value: u64)
	2: ReadRef
	3: LdU64(0)
	4: Neq
	5: BrFalse(7)
B1:
	6: Branch(9)
B2:
	7: LdConst[4](u64: 65540)
	8: Abort
B3:
	9: MoveLoc[0](Arg0: u64)
	10: CastU128
	11: LdU8(32)
	12: Shl
	13: ImmBorrowLoc[1](Arg1: FixedPoint32)
	14: ImmBorrowField[0](FixedPoint32.value: u64)
	15: ReadRef
	16: CastU128
	17: Div
	18: StLoc[2](loc0: u128)
	19: CopyLoc[2](loc0: u128)
	20: LdConst[0](u128: 1844..)
	21: Le
	22: BrFalse(24)
B4:
	23: Branch(26)
B5:
	24: LdConst[2](u64: 131074)
	25: Abort
B6:
	26: MoveLoc[2](loc0: u128)
	27: CastU64
	28: Ret
}

public create_from_rational(Arg0: u64, Arg1: u64): FixedPoint32 {
L2:	loc0: bool
L3:	loc1: u128
L4:	loc2: u128
L5:	loc3: u128
B0:
	0: CopyLoc[0](Arg0: u64)
	1: CastU128
	2: LdU8(64)
	3: Shl
	4: StLoc[5](loc3: u128)
	5: MoveLoc[1](Arg1: u64)
	6: CastU128
	7: LdU8(32)
	8: Shl
	9: StLoc[4](loc2: u128)
	10: CopyLoc[4](loc2: u128)
	11: LdU128(0)
	12: Neq
	13: BrFalse(15)
B1:
	14: Branch(17)
B2:
	15: LdConst[1](u64: 65537)
	16: Abort
B3:
	17: MoveLoc[5](loc3: u128)
	18: MoveLoc[4](loc2: u128)
	19: Div
	20: StLoc[3](loc1: u128)
	21: CopyLoc[3](loc1: u128)
	22: LdU128(0)
	23: Neq
	24: BrFalse(28)
B4:
	25: LdTrue
	26: StLoc[2](loc0: bool)
	27: Branch(32)
B5:
	28: MoveLoc[0](Arg0: u64)
	29: LdU64(0)
	30: Eq
	31: StLoc[2](loc0: bool)
B6:
	32: MoveLoc[2](loc0: bool)
	33: BrFalse(35)
B7:
	34: Branch(37)
B8:
	35: LdConst[5](u64: 131077)
	36: Abort
B9:
	37: CopyLoc[3](loc1: u128)
	38: LdConst[0](u128: 1844..)
	39: Le
	40: BrFalse(42)
B10:
	41: Branch(44)
B11:
	42: LdConst[5](u64: 131077)
	43: Abort
B12:
	44: MoveLoc[3](loc1: u128)
	45: CastU64
	46: Pack[0](FixedPoint32)
	47: Ret
}

public create_from_raw_value(Arg0: u64): FixedPoint32 {
B0:
	0: MoveLoc[0](Arg0: u64)
	1: Pack[0](FixedPoint32)
	2: Ret
}

public get_raw_value(Arg0: FixedPoint32): u64 {
B0:
	0: ImmBorrowLoc[0](Arg0: FixedPoint32)
	1: ImmBorrowField[0](FixedPoint32.value: u64)
	2: ReadRef
	3: Ret
}

public is_zero(Arg0: FixedPoint32): bool {
B0:
	0: ImmBorrowLoc[0](Arg0: FixedPoint32)
	1: ImmBorrowField[0](FixedPoint32.value: u64)
	2: ReadRef
	3: LdU64(0)
	4: Eq
	5: Ret
}

Constants [
	0 => u128: 18446744073709551615
	1 => u64: 65537
	2 => u64: 131074
	3 => u64: 131075
	4 => u64: 65540
	5 => u64: 131077
]
}
