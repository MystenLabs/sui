// Move bytecode v6
module 0.m {
use 0000000000000000000000000000000000000000000000000000000000000001::unit_test;

baz(p#0#0: u64): u64 {
B0:
	0: MoveLoc[0](p#0#0: u64)
	1: Ret
}

bar(p#0#0: u64): u64 {
B0:
	0: MoveLoc[0](p#0#0: u64)
	1: Ret
}

foo(p#0#0: u64): u64 {
L1:	v1#1#0: u64
L2:	v2#1#0: u64
L3:	v3#1#0: u64
B0:
	0: CopyLoc[0](p#0#0: u64)
	1: CopyLoc[0](p#0#0: u64)
	2: Add
	3: CopyLoc[0](p#0#0: u64)
	4: Call bar(u64): u64
	5: Add
	6: CopyLoc[0](p#0#0: u64)
	7: Add
	8: CopyLoc[0](p#0#0: u64)
	9: Add
	10: StLoc[1](v1#1#0: u64)
	11: CopyLoc[0](p#0#0: u64)
	12: Call baz(u64): u64
	13: CopyLoc[0](p#0#0: u64)
	14: Call bar(u64): u64
	15: Add
	16: StLoc[2](v2#1#0: u64)
	17: CopyLoc[0](p#0#0: u64)
	18: Call baz(u64): u64
	19: MoveLoc[0](p#0#0: u64)
	20: Call bar(u64): u64
	21: Add
	22: StLoc[3](v3#1#0: u64)
	23: MoveLoc[1](v1#1#0: u64)
	24: MoveLoc[2](v2#1#0: u64)
	25: Add
	26: MoveLoc[3](v3#1#0: u64)
	27: Add
	28: Ret
}

test() {
B0:
	0: LdU64(42)
	1: Call foo(u64): u64
	2: Pop
	3: Ret
}

entry public unit_test_poison() {
B0:
	0: Call unit_test::poison()
	1: Ret
}

}
