warning[Lint W01009]: redundant reference/dereference
  ┌─ tests/linter/complex_case_redundant_ref_deref.move:9:20
  │
9 │         let _ref = &*&0;  // Redundant borrow-dereference on literal
  │                    ^^^^ Redundant borrow-dereference detected. Consider removing the borrow-dereference operation and using the expression directly.
  │
  = This warning can be suppressed with '#[allow(lint(redundant_ref_deref))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W01009]: redundant reference/dereference
   ┌─ tests/linter/complex_case_redundant_ref_deref.move:17:20
   │
17 │         let _ref = &*&get_resource();  // Redundant borrow-dereference on function call result
   │                    ^^^^^^^^^^^^^^^^^ Redundant borrow-dereference detected. Consider removing the borrow-dereference operation and using the expression directly.
   │
   = This warning can be suppressed with '#[allow(lint(redundant_ref_deref))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W01009]: redundant reference/dereference
   ┌─ tests/linter/complex_case_redundant_ref_deref.move:24:20
   │
24 │         let _ref = &*&(&*&resource.value);  // Multiple redundant borrows on field
   │                    ^^^^^^^^^^^^^^^^^^^^^^ Redundant borrow-dereference detected. Consider removing the borrow-dereference operation and using the expression directly.
   │
   = This warning can be suppressed with '#[allow(lint(redundant_ref_deref))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E04004]: expected a single non-reference type
   ┌─ tests/linter/complex_case_redundant_ref_deref.move:24:22
   │
24 │         let _ref = &*&(&*&resource.value);  // Multiple redundant borrows on field
   │                      ^^^^^^^^^^^^^^^^^^^^
   │                      │ │
   │                      │ Expected a single non-reference type, but found: '&u64'
   │                      Invalid borrow

warning[W09002]: unused variable
   ┌─ tests/linter/complex_case_redundant_ref_deref.move:28:13
   │
28 │         let mut resource = MyResource { value: 10 };
   │             ^^^ Unused local variable 'mut'. Consider removing or prefixing with an underscore: '_mut'
   │
   = This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E01002]: unexpected token
   ┌─ tests/linter/complex_case_redundant_ref_deref.move:28:17
   │
28 │         let mut resource = MyResource { value: 10 };
   │                 ^^^^^^^^
   │                 │
   │                 Unexpected 'resource'
   │                 Expected ';'

error[E04010]: cannot infer type
   ┌─ tests/linter/complex_case_redundant_ref_deref.move:29:21
   │
29 │         let _ref = &*&mut *&resource;  // Mixed mutable and immutable redundant borrows
   │                     ^^^^^^^^^^^^^^^^ Could not infer this type. Try adding an annotation

error[E04010]: cannot infer type
   ┌─ tests/linter/complex_case_redundant_ref_deref.move:29:27
   │
29 │         let _ref = &*&mut *&resource;  // Mixed mutable and immutable redundant borrows
   │                           ^^^^^^^^^^ Could not infer this type. Try adding an annotation

error[E03009]: unbound variable
   ┌─ tests/linter/complex_case_redundant_ref_deref.move:29:29
   │
29 │         let _ref = &*&mut *&resource;  // Mixed mutable and immutable redundant borrows
   │                             ^^^^^^^^ Unbound variable 'resource'

