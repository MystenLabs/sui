warning[Lint W01002]: 
  ┌─ tests/linter/constrained_redundant_ref_deref.move:9:20
  │
9 │         let _ref = &*&resource;  // Should be flagged
  │                    ^^^^^^^^^^^ Redundant borrow-dereference detected. Consider removing the borrow-dereference operation and using the expression directly.
  │
  = This warning can be suppressed with '#[allow(lint(redundant_ref_deref))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W01002]: 
   ┌─ tests/linter/constrained_redundant_ref_deref.move:35:20
   │
35 │         let _ref = &*&(&*&resource);  // Should be flagged
   │                    ^^^^^^^^^^^^^^^^ Redundant borrow-dereference detected. Consider removing the borrow-dereference operation and using the expression directly.
   │
   = This warning can be suppressed with '#[allow(lint(redundant_ref_deref))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E04004]: expected a single non-reference type
   ┌─ tests/linter/constrained_redundant_ref_deref.move:35:22
   │
35 │         let _ref = &*&(&*&resource);  // Should be flagged
   │                      ^^^^^^^^^^^^^^
   │                      │ │
   │                      │ Expected a single non-reference type, but found: '&0x42::ConstrainedRefDerefCases::MyResource'
   │                      Invalid borrow

warning[Lint W01002]: 
   ┌─ tests/linter/constrained_redundant_ref_deref.move:35:22
   │
35 │         let _ref = &*&(&*&resource);  // Should be flagged
   │                      ^^^^^^^^^^^^^^ Redundant borrow-dereference detected. Consider removing the borrow-dereference operation and using the expression directly.
   │
   = This warning can be suppressed with '#[allow(lint(redundant_ref_deref))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W01002]: 
   ┌─ tests/linter/constrained_redundant_ref_deref.move:57:20
   │
57 │         let _ref = &*&get_resource();  // Should be flagged
   │                    ^^^^^^^^^^^^^^^^^ Redundant borrow-dereference detected. Consider removing the borrow-dereference operation and using the expression directly.
   │
   = This warning can be suppressed with '#[allow(lint(redundant_ref_deref))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W01002]: 
   ┌─ tests/linter/constrained_redundant_ref_deref.move:65:24
   │
65 │             let _ref = &*&resource;  // Should not be flagged because resource is mutated in the loop
   │                        ^^^^^^^^^^^ Redundant borrow-dereference detected. Consider removing the borrow-dereference operation and using the expression directly.
   │
   = This warning can be suppressed with '#[allow(lint(redundant_ref_deref))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

