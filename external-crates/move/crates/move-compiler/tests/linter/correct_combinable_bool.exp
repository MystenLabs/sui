warning[Lint W04010]: unit `()` expression can be removed or simplified
  ┌─ tests/linter/correct_combinable_bool.move:5:30
  │
5 │         if (x == y || z < y) {};
  │             ---------------  ^^ Unnecessary unit '()'
  │             │                 
  │             Consider negating the 'if' condition and simplifying
  │
  = For example 'if (cond) () else e' can be simplified to 'if (!cond) e'
  = This warning can be suppressed with '#[allow(lint(unnecessary_unit))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04010]: unit `()` expression can be removed or simplified
  ┌─ tests/linter/correct_combinable_bool.move:6:21
  │
6 │         if (x <= y) {};
  │             ------  ^^ Unnecessary unit '()'
  │             │        
  │             Consider negating the 'if' condition and simplifying
  │
  = For example 'if (cond) () else e' can be simplified to 'if (!cond) e'
  = This warning can be suppressed with '#[allow(lint(unnecessary_unit))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04010]: unit `()` expression can be removed or simplified
  ┌─ tests/linter/correct_combinable_bool.move:7:21
  │
7 │         if (x >= y) {};
  │             ------  ^^ Unnecessary unit '()'
  │             │        
  │             Consider negating the 'if' condition and simplifying
  │
  = For example 'if (cond) () else e' can be simplified to 'if (!cond) e'
  = This warning can be suppressed with '#[allow(lint(unnecessary_unit))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04010]: unit `()` expression can be removed or simplified
  ┌─ tests/linter/correct_combinable_bool.move:8:20
  │
8 │         if (x > y) {};
  │             -----  ^^ Unnecessary unit '()'
  │             │       
  │             Consider negating the 'if' condition and simplifying
  │
  = For example 'if (cond) () else e' can be simplified to 'if (!cond) e'
  = This warning can be suppressed with '#[allow(lint(unnecessary_unit))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04010]: unit `()` expression can be removed or simplified
  ┌─ tests/linter/correct_combinable_bool.move:9:20
  │
9 │         if (x < y) {};
  │             -----  ^^ Unnecessary unit '()'
  │             │       
  │             Consider negating the 'if' condition and simplifying
  │
  = For example 'if (cond) () else e' can be simplified to 'if (!cond) e'
  = This warning can be suppressed with '#[allow(lint(unnecessary_unit))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04010]: unit `()` expression can be removed or simplified
   ┌─ tests/linter/correct_combinable_bool.move:10:31
   │
10 │         if (x == 11 || x < 3) {};
   │             ----------------  ^^ Unnecessary unit '()'
   │             │                  
   │             Consider negating the 'if' condition and simplifying
   │
   = For example 'if (cond) () else e' can be simplified to 'if (!cond) e'
   = This warning can be suppressed with '#[allow(lint(unnecessary_unit))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

