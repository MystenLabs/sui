warning[Lint W01011]: boolean condition can be simplified
  ┌─ tests/linter/false_negative_combinable_bool_conditions.move:7:13
  │
7 │         if ((x + 5) == (y - 5) || (x + 5) < (y - 5)) {};
  │             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Consider simplifying to `<=` or `>=` respectively.
  │
  = This warning can be suppressed with '#[allow(lint(combinable_bool_conditions))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04010]: unit `()` expression can be removed or simplified
  ┌─ tests/linter/false_negative_combinable_bool_conditions.move:7:54
  │
7 │         if ((x + 5) == (y - 5) || (x + 5) < (y - 5)) {};
  │             ---------------------------------------  ^^ Unnecessary unit '()'
  │             │                                         
  │             Consider negating the 'if' condition and simplifying
  │
  = For example 'if (cond) () else e' can be simplified to 'if (!cond) e'
  = This warning can be suppressed with '#[allow(lint(unnecessary_unit))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W01011]: boolean condition can be simplified
   ┌─ tests/linter/false_negative_combinable_bool_conditions.move:10:13
   │
10 │         if (y > x || y == x) {};
   │             ^^^^^^^^^^^^^^^ Consider simplifying to `<=` or `>=` respectively.
   │
   = This warning can be suppressed with '#[allow(lint(combinable_bool_conditions))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04010]: unit `()` expression can be removed or simplified
   ┌─ tests/linter/false_negative_combinable_bool_conditions.move:10:30
   │
10 │         if (y > x || y == x) {};
   │             ---------------  ^^ Unnecessary unit '()'
   │             │                 
   │             Consider negating the 'if' condition and simplifying
   │
   = For example 'if (cond) () else e' can be simplified to 'if (!cond) e'
   = This warning can be suppressed with '#[allow(lint(unnecessary_unit))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

