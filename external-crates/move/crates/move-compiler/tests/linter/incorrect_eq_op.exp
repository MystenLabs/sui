warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
  ┌─ tests/linter/incorrect_eq_op.move:8:17
  │
8 │         let _ = a == a;
  │                 ^^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
  │
  = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
  ┌─ tests/linter/incorrect_eq_op.move:9:17
  │
9 │         let _ = b != b;
  │                 ^^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
  │
  = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   ┌─ tests/linter/incorrect_eq_op.move:10:17
   │
10 │         let _ = a > a;
   │                 ^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   │
   = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   ┌─ tests/linter/incorrect_eq_op.move:11:17
   │
11 │         let _ = a >= a;
   │                 ^^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   │
   = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   ┌─ tests/linter/incorrect_eq_op.move:14:17
   │
14 │         let _ = a & a;
   │                 ^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   │
   = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   ┌─ tests/linter/incorrect_eq_op.move:15:17
   │
15 │         let _ = b | b;
   │                 ^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   │
   = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   ┌─ tests/linter/incorrect_eq_op.move:16:17
   │
16 │         let _ = a ^ a;
   │                 ^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   │
   = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   ┌─ tests/linter/incorrect_eq_op.move:19:17
   │
19 │         let _ = a - a;
   │                 ^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   │
   = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W02009]: Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   ┌─ tests/linter/incorrect_eq_op.move:20:17
   │
20 │         let _ = b / b;
   │                 ^^^^^ Equal operands detected in binary operation, which might indicate a logical error or redundancy.
   │
   = This warning can be suppressed with '#[allow(lint(equal_operands))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

