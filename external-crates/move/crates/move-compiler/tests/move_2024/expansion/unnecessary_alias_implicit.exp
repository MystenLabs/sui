warning[W02021]: duplicate alias
  ┌─ tests/move_2024/expansion/unnecessary_alias_implicit.move:4:19
  │
2 │     public struct S()
  │                   - The same alias was previously declared here
3 │     public fun foo() {
4 │         use a::m::S; // unused and duplciate
  │                   ^ Unnecessary alias 'S' for module member 'a::m::S'. It was already in scope
  │
  = This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09001]: unused alias
  ┌─ tests/move_2024/expansion/unnecessary_alias_implicit.move:4:19
  │
4 │         use a::m::S; // unused and duplciate
  │                   ^ Unused 'use' of alias 'S'. Consider removing it
  │
  = This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W02021]: duplicate alias
  ┌─ tests/move_2024/expansion/unnecessary_alias_implicit.move:5:19
  │
3 │     public fun foo() {
  │                --- The same alias was previously declared here
4 │         use a::m::S; // unused and duplciate
5 │         use a::m::foo; // unused and duplciate
  │                   ^^^ Unnecessary alias 'foo' for module member 'a::m::foo'. It was already in scope
  │
  = This warning can be suppressed with '#[allow(duplicate_alias)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09001]: unused alias
  ┌─ tests/move_2024/expansion/unnecessary_alias_implicit.move:5:19
  │
5 │         use a::m::foo; // unused and duplciate
  │                   ^^^ Unused 'use' of alias 'foo'. Consider removing it
  │
  = This warning can be suppressed with '#[allow(unused_use)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

