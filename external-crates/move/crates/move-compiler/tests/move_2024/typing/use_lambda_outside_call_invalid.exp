error[E04031]: invalid usage of lambda
  ┌─ tests/move_2024/typing/use_lambda_outside_call_invalid.move:3:17
  │
3 │         let x = $f;
  │                 ^^ Lambdas can only be used directly as arguments to 'macro' functions

error[E04029]: invalid function call
  ┌─ tests/move_2024/typing/use_lambda_outside_call_invalid.move:4:9
  │
4 │         x();
  │         ^ Unexpected invocation of parameter or local 'x'. Non-syntax variables cannot be invoked as functions
  │
  = Only macro syntax variables, e.g. '$x', may be invoked as functions.

error[E02010]: invalid name
  ┌─ tests/move_2024/typing/use_lambda_outside_call_invalid.move:7:23
  │
7 │     macro fun bar(mut f: || -> u64) {
  │     -----             ^ Invalid parameter name 'f'. 'macro' parameter names must start with '$' (or must be '_')
  │     │                  
  │     Declared 'macro' here
  │
  = 'macro' parameters start with '$' to indicate that their arguments are not evaluated before the macro is expanded, meaning the entire expression is substituted. This is different from regular function parameters that are evaluated before the function is called.

error[E04031]: invalid usage of lambda
  ┌─ tests/move_2024/typing/use_lambda_outside_call_invalid.move:8:13
  │
8 │         f = || 0;
  │             ^^^^ Lambdas can only be used directly as arguments to 'macro' functions

warning[W09005]: dead or unreachable code
   ┌─ tests/move_2024/typing/use_lambda_outside_call_invalid.move:17:14
   │
17 │         bar!(|| 0);
   │              ^^^^ Unused macro argument. Its expression will not be type checked and it will not evaluated
   │
   = This warning can be suppressed with '#[allow(dead_code)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E04032]: unable to expand macro function
   ┌─ tests/move_2024/typing/use_lambda_outside_call_invalid.move:18:14
   │
18 │         foo!(baz!(|| || 0));
   │              ^^^^^^^^^^^^^ Unable to bind lambda to parameter '$f'. The lambda must be passed directly

