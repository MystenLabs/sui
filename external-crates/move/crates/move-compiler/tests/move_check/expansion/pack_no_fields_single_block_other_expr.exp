error[E03022]: invalid usage position
  ┌─ tests/move_check/expansion/pack_no_fields_single_block_other_expr.move:6:18
  │
6 │         let _s = S 0;
  │                  ^ Expected a local or constant, but found struct 'S' in current scope
  │
  = Struct with named arguments must be written as 'S { ... }'

error[E01002]: unexpected token
  ┌─ tests/move_check/expansion/pack_no_fields_single_block_other_expr.move:6:20
  │
6 │         let _s = S 0;
  │                    ^
  │                    │
  │                    Unexpected '0'
  │                    Expected ';'

error[E03022]: invalid usage position
  ┌─ tests/move_check/expansion/pack_no_fields_single_block_other_expr.move:7:18
  │
7 │         let _s = S f;
  │                  ^ Expected a local or constant, but found struct 'S' in current scope
  │
  = Struct with named arguments must be written as 'S { ... }'

error[E01002]: unexpected token
  ┌─ tests/move_check/expansion/pack_no_fields_single_block_other_expr.move:7:20
  │
7 │         let _s = S f;
  │                    ^
  │                    │
  │                    Unexpected 'f'
  │                    Expected ';'

error[E13001]: feature is not supported in specified edition
  ┌─ tests/move_check/expansion/pack_no_fields_single_block_other_expr.move:8:18
  │
8 │         let _g = G ();
  │                  ^^^^ Positional fields are not supported by current edition 'legacy', only '2024.alpha' and '2024.beta' support this feature
  │
  = You can update the edition in the 'Move.toml', or via command line flag if invoking the compiler directly.

error[E03013]: positional call mismatch
  ┌─ tests/move_check/expansion/pack_no_fields_single_block_other_expr.move:8:18
  │
3 │     struct G has drop {}
  │            - 'G' is declared here
  ·
8 │         let _g = G ();
  │                  ^^^^ Invalid struct instantiation. Named struct declarations require named instantiations

error[E01002]: unexpected token
  ┌─ tests/move_check/expansion/pack_no_fields_single_block_other_expr.move:9:22
  │
9 │         let _g = G { {} };
  │                      ^ Expected a field expression

