warning[W09003]: unused assignment
   ┌─ tests/move_check/expansion/unpack_all_field_cases.move:10:13
   │
10 │         S { f, g } = copy s;
   │             ^ Unused assignment for variable 'f'. Consider removing, replacing with '_', or prefixing with '_' (e.g., '_f')
   │
   = This warning can be suppressed with '#[allow(unused_assignment)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[W09003]: unused assignment
   ┌─ tests/move_check/expansion/unpack_all_field_cases.move:10:16
   │
10 │         S { f, g } = copy s;
   │                ^ Unused assignment for variable 'g'. Consider removing, replacing with '_', or prefixing with '_' (e.g., '_g')
   │
   = This warning can be suppressed with '#[allow(unused_assignment)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E01009]: invalid assignment
   ┌─ tests/move_check/expansion/unpack_all_field_cases.move:11:16
   │
11 │         S { f: 0, g: 0} = copy s;
   │                ^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment

error[E01009]: invalid assignment
   ┌─ tests/move_check/expansion/unpack_all_field_cases.move:12:16
   │
12 │         S { g: 0, f } = copy s;
   │                ^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment

error[E01009]: invalid assignment
   ┌─ tests/move_check/expansion/unpack_all_field_cases.move:13:19
   │
13 │         S { g, f: 0 } = copy s;
   │                   ^ Invalid assignment syntax. Expected: a local, a field write, or a deconstructing assignment

