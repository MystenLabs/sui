warning[W09006]: unused struct type parameter
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:2:14
  │
2 │     struct S<T, T> { f: T }
  │              ^ Unused type parameter 'T'. Consider declaring it as phantom
  │
  = This warning can be suppressed with '#[allow(unused_type_parameter)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E02001]: duplicate declaration, item, or annotation
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:2:17
  │
2 │     struct S<T, T> { f: T }
  │              -  ^ Duplicate type parameter declared with name 'T'
  │              │   
  │              Type parameter previously defined here

warning[W09006]: unused struct type parameter
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:3:15
  │
3 │     struct S2<T: drop, T: key, T> { f: T }
  │               ^ Unused type parameter 'T'. Consider declaring it as phantom
  │
  = This warning can be suppressed with '#[allow(unused_type_parameter)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E02001]: duplicate declaration, item, or annotation
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:3:24
  │
3 │     struct S2<T: drop, T: key, T> { f: T }
  │               -        ^ Duplicate type parameter declared with name 'T'
  │               │         
  │               Type parameter previously defined here

warning[W09006]: unused struct type parameter
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:3:24
  │
3 │     struct S2<T: drop, T: key, T> { f: T }
  │                        ^ Unused type parameter 'T'. Consider declaring it as phantom
  │
  = This warning can be suppressed with '#[allow(unused_type_parameter)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E02001]: duplicate declaration, item, or annotation
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:3:32
  │
3 │     struct S2<T: drop, T: key, T> { f: T }
  │               -                ^ Duplicate type parameter declared with name 'T'
  │               │                 
  │               Type parameter previously defined here

warning[W09006]: unused struct type parameter
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:4:14
  │
4 │     struct R<T, T> { f: T }
  │              ^ Unused type parameter 'T'. Consider declaring it as phantom
  │
  = This warning can be suppressed with '#[allow(unused_type_parameter)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E02001]: duplicate declaration, item, or annotation
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:4:17
  │
4 │     struct R<T, T> { f: T }
  │              -  ^ Duplicate type parameter declared with name 'T'
  │              │   
  │              Type parameter previously defined here

warning[W09006]: unused struct type parameter
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:5:15
  │
5 │     struct R2<T: drop, T: key, T> { f: T }
  │               ^ Unused type parameter 'T'. Consider declaring it as phantom
  │
  = This warning can be suppressed with '#[allow(unused_type_parameter)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E02001]: duplicate declaration, item, or annotation
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:5:24
  │
5 │     struct R2<T: drop, T: key, T> { f: T }
  │               -        ^ Duplicate type parameter declared with name 'T'
  │               │         
  │               Type parameter previously defined here

warning[W09006]: unused struct type parameter
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:5:24
  │
5 │     struct R2<T: drop, T: key, T> { f: T }
  │                        ^ Unused type parameter 'T'. Consider declaring it as phantom
  │
  = This warning can be suppressed with '#[allow(unused_type_parameter)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E02001]: duplicate declaration, item, or annotation
  ┌─ tests/move_check/naming/duplicate_type_parameter_struct.move:5:32
  │
5 │     struct R2<T: drop, T: key, T> { f: T }
  │               -                ^ Duplicate type parameter declared with name 'T'
  │               │                 
  │               Type parameter previously defined here

