error[E04007]: incompatible types
  ┌─ tests/move_check/typing/break_with_value_invalid.move:3:25
  │
2 │     fun t0(): bool {
  │               ---- Expected: 'bool'
3 │         loop { break 0 };
  │                         ^
  │                         │
  │                         Invalid return expression
  │                         Given: '()'

error[E04007]: incompatible types
  ┌─ tests/move_check/typing/break_with_value_invalid.move:7:9
  │
6 │     fun t1(): u64 {
  │               --- Expected: 'u64'
7 │         loop { break true } 
  │         ^^^^^^^^^^^^^^^^^^^
  │         │            │
  │         │            Given: 'bool'
  │         Invalid return expression

error[E04007]: incompatible types
   ┌─ tests/move_check/typing/break_with_value_invalid.move:11:9
   │  
11 │ ╭         if (cond) {
12 │ │             loop { break 0 }
   │ │             ---------------- Found: integer. It is not compatible with the other type.
13 │ │         } else {
14 │ │             loop { break false }
   │ │                          ----- Found: 'bool'. It is not compatible with the other type.
15 │ │         }
   │ ╰─────────^ Incompatible branches

error[E04007]: incompatible types
   ┌─ tests/move_check/typing/break_with_value_invalid.move:19:9
   │
18 │     fun t3(cond: bool): bool {
   │                         ---- Expected: 'bool'
19 │         while (cond) { break true } 
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │         │
   │         Invalid return expression
   │         Given: '()'

error[E04007]: incompatible types
   ┌─ tests/move_check/typing/break_with_value_invalid.move:19:24
   │
19 │         while (cond) { break true } 
   │         ---------------^^^^^^^^^^--
   │         │              │     │
   │         │              │     Given: 'bool'
   │         │              Invalid break
   │         Expected: '()'

error[E04007]: incompatible types
   ┌─ tests/move_check/typing/break_with_value_invalid.move:23:24
   │
23 │         while (cond) { break true }; 
   │         ---------------^^^^^^^^^^--
   │         │              │     │
   │         │              │     Given: 'bool'
   │         │              Invalid break
   │         Expected: '()'

error[E04007]: incompatible types
   ┌─ tests/move_check/typing/break_with_value_invalid.move:23:36
   │
22 │     fun t4(cond: bool): bool {
   │                         ---- Expected: 'bool'
23 │         while (cond) { break true }; 
   │                                    ^
   │                                    │
   │                                    Invalid return expression
   │                                    Given: '()'

error[E04007]: incompatible types
   ┌─ tests/move_check/typing/break_with_value_invalid.move:28:9
   │  
26 │       fun t5(cond: bool): u64 {
   │                           --- Expected: 'u64'
27 │           let x = 0;
28 │ ╭         loop { 
29 │ │             if (cond) {
30 │ │                break true
   │ │                      ---- Given: 'bool'
31 │ │             } else {
32 │ │                 x = x + 1;
33 │ │             }
34 │ │         } 
   │ ╰─────────^ Invalid return expression

error[E04005]: expected a single type
   ┌─ tests/move_check/typing/break_with_value_invalid.move:38:13
   │
38 │         let x = while (cond) { };
   │             ^   ---------------- Expected a single type, but found expression list type: '()'
   │             │    
   │             Invalid type for local

error[E04007]: incompatible types
   ┌─ tests/move_check/typing/break_with_value_invalid.move:50:11
   │
46 │                 break true
   │                       ---- Found: 'bool'. It is not compatible with the other type.
   ·
50 │         } == 0) {
   │           ^^ - Found: integer. It is not compatible with the other type.
   │           │   
   │           Incompatible arguments to '=='

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_check/typing/break_with_value_invalid.move:67:9
   │  
64 │       struct R {f: u64}
   │              - To satisfy the constraint, the 'drop' ability would need to be added here
   ·  
67 │ ╭         loop {
68 │ │             break R { f: 0 }
   │ │                   ---------- The type '0x42::m::R' does not have the ability 'drop'
69 │ │         };
   │ ╰─────────^ Cannot ignore values without the 'drop' ability. The value must be used

