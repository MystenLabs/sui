error[E04007]: incompatible types
   ┌─ tests/move_check/typing/type_variable_join_threaded_pack_invalid.move:42:9
   │
35 │     fun t0(): Box<bool> {
   │                   ---- Expected: 'bool'
   ·
38 │         let b = Box { f1: x, f2: x };
   │                 -------------------- Given: integer
   ·
42 │         b
   │         ^ Invalid return expression

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_check/typing/type_variable_join_threaded_pack_invalid.move:47:17
   │
10 │     public fun get<V: drop>(_self: &T<V>): V {
   │                       ---- 'drop' constraint declared here
   ·
27 │     struct Box<T> { f1: T, f2: T }
   │            --- To satisfy the constraint, the 'drop' ability would need to be added here
   ·
47 │         let x = Container::get(&v);
   │                 ^^^^^^^^^^^^^^^^^^ 'drop' constraint not satisifed
48 │         let b = Box { f1: x, f2: x };
49 │         Container::put(&mut v, Box {f1: R{}, f2: R{}});
   │                                ---------------------- The type '0x2::M::Box<0x2::M::R>' does not have the ability 'drop'

