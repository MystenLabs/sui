---
source: crates/move-compiler/tests/move_check_testsuite.rs
info:
  flavor: sui
  edition: legacy
  lint: true
---
warning[Lint W99000]: unnecessary public entry
  ┌─ tests/sui_mode/linter/true_unnecessary_public_entry.move:2:12
  │
2 │     public entry fun true_unnecessary_public_entry() {}
  │            ^^^^^ `entry` on `public` functions is meaningless except in niche use cases.
  │
  = `public` functions can be called from PTBs. As such, `entry` on `public` functions should be used only if you are concerned with the value flow limitations around `entry` functions. If you do not have an intricate set of private `entry` functions alongside it, an `entry` modifier on a `public` function is superfluous.
  = This warning can be suppressed with '#[allow(lint(share_owned))]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W99000]: unnecessary public entry
  ┌─ tests/sui_mode/linter/true_unnecessary_public_entry.move:3:5
  │
3 │     entry public fun true_unnecessary_public_entry_2() {}
  │     ^^^^^ `entry` on `public` functions is meaningless except in niche use cases.
  │
  = `public` functions can be called from PTBs. As such, `entry` on `public` functions should be used only if you are concerned with the value flow limitations around `entry` functions. If you do not have an intricate set of private `entry` functions alongside it, an `entry` modifier on a `public` function is superfluous.
  = This warning can be suppressed with '#[allow(lint(share_owned))]' applied to the 'module' or module member ('const', 'fun', or 'struct')
