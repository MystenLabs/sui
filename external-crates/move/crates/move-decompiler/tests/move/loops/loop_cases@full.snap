---
source: crates/move-decompiler/tests/tests.rs
---
// Auto-generated by Move decompiler

module loops::loop_cases;

// -- structs -- 

// -- enums -- 

// -- functions -- 

public fun loop_test() {
    {
        let l0 = 0u64;
        loop {
            l0 = l0 + 1u64;
            if (l0 >= 10u64) {
                break
            } else {
                continue
            }
        };
        return
    }
}

public fun loop_test_10() {
    return
}

public fun loop_test_2() {
    {
        let l0 = 0u64;
        loop {
            l0 = l0 + 1u64;
            if (l0 % 2u64 == 1u64) {
                continue
            } else {
                
            };
            if (l0 == 10u64) {
                break
            } else {
                continue
            }
        };
        return
    }
}

public fun loop_test_3() {
    {
        let l0 = 0u64;
        while (!(l0 >= 10u64)) {
            l0 = l0 + 1u64;
        };
        return
    }
}

public fun loop_test_4() {
    loop {
        
    }
}

public fun loop_test_5() {
    loop {
        
    }
}

public fun loop_test_6(l0: u64) {
    {
        let l1 = 0u64;
        while (l0 > 10u64) {
            l1 = l1 + 1u64;
            let l0 = l0 - 1u64;
        };
        return
    }
}

public fun loop_test_7(l0: u64): u64 {
    return 10u64 * l0
}

public fun loop_test_8() {
    {
        let l0 = 0u64;
        let l1 = 5u64;
        loop {
            l0 = l0 + 1u64;
            l1 = l1 * 2u64 + l0;
            if (l0 >= 10u64) {
                break
            } else {
                continue
            }
        };
        return
    }
}

public fun loop_test_9() {
    {
        let l0 = 0u64;
        let l1 = 5u64;
        loop {
            l0 = l0 + 1u64;
            l1 = l1 * 2u64 + l0;
            if (l1 - l0 % 3u64 == 0u64) {
                l1 = 100u64;
            } else {
                
            };
            if (l0 >= 10u64) {
                break
            } else {
                continue
            }
        };
        return
    }
}
