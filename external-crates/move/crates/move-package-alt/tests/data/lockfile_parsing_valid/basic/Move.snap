---
source: crates/move-package-alt/tests/parsing_tests.rs
---
Lockfile { unpublished: UnpublishedTable { dependencies: UnpublishedDependencies { pinned: {"bar": Git(GitDependency { repo: "", rev: Some("sha"), path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> }), "foo": Local(LocalDependency { local: "../foo" })}, unpinned: {"bar": External(ExternalDependency { resolver: "mvr", data: String("@protocol/bar") }), "foo": Local(LocalDependency { local: "../foo" })} }, dep_overrides: {"mainnet": UnpublishedDependencies { pinned: {"foo": Git(GitDependency { repo: "", rev: Some("sha"), path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> }), "std": Git(GitDependency { repo: "", rev: Some("sha"), path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> })}, unpinned: {"foo": Git(GitDependency { repo: "", rev: Some("rev"), path: None, phantom: PhantomData<move_package_alt::dependency::Unpinned> })} }} }, published: {"mainnet": Publication { metadata: (), dependencies: {"std": Git(GitDependency { repo: "", rev: Some("mainnet_sha"), path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> })} }, "testnet": Publication { metadata: (), dependencies: {"std": Git(GitDependency { repo: "", rev: Some("testnet_sha"), path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> }), "sui": Git(GitDependency { repo: "", rev: Some("testnet_sha"), path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> })} }} }
