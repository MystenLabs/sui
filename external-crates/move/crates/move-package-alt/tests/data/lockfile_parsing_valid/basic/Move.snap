---
source: crates/move-package-alt/tests/parsing_tests.rs
---
Lockfile { unpublished: UnpublishedTable { dependencies: UnpublishedDependencies { pinned: {Spanned { span: 269..272, value: "bar" }: Git(GitDependency { repo: "", rev: "sha", path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> }), Spanned { span: 219..222, value: "foo" }: Local(LocalDependency { local: "../foo" })}, unpinned: {Spanned { span: 463..466, value: "bar" }: External(ExternalDependency { r: Table({"mvr": String("@protocol/bar")}), fields: {} }), Spanned { span: 415..418, value: "foo" }: Local(LocalDependency { local: "../foo" })} }, dep_overrides: {"mainnet": UnpublishedDependencies { pinned: {Spanned { span: 1622..1625, value: "foo" }: Git(GitDependency { repo: "", rev: "sha", path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> }), Spanned { span: 1693..1696, value: "std" }: Git(GitDependency { repo: "", rev: "sha", path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> })}, unpinned: {Spanned { span: 1829..1832, value: "foo" }: Git(GitDependency { repo: "", rev: "rev", path: None, phantom: PhantomData<move_package_alt::dependency::Unpinned> })} }} }, published: {"mainnet": Publication { metadata: (), dependencies: {Spanned { span: 1036..1039, value: "std" }: Git(GitDependency { repo: "", rev: "mainnet_sha", path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> })} }, "testnet": Publication { metadata: (), dependencies: {Spanned { span: 1498..1501, value: "std" }: Git(GitDependency { repo: "", rev: "testnet_sha", path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> }), Spanned { span: 1538..1541, value: "sui" }: Git(GitDependency { repo: "", rev: "testnet_sha", path: None, phantom: PhantomData<move_package_alt::dependency::Pinned> })} }} }
