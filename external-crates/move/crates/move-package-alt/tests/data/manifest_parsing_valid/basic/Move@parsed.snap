---
source: crates/move-package-alt/tests/test_runner.rs
---
Manifest { package: PackageMetadata { name: Located { file: "tests/data/manifest_parsing_valid/basic/Move.toml", value: Spanned { span: 17..26, value: "example" } }, edition: Located { file: "tests/data/manifest_parsing_valid/basic/Move.toml", value: Spanned { span: 37..48, value: "2024.beta" } }, metadata: () }, environments: {"mainnet": "35834a8a", "testnet": "4c78adac"}, dependencies: {"foo": ManifestDependency { dependency_info: Git(UnpinnedGitDependency { repo: "https://example.com/foo.git", rev: Some("releases/v1"), path: "" }), is_override: true, rename_from: Some("Foo") }, "qwer": ManifestDependency { dependency_info: External(ExternalDependency { resolver: "mvr", data: String("@pkg/qwer") }), is_override: false, rename_from: None }}, dep_overrides: {"mainnet": {"bar": ManifestDependencyOverride { dependency: Some(ManifestDependency { dependency_info: Git(UnpinnedGitDependency { repo: "https://example.com/bar.git", rev: None, path: "" }), is_override: false, rename_from: None }), address_info: Some(()), use_environment: Some("mainnet_beta") }, "foo": ManifestDependencyOverride { dependency: Some(ManifestDependency { dependency_info: Git(UnpinnedGitDependency { repo: "https://example.com/foo.git", rev: None, path: "" }), is_override: false, rename_from: None }), address_info: Some(()), use_environment: Some("mainnet_alpha") }}} }
