---
source: crates/move-prover/tests/integration.rs
assertion_line: 128
expression: output
snapshot_kind: text
---
exiting with bytecode transformation errors
warning: unused variable
   ┌─ tests/inputs/spec_dynamic_field/spec_dynamic_field_check.move:13:23
   │
13 │     fun sqrt(x: u128, ctx: &mut TxContext): u64 {
   │                       ^^^ Unused parameter 'ctx'. Consider removing or prefixing with an underscore: '_ctx'
   │
   = This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning: unused mutable reference '&mut' parameter
   ┌─ tests/inputs/spec_dynamic_field/spec_dynamic_field_check.move:13:28
   │
13 │     fun sqrt(x: u128, ctx: &mut TxContext): u64 {
   │                       ---  ^^^^^^^^^^^^^^ Mutable reference is never used mutably, consider switching to an immutable reference '&' instead
   │                       │     
   │                       For parameters, this can be silenced by prefixing the name with an underscore, e.g. '_ctx'
   │
   = This warning can be suppressed with '#[allow(unused_mut_parameter)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error: Consider removing non-pure calls form spec
   ┌─ tests/inputs/spec_dynamic_field/spec_dynamic_field_check.move:28:25
   │
28 │         let parent_id = object::new(ctx);
   │                         ^^^^^^^^^^^^^^^^

error: Consider removing non-pure calls form spec
   ┌─ tests/inputs/spec_dynamic_field/spec_dynamic_field_check.move:35:9
   │
35 │         field::add(&mut parent_ref.id, df_name, df_child);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: Consider removing non-pure calls form spec
   ┌─ tests/inputs/spec_dynamic_field/spec_dynamic_field_check.move:40:9
   │
40 │         transfer::share_object(parent);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: Function uses unsupported dynamic fields
   ┌─ tests/inputs/spec_dynamic_field/spec_dynamic_field_check.move:35:9
   │
35 │         field::add(&mut parent_ref.id, df_name, df_child);
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
