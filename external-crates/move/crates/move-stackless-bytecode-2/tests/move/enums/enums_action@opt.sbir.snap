---
source: crates/move-stackless-bytecode-2/tests/from_source.rs
---
  Module: action
    Function: destroy_action (entry: LBL_0)
      Label LBL_0:
        reg_0 : 0x42::action::Action = Move(lcl_0)
        lcl_2 = reg_0 : 0x42::action::Action
        reg_1 : &0x42::action::Action = ImmBorrow(lcl_2)
        lcl_1 = reg_1 : &0x42::action::Action
        reg_2 : &0x42::action::Action = Copy(lcl_1)
        Switch(reg_2 : &0x42::action::Action : 0x42::action::Action) Case: Stop (lbl 6), Case: MoveTo (lbl 11), Case: ChangeSpeed (lbl 20)

      Label LBL_6:
        reg_3 : &0x42::action::Action = Move(lcl_1)
        UnpackVariantImmRef<Stop>(reg_3 : &0x42::action::Action)
        reg_4 : 0x42::action::Action = Move(lcl_2)
        UnpackVariant<Stop>(reg_4 : 0x42::action::Action)
        Jump(LBL_26)

      Label LBL_11:
        reg_5 : &0x42::action::Action = Move(lcl_1)
        reg_6 : &u64, reg_7 : &u64 = UnpackVariantImmRef<MoveTo>(reg_5 : &0x42::action::Action)
        Drop(reg_7 : &u64)
        Drop(reg_6 : &u64)
        reg_8 : 0x42::action::Action = Move(lcl_2)
        reg_9 : u64, reg_10 : u64 = UnpackVariant<MoveTo>(reg_8 : 0x42::action::Action)
        Drop(reg_10 : u64)
        Drop(reg_9 : u64)
        Jump(LBL_26)

      Label LBL_20:
        reg_11 : &0x42::action::Action = Move(lcl_1)
        reg_12 : &u64 = UnpackVariantImmRef<ChangeSpeed>(reg_11 : &0x42::action::Action)
        Drop(reg_12 : &u64)
        reg_13 : 0x42::action::Action = Move(lcl_2)
        reg_14 : u64 = UnpackVariant<ChangeSpeed>(reg_13 : 0x42::action::Action)
        Drop(reg_14 : u64)

      Label LBL_26:
        Return()


    Function: increase_speed (entry: LBL_0)
      Label LBL_0:
        reg_0 : &mut 0x42::action::Action = Move(lcl_0)
        lcl_3 = reg_0 : &mut 0x42::action::Action
        reg_1 : &mut 0x42::action::Action = Copy(lcl_3)
        reg_2 : &0x42::action::Action = FreezeRef(reg_1 : &mut 0x42::action::Action)
        lcl_2 = reg_2 : &0x42::action::Action
        reg_3 : &0x42::action::Action = Copy(lcl_2)
        Switch(reg_3 : &0x42::action::Action : 0x42::action::Action) Case: Stop (lbl 7), Case: MoveTo (lbl 13), Case: ChangeSpeed (lbl 21)

      Label LBL_7:
        reg_4 : &mut 0x42::action::Action = Move(lcl_3)
        Drop(reg_4 : &mut 0x42::action::Action)
        reg_5 : &0x42::action::Action = Move(lcl_2)
        UnpackVariantImmRef<Stop>(reg_5 : &0x42::action::Action)
        Abort(Immediate(0u64))

      Label LBL_13:
        reg_7 : &mut 0x42::action::Action = Move(lcl_3)
        Drop(reg_7 : &mut 0x42::action::Action)
        reg_8 : &0x42::action::Action = Move(lcl_2)
        reg_9 : &u64, reg_10 : &u64 = UnpackVariantImmRef<MoveTo>(reg_8 : &0x42::action::Action)
        Drop(reg_10 : &u64)
        Drop(reg_9 : &u64)
        Abort(Immediate(0u64))

      Label LBL_21:
        reg_12 : &0x42::action::Action = Move(lcl_2)
        reg_13 : &u64 = UnpackVariantImmRef<ChangeSpeed>(reg_12 : &0x42::action::Action)
        Drop(reg_13 : &u64)
        reg_14 : &mut 0x42::action::Action = Move(lcl_3)
        reg_15 : &mut u64 = UnpackVariantMutRef<ChangeSpeed>(reg_14 : &mut 0x42::action::Action)
        lcl_4 = reg_15 : &mut u64
        reg_16 : u64 = Move(lcl_1)
        reg_17 : &mut u64 = Move(lcl_4)
        WriteRef(reg_17 : &mut u64, reg_16 : u64)
        Return()


    Function: speed (entry: LBL_0)
      Label LBL_0:
        reg_0 : &0x42::action::Action = Move(lcl_0)
        lcl_3 = reg_0 : &0x42::action::Action
        reg_1 : &0x42::action::Action = Copy(lcl_3)
        lcl_2 = reg_1 : &0x42::action::Action
        reg_2 : &0x42::action::Action = Copy(lcl_2)
        Switch(reg_2 : &0x42::action::Action : 0x42::action::Action) Case: Stop (lbl 6), Case: MoveTo (lbl 12), Case: ChangeSpeed (lbl 22)

      Label LBL_6:
        reg_3 : &0x42::action::Action = Move(lcl_3)
        Drop(reg_3 : &0x42::action::Action)
        reg_4 : &0x42::action::Action = Move(lcl_2)
        UnpackVariantImmRef<Stop>(reg_4 : &0x42::action::Action)
        Abort(Immediate(0u64))

      Label LBL_12:
        reg_6 : &0x42::action::Action = Move(lcl_2)
        reg_7 : &u64, reg_8 : &u64 = UnpackVariantImmRef<MoveTo>(reg_6 : &0x42::action::Action)
        Drop(reg_8 : &u64)
        Drop(reg_7 : &u64)
        reg_9 : &0x42::action::Action = Move(lcl_3)
        reg_10 : &u64, reg_11 : &u64 = UnpackVariantImmRef<MoveTo>(reg_9 : &0x42::action::Action)
        Drop(reg_11 : &u64)
        reg_12 : u64 = ReadRef(reg_10 : &u64)
        lcl_1 = reg_12 : u64
        Jump(LBL_29)

      Label LBL_22:
        reg_13 : &0x42::action::Action = Move(lcl_2)
        reg_14 : &u64 = UnpackVariantImmRef<ChangeSpeed>(reg_13 : &0x42::action::Action)
        Drop(reg_14 : &u64)
        reg_15 : &0x42::action::Action = Move(lcl_3)
        reg_16 : &u64 = UnpackVariantImmRef<ChangeSpeed>(reg_15 : &0x42::action::Action)
        reg_17 : u64 = ReadRef(reg_16 : &u64)
        lcl_1 = reg_17 : u64

      Label LBL_29:
        reg_18 : u64 = Move(lcl_1)
        Return(reg_18 : u64)
