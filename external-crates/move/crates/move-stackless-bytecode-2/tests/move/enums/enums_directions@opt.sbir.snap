---
source: crates/move-stackless-bytecode-2/tests/from_source.rs
---
  Module: directions
    Function: is_horizontal (entry: LBL_0)
      Label LBL_0:
        reg_0 : 0x42::directions::Direction = Move(lcl_0)
        lcl_3 = reg_0 : 0x42::directions::Direction
        reg_1 : &0x42::directions::Direction = ImmBorrow(lcl_3)
        lcl_2 = reg_1 : &0x42::directions::Direction
        reg_2 : &0x42::directions::Direction = Copy(lcl_2)
        Switch(reg_2 : &0x42::directions::Direction : 0x42::directions::Direction) Case: Up (lbl 6), Case: Down (lbl 11), Case: Left (lbl 16), Case: Right (lbl 23)

      Label LBL_6:
        reg_3 : &0x42::directions::Direction = Move(lcl_2)
        Drop(reg_3 : &0x42::directions::Direction)
        lcl_1 = Immediate(false)
        Jump(LBL_29)

      Label LBL_11:
        reg_5 : &0x42::directions::Direction = Move(lcl_2)
        Drop(reg_5 : &0x42::directions::Direction)
        lcl_1 = Immediate(false)
        Jump(LBL_29)

      Label LBL_16:
        reg_7 : &0x42::directions::Direction = Move(lcl_2)
        UnpackVariantImmRef<Left>(reg_7 : &0x42::directions::Direction)
        reg_8 : 0x42::directions::Direction = Move(lcl_3)
        UnpackVariant<Left>(reg_8 : 0x42::directions::Direction)
        lcl_1 = Immediate(true)
        Jump(LBL_29)

      Label LBL_23:
        reg_10 : &0x42::directions::Direction = Move(lcl_2)
        UnpackVariantImmRef<Right>(reg_10 : &0x42::directions::Direction)
        reg_11 : 0x42::directions::Direction = Move(lcl_3)
        UnpackVariant<Right>(reg_11 : 0x42::directions::Direction)
        lcl_1 = Immediate(true)

      Label LBL_29:
        reg_13 : bool = Move(lcl_1)
        Return(reg_13 : bool)


    Function: is_up (entry: LBL_0)
      Label LBL_0:
        reg_0 : 0x42::directions::Direction = Move(lcl_0)
        lcl_3 = reg_0 : 0x42::directions::Direction
        reg_1 : &0x42::directions::Direction = ImmBorrow(lcl_3)
        lcl_2 = reg_1 : &0x42::directions::Direction
        reg_2 : &0x42::directions::Direction = Copy(lcl_2)
        Switch(reg_2 : &0x42::directions::Direction : 0x42::directions::Direction) Case: Up (lbl 6), Case: Down (lbl 13), Case: Left (lbl 18), Case: Right (lbl 23)

      Label LBL_6:
        reg_3 : &0x42::directions::Direction = Move(lcl_2)
        UnpackVariantImmRef<Up>(reg_3 : &0x42::directions::Direction)
        reg_4 : 0x42::directions::Direction = Move(lcl_3)
        UnpackVariant<Up>(reg_4 : 0x42::directions::Direction)
        lcl_1 = Immediate(true)
        Jump(LBL_27)

      Label LBL_13:
        reg_6 : &0x42::directions::Direction = Move(lcl_2)
        Drop(reg_6 : &0x42::directions::Direction)
        lcl_1 = Immediate(false)
        Jump(LBL_27)

      Label LBL_18:
        reg_8 : &0x42::directions::Direction = Move(lcl_2)
        Drop(reg_8 : &0x42::directions::Direction)
        lcl_1 = Immediate(false)
        Jump(LBL_27)

      Label LBL_23:
        reg_10 : &0x42::directions::Direction = Move(lcl_2)
        Drop(reg_10 : &0x42::directions::Direction)
        lcl_1 = Immediate(false)

      Label LBL_27:
        reg_12 : bool = Move(lcl_1)
        Return(reg_12 : bool)


    Function: is_vertical (entry: LBL_0)
      Label LBL_0:
        reg_0 : 0x42::directions::Direction = Move(lcl_0)
        lcl_3 = reg_0 : 0x42::directions::Direction
        reg_1 : &0x42::directions::Direction = ImmBorrow(lcl_3)
        lcl_2 = reg_1 : &0x42::directions::Direction
        reg_2 : &0x42::directions::Direction = Copy(lcl_2)
        Switch(reg_2 : &0x42::directions::Direction : 0x42::directions::Direction) Case: Up (lbl 6), Case: Down (lbl 13), Case: Left (lbl 20), Case: Right (lbl 25)

      Label LBL_6:
        reg_3 : &0x42::directions::Direction = Move(lcl_2)
        UnpackVariantImmRef<Up>(reg_3 : &0x42::directions::Direction)
        reg_4 : 0x42::directions::Direction = Move(lcl_3)
        UnpackVariant<Up>(reg_4 : 0x42::directions::Direction)
        lcl_1 = Immediate(true)
        Jump(LBL_29)

      Label LBL_13:
        reg_6 : &0x42::directions::Direction = Move(lcl_2)
        UnpackVariantImmRef<Down>(reg_6 : &0x42::directions::Direction)
        reg_7 : 0x42::directions::Direction = Move(lcl_3)
        UnpackVariant<Down>(reg_7 : 0x42::directions::Direction)
        lcl_1 = Immediate(true)
        Jump(LBL_29)

      Label LBL_20:
        reg_9 : &0x42::directions::Direction = Move(lcl_2)
        Drop(reg_9 : &0x42::directions::Direction)
        lcl_1 = Immediate(false)
        Jump(LBL_29)

      Label LBL_25:
        reg_11 : &0x42::directions::Direction = Move(lcl_2)
        Drop(reg_11 : &0x42::directions::Direction)
        lcl_1 = Immediate(false)

      Label LBL_29:
        reg_13 : bool = Move(lcl_1)
        Return(reg_13 : bool)
