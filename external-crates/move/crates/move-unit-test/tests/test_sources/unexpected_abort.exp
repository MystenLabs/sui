Running Move unit tests
[ PASS    ] 0x1::M::correct_abort_code
[ PASS    ] 0x1::M::just_test_failure
[ FAIL    ] 0x1::M::unexpected_abort
[ FAIL    ] 0x1::M::unexpected_abort_in_native_function
[ FAIL    ] 0x1::M::unexpected_abort_in_other_function
[ FAIL    ] 0x1::M::wrong_abort_code

Test failures:

Failures in 0x1::M:

┌── unexpected_abort ──────
│ error[E11001]: test failure
│   ┌─ unexpected_abort.move:5:9
│   │
│ 4 │     public fun unexpected_abort() {
│   │                ---------------- In this function in 0x1::M
│ 5 │         abort 0
│   │         ^^^^^^^ Test was not expected to error, but it aborted with code 0 originating in the module 0x1::M rooted here
│ 
│ 
└──────────────────


┌── unexpected_abort_in_native_function ──────
│ error[E11001]: test failure
│    ┌─ string.move:92:16
│    │
│ 92 │     native fun internal_sub_string(v: &vector<u8>, i: u64, j: u64): vector<u8>;
│    │                ^^^^^^^^^^^^^^^^^^^
│    │                │
│    │                Test was not expected to error, but it aborted with code 1 originating in the module std::string rooted here
│    │                In this function in std::string
│ 
│ 
│ stack trace
│ 	M::abort_in_native(tests/test_sources/unexpected_abort.move:43)
│ 	M::unexpected_abort_in_native_function(tests/test_sources/unexpected_abort.move:39)
│ 
└──────────────────


┌── unexpected_abort_in_other_function ──────
│ error[E11001]: test failure
│    ┌─ unexpected_abort.move:28:9
│    │
│ 27 │     fun abort_in_other_function() {
│    │         ----------------------- In this function in 0x1::M
│ 28 │         abort 1
│    │         ^^^^^^^ Test was not expected to error, but it aborted with code 1 originating in the module 0x1::M rooted here
│ 
│ 
│ stack trace
│ 	M::unexpected_abort_in_other_function(tests/test_sources/unexpected_abort.move:33)
│ 
└──────────────────


┌── wrong_abort_code ──────
│ error[E11001]: test failure
│    ┌─ unexpected_abort.move:11:9
│    │
│ 10 │     public fun wrong_abort_code() {
│    │                ---------------- In this function in 0x1::M
│ 11 │         abort 0
│    │         ^^^^^^^ Test did not error as expected. Expected test to abort with code 1 originating in the module 0x1::M but instead it aborted with code 0 originating in the module 0x1::M rooted here
│ 
│ 
└──────────────────

Test result: FAILED. Total tests: 6; passed: 2; failed: 4
