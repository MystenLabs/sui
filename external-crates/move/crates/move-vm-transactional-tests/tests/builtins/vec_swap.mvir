//# publish
module 0x5.M {
    import 0x1.vector;

    public new(): vector<u64> {
        let v: vector<u64>;
    label b0:
        v = vector.empty<u64>();
        vector.push_back<u64>(&mut v, 100);
        vector.push_back<u64>(&mut v, 200);
        return move(v);
    }

    public borrow_and_swap(v: &mut vector<u64>)  {
    label b0:
        vector.swap<u64>(move(v), 0, 1);
        return;
    }

    public verify_effects(v: &vector<u64>) {
    label b0:
        assert(*vector.borrow<u64>(copy(v), 0) == 200, 1000);
        assert(*vector.borrow<u64>(move(v), 1) == 100, 1001);
        return;
    }
}

//# publish
module 0x6.test {
    import 0x5.M;
    public test() {
        let v: vector<u64>;
    label b0:
        v = M.new();
        M.borrow_and_swap(&mut v);
        M.verify_effects(&v);
        return;
    }
}

//# run 0x6::test::test
