//# run
module 0x1.m {

entry foo() {
label b0:
    assert(0u256 + 0u256 == 0u256, 1000);
    assert(0u256 + 1u256 == 1u256, 1001);
    assert(1u256 + 1u256 == 2u256, 1002);

    assert(13u256 + 67u256 == 80u256, 1100);
    assert(100u256 + 10u256 == 110u256, 1101);

    assert(0u256 + 115792089237316195423570985008687907853269984665640564039457584007913129639935u256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935u256, 1200);
    assert(1u256 + 115792089237316195423570985008687907853269984665640564039457584007913129639934u256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935u256, 1201);
    assert(5u256 + 115792089237316195423570985008687907853269984665640564039457584007913129639930u256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935u256, 1202);
    return;
}

}
//# run
module 0x2.m {

entry foo() {
label b0:
    _ = 1u256 + 115792089237316195423570985008687907853269984665640564039457584007913129639935u256;
    return;
}

}
//# run
module 0x3.m {

entry foo() {
label b0:
    _ = 115792089237316195423570985008687907853269984665640564039457584007913129639932u256 + 115792089237316195423570985008687907853269984665640564039457584007913129639931u256;
    return;
}

}


//# run
module 0x4.m {

entry foo() {
label b0:
    assert(0u256 - 0u256 == 0u256, 2000);
    assert(1u256 - 0u256 == 1u256, 2001);
    assert(1u256 - 1u256 == 0u256, 2002);

    assert(52u256 - 13u256 == 39u256, 2100);
    assert(100u256 - 10u256 == 90u256, 2101);

    assert(115792089237316195423570985008687907853269984665640564039457584007913129639935u256 - 115792089237316195423570985008687907853269984665640564039457584007913129639935u256 == 0u256, 2200);
    assert(5u256 - 1u256 - 4u256 == 0u256, 2201);
    return;
}

}
//# run
module 0x5.m {

entry foo() {
label b0:
    _ = 0u256 - 1u256;
    return;
}

}
//# run
module 0x42.m {

entry foo() {
label b0:
    _ = 54u256 - 100u256;
    return;
}

}


//# run
module 0x6.m {

entry foo() {
label b0:
    assert(0u256 * 0u256 == 0u256, 3000);
    assert(1u256 * 0u256 == 0u256, 3001);
    assert(1u256 * 1u256 == 1u256, 3002);

    assert(6u256 * 7u256 == 42u256, 3100);
    assert(10u256 * 10u256 == 100u256, 3101);

    assert(57896044618658097711785492504343953926634992332820282019728792003956564819967u256 * 2u256 == 115792089237316195423570985008687907853269984665640564039457584007913129639934u256, 3200);
    return;
}

}
//# run
module 0x7.m {

entry foo() {
label b0:
    _ = 57896044618658097711785492504343953926634992332820282019728792003956564819967u256 * 57896044618658097711785492504343953926634992332820282019728792003956564819967u256;
    return;
}

}
//# run
module 0x8.m {

entry foo() {
label b0:
    _ = 57896044618658097711785492504343953926634992332820282019728792003956564819968u256 * 2u256;
    return;
}

}


//# run
module 0x9.m {

entry foo() {
label b0:
    assert(0u256 / 1u256 == 0u256, 4000);
    assert(1u256 / 1u256 == 1u256, 4001);
    assert(1u256 / 2u256 == 0u256, 4002);

    assert(6u256 / 3u256 == 2u256, 4100);
    assert(115792089237316195423570985008687907853269984665640564039457584007913129639935u256 / 4315342637539806u256 == 26832652459627105301847093122056309129973091557185267691720404u256, 4101);

    assert(115792089237316195423570985008687907853269984665640564039457584007913129639934u256 / 115792089237316195423570985008687907853269984665640564039457584007913129639935u256 == 0u256, 4200);
    assert(115792089237316195423570985008687907853269984665640564039457584007913129639935u256 / 115792089237316195423570985008687907853269984665640564039457584007913129639935u256 == 1u256, 4201);
    return;
}

}
//# run
module 0x10.m {

entry foo() {
label b0:
    _ = 0u256 / 0u256;
    return;
}

}
//# run
module 0x11.m {

entry foo() {
label b0:
    _ = 1u256 / 0u256;
    return;
}

}


//# run
module 0x12.m {

entry foo() {
label b0:
    _ = 115792089237316195423570985008687907853269984665640564039457584007913129639935u256 / 0u256;
    return;
}

}

//# run
module 0x13.m {

entry foo() {
label b0:
    assert(0u256 % 1u256 == 0u256, 5000);
    assert(1u256 % 1u256 == 0u256, 5001);
    assert(1u256 % 2u256 == 1u256, 5002);

    assert(8u256 % 3u256 == 2u256, 5100);
    assert(115792089237316195423570985008687907853269984665640564039457584007913129639935u256 % 4315342637539806u256 == 2132250957238311u256, 5101);

    assert(115792089237316195423570985008687907853269984665640564039457584007913129639934u256 % 115792089237316195423570985008687907853269984665640564039457584007913129639935u256 == 115792089237316195423570985008687907853269984665640564039457584007913129639934u256, 5200);
    assert(115792089237316195423570985008687907853269984665640564039457584007913129639935u256 % 115792089237316195423570985008687907853269984665640564039457584007913129639935u256 == 0u256, 5201);
    return;
}

}
//# run
module 0x14.m {

entry foo() {
label b0:
    _ = 0u256 % 0u256;
    return;
}

}
//# run
module 0x15.m {

entry foo() {
label b0:
    _ = 1u256 % 0u256;
    return;
}

}
//# run
module 0x16.m {

entry foo() {
label b0:
    _ = 115792089237316195423570985008687907853269984665640564039457584007913129639935u256 % 0u256;
    return;
}

}
