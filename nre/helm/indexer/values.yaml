# Default values for indexer-reader.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

command: ["/usr/local/bin/sui-indexer"]

replicaCount: 1

image:
  repository: "mysten/sui-indexer"
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # Ensure this is set to most recent sui indexer version. See github.com/MystenLabs/sui for latest releases.
  tag: "testnet-v1.27.2"


env:
  RUST_BACKTRACE:
    value: "1"
  RUST_LOG:
    value: "info,jsonrpsee=error,jsonrpsee_types=error"
  RUST_JSON_LOG:
    value: "true"
  DB_CONNECTION_TIMEOUT:
    value: "3600"
  DB_STATEMENT_TIMEOUT:
    value: "3600"
  CHECKPOINT_COMIT_BATCH_SIZE:
    value: "300"
  RPC_CLIENT:
    value: "https://public-rpc.mainnet.sui.io"
  REMOTE_STORE:
    value: "https://checkpoints.mainnet.sui.io"
  DB_URL:
    valueFrom:
      secretKeyRef:
        name: "indexer-reader-db-url-secret"
        key: "db-url"

podAnnotations:
    app: sui-indexer

resources: 
  limits:
     cpu: 4
     memory: 12Gi
  requests:
     cpu: 2
     memory: 8Gi

service:
  name: sui-indexer
  type: ClusterIP
  port: 9000
  targetPort: 9000
  protocol: TCP

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

minReadySeconds: 120
revisionHistoryLimit: 5

# rollout strategy
strategy:
  enabled: true
  type: RollingUpdate
  rollingUpdate:
    maxSurge: "25%"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: sui-indexer.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

    #livenessProbe:
    #httpGet:
    #path: /json-rpc
    #port: 9000
    #readinessProbe:
    #httpGet:
    #path: /json-rpc
    #port: 9000


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

  #nodeSelector:
  #node.kubernetes.io/instance-type: n2d-standard-16

tolerations: []

affinity: {}
