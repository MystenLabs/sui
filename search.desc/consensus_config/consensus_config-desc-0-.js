searchState.loadedDescShard("consensus_config", 0, "Represents one authority in the committee.\nEach authority is uniquely identified by its …\nAuthority key represents the identity of an authority. It …\nCommittee is the set of authorities that participate in …\nDefines algorithm and format of block and commit digests.\nCommittee of the consensus protocol is updated each epoch.\nNetwork key is used for TLS and as the network identity of …\nOperational configurations of a consensus authority.\nProtocol key is used for signing blocks and verifying …\nVoting power of an authority, roughly proportional to the …\nNetwork address for communicating with the authority.\nAnemo network settings.\nThe authority’s public key as Sui identity.\nSize of various per-connection buffers.\nThe number of rounds of blocks to be kept in the Dag state …\nPath to consensus DB for this epoch. Required when …\nSize in bytes above which network messages are considered …\nMessages over this size threshold will increment a counter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe authority’s hostname, for metrics and logging.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the provided index is valid.\nKeepalive interval and timeouts for both client and server.\nTime to wait for parent round leader before sealing a …\nCreates a committee for local testing, and the …\nMax number of blocks to fetch per commit sync request.\nMax number of blocks to fetch per block sync request. …\nMaximum forward time drift (how far in future) allowed for …\nHard message size limit for both requests and responses. …\nMinimum delay between rounds, to avoid generating too many …\nThe authority’s public key for TLS and as network …\nProposing new block is stopped when the propagation delay …\nThe authority’s public key for verifying blocks.\nReturns true if the provided stake has reached quorum …\nReturns true if the provided stake has reached validity …\nInterval in milliseconds to probe highest received rounds …\nTimeout in milliseconds for a round prober request.\nReturns number of authorities in the committee.\nVoting power of the authority in the committee.\nTime to wait during node start up until the node has …\nConverts an index to an AuthorityIndex, if valid. Returns …\nTonic network settings.\n<code>ToString::to_string</code>, but without panic on OOM.")