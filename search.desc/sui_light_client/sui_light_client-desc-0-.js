searchState.loadedDescShard("sui_light_client", 0, "Used by CommitteeTarget.\nUsed by ObjectCheckpointStatesTarget.\nA proof for specific targets. It certifies a checkpoint …\nDifferent types of proofs that can be constructed.\nUsed by ObjectsTarget &amp; EventsTarget.\nA summary of the checkpoint being certified.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe contents of the proof.\nTargets of the proof are a committee, objects, or events …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNote: The summary is enough to verify the committee. This …\nThe new committee to be verified.\nGet the new committee from the end of epoch checkpoint …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nErrors that can occur during proof construction and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA proof that state of an object o is d at checkpoint c. …\nProof for OCSTargetType::Inclusion\nThe tree of all objects updated in the checkpoint along …\nA proof that o was not updated in c. For cases where o is …\nProof for OCSTargetType::NonInclusion\nA proof about the state of an object w.r.t a checkpoint.\nA target for a proof about the state of an object w.r.t a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUsed by CommitteeTarget.\nUsed by ObjectCheckpointStatesTarget.\nA proof for specific targets. It certifies a checkpoint …\nDifferent types of proofs that can be constructed.\nUsed by ObjectsTarget &amp; EventsTarget.\nA summary of the checkpoint being certified.\nThe contents of the proof.\nTargets of the proof are a committee, objects, or events …\nNote: The summary is enough to verify the committee. This …\nThe new committee to be verified.\nGet the new committee from the end of epoch checkpoint …\nContains the error value\nContains the success value\nErrors that can occur during proof construction and …\nA proof that state of an object o is d at checkpoint c. …\nProof for OCSTargetType::Inclusion\nThe tree of all objects updated in the checkpoint along …\nA proof that o was not updated in c. For cases where o is …\nProof for OCSTargetType::NonInclusion\nA proof about the state of an object w.r.t a checkpoint.\nA target for a proof about the state of an object w.r.t a …\nA proof that provides evidence relating to a specific …\nCheckpoint contents including this transaction.\nThe effects of the transaction being certified.\nThe events of the transaction being certified.\nThe transaction being certified.\nA proof that provides evidence relating to a specific …\nCheckpoint contents including this transaction.\nThe effects of the transaction being certified.\nThe events of the transaction being certified.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe transaction being certified.\nGet the verified checkpoint sequence number for an object. …")