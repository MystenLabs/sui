searchState.loadedDescShard("sui_move", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe chain ID, if resolved. Required when the …\nWhether we are printing in base64.\nReturns the argument unchanged.\nIf true, generate struct layout schemas for all struct …\n[Mainly for testing, not recommended for production] Don’…\nCalls <code>U::from(self)</code>.\nInclude the contents of packages in dependencies that haven…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPrint the “bytecode map” (source map for disassembled …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRecord addresses (Object IDs) for where this package is …\nThe network chain identifer. Use ‘35834a8a’ for …\nThe environment to associate this package information with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe most recent address (Object ID) where this package is …\nThe original address (Object ID) where this package is …\nResolve Move.lock file path in package directory (where …\nThe version number of the published package. It is ‘1’ …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe object ID to summarize if <code>package-id</code> is present. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis function returns a result of UnitTestResult. The …")