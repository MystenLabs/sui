searchState.loadedDescShard("sui_replay", 0, "Replay multiple transactions from JSON files that contain …\nRun the replay based fuzzer\nGenerate a new network config file\nPersist sandbox state\nProfile transaction\nReplay transactions listed in a file\nReplay all transactions in a range of checkpoints\nReplay a transaction from a node state dump\nReplay all transactions in an epoch\nReplay from sandbox state file This is a completely local …\nReplay transaction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRequired config objects and versions of the config objects …\nRequired config objects and versions of the config objects …\nOptional version of the executor to use, if not specified …\nOptional version of the executor to use, if not specified …\nOptional output filepath for the profile generated by this …\nOptional protocol version to use, if not specified …\nOptional protocol version to use, if not specified …\nGiven a list of transaction digests, replay them in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf rpc_url is provided, use it. Otherwise, load the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProvides the starting transaction for a fuzz session\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFetch a transaction from the network with a specific …\nUse a random transaction from an inclusive range of …\nFetch a random transaction from the network\nUse the latest transaction from the network\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTODO: Limited set but will add more\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.")