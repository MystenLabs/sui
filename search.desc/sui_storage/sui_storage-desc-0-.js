searchState.loadedDescShard("sui_storage", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nImmutable key/value store trait for storing/retrieving …\nWritePathPendingTransactionLog is used in …\nAn iterator over blobs in a blob file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a string representation of the key type\nA TransactionKeyValueStoreTrait that falls back to a …\nImmutable key/value store trait for storing/retrieving …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvenience method for fetching single checkpoint, and …\nConvenience method for fetching single checkpoint, and …\nConvenience method for fetching single checkpoint, and …\nConvenience method for fetching single digest, and …\nConvenience method for fetching single digest, and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneric multi_get, allows implementors to get heterogenous …\nGeneric multi_get, allows implementors to get heterogenous …\nGeneric multi_get to allow implementors to get …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nDelete the object at the given location in object store\nReturn the bytes at given path in object store\nList the objects at the given path in object store\nWrite the bytes at the given location in object store\nThis function will find all child directories in the input …\nThis function will find all child directories in the input …\nThis function will find missing epoch directories in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDump all key-value pairs in the page at the given table …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpen in read only mode. No limitation on number of …\nGet key value sizes from the db Tables must be opened in …\nTry catch up with primary for all tables. This can be a …")