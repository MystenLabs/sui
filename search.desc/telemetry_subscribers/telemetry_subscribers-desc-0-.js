searchState.loadedDescShard("telemetry_subscribers", 0, "Alias for a type-erased error type.\nConfiguration for different logging/tracing options\nCrash on panic\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGlobally set a tracing subscriber suitable for testing …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOutput JSON logs.\nIf defined, write output to a file starting with this …\nLog level to set, defaults to info\nSet a panic hook\nOptional Prometheus registry - if present, all enabled …\nThis is a module that records Tokio-tracing span latencies …\nSpan level - what level of spans should be created.  Note …\nEnables Tokio Console debugging on port 6669\nAdd directive to include trace logs with provided target\nA tokio_tracing Layer that records span latencies into …\nnum_buckets must be positive &gt;= 1\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new layer, injecting latencies into the given …")