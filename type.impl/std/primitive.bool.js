(function() {
    var type_impls = Object.fromEntries([["sui_bridge",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbiDecode-for-bool\" class=\"impl\"><a href=\"#impl-AbiDecode-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AbiDecode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(bytes: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, AbiError&gt;</h4></section></summary><div class='docblock'>Decodes the ABI encoded data</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_hex\" class=\"method trait-impl\"><a href=\"#method.decode_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_hex</a>(data: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, AbiError&gt;</h4></section></summary><div class='docblock'>Decode hex encoded ABI encoded data <a>Read more</a></div></details></div></details>","AbiDecode","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbiEncode-for-bool\" class=\"impl\"><a href=\"#impl-AbiEncode-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AbiEncode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>ABI encode the type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_hex\" class=\"method trait-impl\"><a href=\"#method.encode_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_hex</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the encoded value as hex string, <em>with</em> a <code>0x</code> prefix</div></details></div></details>","AbiEncode","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbiType-for-bool\" class=\"impl\"><a href=\"#impl-AbiType-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AbiType for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.param_type\" class=\"method trait-impl\"><a href=\"#method.param_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">param_type</a>() -&gt; ParamType</h4></section></summary><div class='docblock'>The native ABI type this type represents.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.minimum_size\" class=\"method trait-impl\"><a href=\"#method.minimum_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">minimum_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>A hint of the minimum number of bytes this type takes up in the ABI.</div></details></div></details>","AbiType","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllocFrozenValue-for-bool\" class=\"impl\"><a href=\"#impl-AllocFrozenValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AllocFrozenValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.alloc_frozen_value\" class=\"method trait-impl\"><a href=\"#method.alloc_frozen_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">alloc_frozen_value</a>(self, _heap: &amp;FrozenHeap) -&gt; FrozenValue</h4></section></summary><div class='docblock'>Allocate a value in the frozen heap and return a reference to the allocated value.</div></details></div></details>","AllocFrozenValue","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllocValue%3C'v%3E-for-bool\" class=\"impl\"><a href=\"#impl-AllocValue%3C'v%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v&gt; AllocValue&lt;'v&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.alloc_value\" class=\"method trait-impl\"><a href=\"#method.alloc_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">alloc_value</a>(self, _heap: &amp;'v Heap) -&gt; Value&lt;'v&gt;</h4></section></summary><div class='docblock'>Allocate the value on a heap and return a reference to the allocated value. <a>Read more</a></div></details></div></details>","AllocValue<'v>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Allocative-for-bool\" class=\"impl\"><a href=\"#impl-Allocative-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Allocative for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.visit\" class=\"method trait-impl\"><a href=\"#method.visit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit</a>&lt;'a, 'b&gt;(&amp;self, visitor: &amp;'a mut Visitor&lt;'b&gt;)<div class=\"where\">where\n    'b: 'a,</div></h4></section></div></details>","Allocative","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-Arbitrary%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; Arbitrary&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>(u: &amp;mut Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the given unstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_take_rest\" class=\"method trait-impl\"><a href=\"#method.arbitrary_take_rest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_take_rest</a>(u: Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the entirety of the given\nunstructured data. <a>Read more</a></div></details></div></details>","Arbitrary<'a>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary-for-bool\" class=\"impl\"><a href=\"#impl-Arbitrary-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Arbitrary for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parameters\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Parameters\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Parameters</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of parameters that <a href=\"trait.Arbitrary.html#tymethod.arbitrary_with\"><code>arbitrary_with</code></a> accepts for configuration\nof the generated <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a>. Parameters must implement <a href=\"https://doc.rust-lang.org/nightly/std/default/trait.Default.html\"><code>Default</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Strategy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Strategy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Strategy</a> = Any</h4></section></summary><div class='docblock'>The type of <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> used to generate values of type <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_with\" class=\"method trait-impl\"><a href=\"#method.arbitrary_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_with</a>(\n    _args: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Arbitrary&gt;::Parameters,\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Arbitrary&gt;::Strategy</h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values of type the\nimplementing type (<code>Self</code>). The strategy is passed the arguments given\nin args. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>() -&gt; Self::Strategy</h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values\nof type the implementing type (<code>Self</code>). <a>Read more</a></div></details></div></details>","Arbitrary","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-bool\" class=\"impl\"><a href=\"#impl-AsBytes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: FromBytes,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a>Read more</a></div></details></div></details>","AsBytes","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsI256-for-bool\" class=\"impl\"><a href=\"#impl-AsI256-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsI256 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i256\" class=\"method trait-impl\"><a href=\"#method.as_i256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i256</a>(self) -&gt; I256</h4></section></summary><div class='docblock'>Perform an <code>as</code> conversion to a <a href=\"struct.I256.html\"><code>I256</code></a>.</div></details></div></details>","AsI256","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsU256-for-bool\" class=\"impl\"><a href=\"#impl-AsU256-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsU256 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u256\" class=\"method trait-impl\"><a href=\"#method.as_u256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u256</a>(self) -&gt; U256</h4></section></summary><div class='docblock'>Perform an <code>as</code> conversion to a <a href=\"struct.U256.html\"><code>U256</code></a>.</div></details></div></details>","AsU256","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-bool\" class=\"impl\"><a href=\"#impl-AsULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ULE</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_unaligned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as AsULE&gt;::ULE</h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_unaligned</a>(unaligned: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as AsULE&gt;::ULE) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a>Read more</a></div></details></div></details>","AsULE","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AtomicPrimitive-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/sync/atomic.rs.html#295\">Source</a><a href=\"#impl-AtomicPrimitive-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/trait.AtomicPrimitive.html\" title=\"trait core::sync::atomic::AtomicPrimitive\">AtomicPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AtomicInner\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/sync/atomic.rs.html#295\">Source</a><a href=\"#associatedtype.AtomicInner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/trait.AtomicPrimitive.html#associatedtype.AtomicInner\" class=\"associatedtype\">AtomicInner</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/struct.AtomicBool.html\" title=\"struct core::sync::atomic::AtomicBool\">AtomicBool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>atomic_internals</code>)</span></div></span><div class='docblock'>Temporary implementation detail.</div></details></div></details>","AtomicPrimitive","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BERDecodable-for-bool\" class=\"impl\"><a href=\"#impl-BERDecodable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BERDecodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_ber\" class=\"method trait-impl\"><a href=\"#method.decode_ber\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_ber</a>(reader: BERReader&lt;'_, '_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, ASN1Error&gt;</h4></section></summary><div class='docblock'>Reads an ASN.1 value from <code>BERReader</code> and converts it to <code>Self</code>. <a>Read more</a></div></details></div></details>","BERDecodable","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#468-471\">Source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#473\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#475\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOps-for-bool\" class=\"impl\"><a href=\"#impl-BitOps-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitOps for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.get\" class=\"method trait-impl\"><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get</a>(bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.set\" class=\"method trait-impl\"><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.first_index\" class=\"method trait-impl\"><a href=\"#method.first_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">first_index</a>(bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section><section id=\"method.bit_and\" class=\"method trait-impl\"><a href=\"#method.bit_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bit_and</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, other_bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.bit_or\" class=\"method trait-impl\"><a href=\"#method.bit_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bit_or</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, other_bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.bit_xor\" class=\"method trait-impl\"><a href=\"#method.bit_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bit_xor</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, other_bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.invert\" class=\"method trait-impl\"><a href=\"#method.invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">invert</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.make_mask\" class=\"method trait-impl\"><a href=\"#method.make_mask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">make_mask</a>(shift: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.to_hex\" class=\"method trait-impl\"><a href=\"#method.to_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_hex</a>(bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></div></details>","BitOps","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#504-507\">Source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#509\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#511\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#540-543\">Source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#545\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#547\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalDeserialize-for-bool\" class=\"impl\"><a href=\"#impl-CanonicalDeserialize-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CanonicalDeserialize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_with_mode\" class=\"method trait-impl\"><a href=\"#method.deserialize_with_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_with_mode</a>&lt;R&gt;(\n    reader: R,\n    compress: Compress,\n    validate: Validate,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></summary><div class='docblock'>The general deserialize method that takes in customization flags.</div></details><section id=\"method.deserialize_compressed\" class=\"method trait-impl\"><a href=\"#method.deserialize_compressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_compressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_compressed_unchecked\" class=\"method trait-impl\"><a href=\"#method.deserialize_compressed_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_compressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed\" class=\"method trait-impl\"><a href=\"#method.deserialize_uncompressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_uncompressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed_unchecked\" class=\"method trait-impl\"><a href=\"#method.deserialize_uncompressed_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_uncompressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></div></details>","CanonicalDeserialize","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalSerialize-for-bool\" class=\"impl\"><a href=\"#impl-CanonicalSerialize-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CanonicalSerialize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_with_mode\" class=\"method trait-impl\"><a href=\"#method.serialize_with_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_with_mode</a>&lt;W&gt;(\n    &amp;self,\n    writer: W,\n    _compress: Compress,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>The general serialize method that takes in customization flags.</div></details><section id=\"method.serialized_size\" class=\"method trait-impl\"><a href=\"#method.serialized_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialized_size</a>(&amp;self, _compress: Compress) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_compressed\" class=\"method trait-impl\"><a href=\"#method.serialize_compressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_compressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.compressed_size\" class=\"method trait-impl\"><a href=\"#method.compressed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">compressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_uncompressed\" class=\"method trait-impl\"><a href=\"#method.serialize_uncompressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_uncompressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.uncompressed_size\" class=\"method trait-impl\"><a href=\"#method.uncompressed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">uncompressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","CanonicalSerialize","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CastFrom%3Cbool%3E-for-bool\" class=\"impl\"><a href=\"#impl-CastFrom%3Cbool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CastFrom&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.cast_from\" class=\"method trait-impl\"><a href=\"#method.cast_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cast_from</a>(from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CastFrom<bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckDerConstraints-for-bool\" class=\"impl\"><a href=\"#impl-CheckDerConstraints-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CheckDerConstraints for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.check_constraints\" class=\"method trait-impl\"><a href=\"#method.check_constraints\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">check_constraints</a>(any: &amp;Any&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></div></details>","CheckDerConstraints","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedBitPattern-for-bool\" class=\"impl\"><a href=\"#impl-CheckedBitPattern-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CheckedBitPattern for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bits\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'><code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> except for\nthe possible invalid bit patterns being checked during\n<a href=\"CheckedBitPattern::is_valid_bit_pattern\"><code>is_valid_bit_pattern</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_bit_pattern\" class=\"method trait-impl\"><a href=\"#method.is_valid_bit_pattern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_valid_bit_pattern</a>(bits: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as CheckedBitPattern&gt;::Bits) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If this function returns true, then it must be valid to reinterpret <code>bits</code>\nas <code>&amp;Self</code>.</div></details></div></details>","CheckedBitPattern","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#556-561\">Source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#556-561\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-bool\" class=\"impl\"><a href=\"#impl-Contiguous-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Contiguous for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a> = 1u8</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_integer</a>(value: Self::Int) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_integer</a>(self) -&gt; Self::Int</h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a>Read more</a></div></details></div></details>","Contiguous","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DEREncodable-for-bool\" class=\"impl\"><a href=\"#impl-DEREncodable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DEREncodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_der\" class=\"method trait-impl\"><a href=\"#method.encode_der\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_der</a>(&amp;self, writer: DERWriter&lt;'_&gt;)</h4></section></summary><div class='docblock'>Writes the value as an DER-encoded ASN.1 value. <a>Read more</a></div></details></div></details>","DEREncodable","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#2687\">Source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#2689\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-bool\" class=\"impl\"><a href=\"#impl-Decodable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(rlp: &amp;Rlp&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, DecoderError&gt;</h4></section></summary><div class='docblock'>Decode a value from RLP bytes</div></details></div></details>","Decodable","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable-for-bool\" class=\"impl\"><a href=\"#impl-Decodable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>(buf: &amp;mut &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, DecodeError&gt;</h4></section></div></details>","Decodable","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-bool\" class=\"impl\"><a href=\"#impl-Decode-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/1.90.0/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details></div></details>","Decode","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-bool\" class=\"impl\"><a href=\"#impl-Decode-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DecodeValue%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-DecodeValue%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; DecodeValue&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_value\" class=\"method trait-impl\"><a href=\"#method.decode_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_value</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut R</a>, header: Header) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    R: Reader&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this message using the provided [<code>Reader</code>].</div></details></div></details>","DecodeValue<'a>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DecodeValue%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-DecodeValue%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; DecodeValue&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_value\" class=\"method trait-impl\"><a href=\"#method.decode_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_value</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut R</a>, header: Header) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    R: Reader&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this message using the provided [<code>Reader</code>].</div></details></div></details>","DecodeValue<'a>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143894\" title=\"Tracking issue for const_default\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/default.rs.html#166\">Source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/default.rs.html#166\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/impls.rs.html#70\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/impls.rs.html#71-73\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DisjointBitOr-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#impl-DisjointBitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.DisjointBitOr.html\" title=\"trait core::intrinsics::fallback::DisjointBitOr\">DisjointBitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.disjoint_bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#method.disjoint_bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.DisjointBitOr.html#tymethod.disjoint_bitor\" class=\"fn\">disjoint_bitor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span><div class='docblock'>See <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fn.disjoint_bitor.html\" title=\"fn core::intrinsics::disjoint_bitor\"><code>super::disjoint_bitor</code></a>; we just need the trait indirection to handle\ndifferent types since calling intrinsics with generics doesn’t work.</div></details></div></details>","DisjointBitOr","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#2695\">Source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#2696\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Dupe-for-bool\" class=\"impl\"><a href=\"#impl-Dupe-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Dupe for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.dupe\" class=\"method trait-impl\"><a href=\"#method.dupe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dupe</a>(&amp;self) -&gt; Self</h4></section></div></details>","Dupe","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-bool\" class=\"impl\"><a href=\"#impl-Encodable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_append\" class=\"method trait-impl\"><a href=\"#method.rlp_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_append</a>(&amp;self, s: &amp;mut RlpStream)</h4></section></summary><div class='docblock'>Append a value to the stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rlp_bytes\" class=\"method trait-impl\"><a href=\"#method.rlp_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">rlp_bytes</a>(&amp;self) -&gt; BytesMut</h4></section></summary><div class='docblock'>Get rlp-encoded bytes for this instance</div></details></div></details>","Encodable","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable-for-bool\" class=\"impl\"><a href=\"#impl-Encodable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.length\" class=\"method trait-impl\"><a href=\"#method.length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self, out: &amp;mut dyn BufMut)</h4></section></div></details>","Encodable","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-bool\" class=\"impl\"><a href=\"#impl-Encode-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a>)<div class=\"where\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-bool\" class=\"impl\"><a href=\"#impl-Encode-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a>)<div class=\"where\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeValue-for-bool\" class=\"impl\"><a href=\"#impl-EncodeValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_len\" class=\"method trait-impl\"><a href=\"#method.value_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">value_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Length, Error&gt;</h4></section></summary><div class='docblock'>Compute the length of this value (sans [<code>Tag</code>]+[<code>Length</code>] header) when\nencoded as ASN.1 DER.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value\" class=\"method trait-impl\"><a href=\"#method.encode_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_value</a>(&amp;self, writer: &amp;mut dyn Writer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Encode value (sans [<code>Tag</code>]+[<code>Length</code>] header) as ASN.1 DER using the\nprovided [<code>Writer</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header\" class=\"method trait-impl\"><a href=\"#method.header\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">header</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Header, Error&gt;<div class=\"where\">where\n    Self: Tagged,</div></h4></section></summary><div class='docblock'>Get the [<code>Header</code>] used to encode this value.</div></details></div></details>","EncodeValue","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeValue-for-bool\" class=\"impl\"><a href=\"#impl-EncodeValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_len\" class=\"method trait-impl\"><a href=\"#method.value_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">value_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Length, Error&gt;</h4></section></summary><div class='docblock'>Compute the length of this value (sans [<code>Tag</code>]+[<code>Length</code>] header) when\nencoded as ASN.1 DER.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value\" class=\"method trait-impl\"><a href=\"#method.encode_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_value</a>(&amp;self, writer: &amp;mut impl Writer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Encode value (sans [<code>Tag</code>]+[<code>Length</code>] header) as ASN.1 DER using the\nprovided [<code>Writer</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header\" class=\"method trait-impl\"><a href=\"#method.header\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">header</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Header, Error&gt;<div class=\"where\">where\n    Self: Tagged,</div></h4></section></summary><div class='docblock'>Get the [<code>Header</code>] used to encode this value.</div></details></div></details>","EncodeValue","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedTag-for-bool\" class=\"impl\"><a href=\"#impl-FixedTag-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FixedTag for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TAG\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TAG\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">TAG</a>: Tag = Tag::Boolean</h4></section></summary><div class='docblock'>ASN.1 tag</div></details></div></details>","FixedTag","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedTag-for-bool\" class=\"impl\"><a href=\"#impl-FixedTag-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FixedTag for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TAG\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TAG\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">TAG</a>: Tag = Tag::Boolean</h4></section></summary><div class='docblock'>ASN.1 tag</div></details></div></details>","FixedTag","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FmtConst-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/phf_shared/0.11/src/phf_shared/lib.rs.html#157\">Source</a><a href=\"#impl-FmtConst-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/phf_shared/0.11/phf_shared/trait.FmtConst.html\" title=\"trait phf_shared::FmtConst\">FmtConst</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_const\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/phf_shared/0.11/src/phf_shared/lib.rs.html#157\">Source</a><a href=\"#method.fmt_const\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/phf_shared/0.11/phf_shared/trait.FmtConst.html#tymethod.fmt_const\" class=\"fn\">fmt_const</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Print a <code>const</code> expression representing this value.</div></details></div></details>","FmtConst","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Freeze-for-bool\" class=\"impl\"><a href=\"#impl-Freeze-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Freeze for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Frozen\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Frozen\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Frozen</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>When type is frozen, it is frozen into this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.freeze\" class=\"method trait-impl\"><a href=\"#method.freeze\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">freeze</a>(self, _freezer: &amp;Freezer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, FreezeError&gt;</h4></section></summary><div class='docblock'>Freeze a value. The frozen value <em>must</em> be equal to the original,\nand produce the same hash. <a>Read more</a></div></details></div></details>","Freeze","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle-ng/2.5.0/src/subtle_ng/lib.rs.html#63\">Source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle-ng/2.5.0/subtle_ng/struct.Choice.html\" title=\"struct subtle_ng::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle-ng/2.5.0/src/subtle_ng/lib.rs.html#78\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle-ng/2.5.0/subtle_ng/struct.Choice.html\" title=\"struct subtle_ng::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#143\">Source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#158\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCtChoice%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CCtChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CtChoice&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(choice: CtChoice) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CtChoice>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHourBase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CHourBase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;HourBase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: HourBase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HourBase>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMonthCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CMonthCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MonthCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: MonthCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MonthCaseSensitive>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPeriodCase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CPeriodCase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PeriodCase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: PeriodCase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PeriodCase>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPeriodCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CPeriodCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PeriodCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: PeriodCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PeriodCaseSensitive>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignBehavior%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CSignBehavior%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SignBehavior&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: SignBehavior) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SignBehavior>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWeekdayCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CWeekdayCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WeekdayCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: WeekdayCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WeekdayCaseSensitive>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWeekdayOneIndexed%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CWeekdayOneIndexed%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WeekdayOneIndexed&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: WeekdayOneIndexed) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WeekdayOneIndexed>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CYearBase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CYearBase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;YearBase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: YearBase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<YearBase>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/str/traits.rs.html#859\">Source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/str/traits.rs.html#885\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>\"true\"</code> and <code>\"false\"</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/str/traits.rs.html#860\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-bool\" class=\"impl\"><a href=\"#impl-FromZeroes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeroes","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeros-for-bool\" class=\"impl\"><a href=\"#impl-FromZeros-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromZeros for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeros. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeros","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Fundamental-for-bool\" class=\"impl\"><a href=\"#impl-Fundamental-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Fundamental for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bool\" class=\"method trait-impl\"><a href=\"#method.as_bool\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bool</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests <code>self != 0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_char\" class=\"method trait-impl\"><a href=\"#method.as_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_char</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>&gt;</h4></section></summary><div class='docblock'>Represents <code>self</code> as a Unicode Scalar Value, if possible.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i8\" class=\"method trait-impl\"><a href=\"#method.as_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i8</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Performs <code>self as i8</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i16\" class=\"method trait-impl\"><a href=\"#method.as_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i16</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Performs <code>self as i16</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i32\" class=\"method trait-impl\"><a href=\"#method.as_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Performs <code>self as i32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i64\" class=\"method trait-impl\"><a href=\"#method.as_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Performs <code>self as i64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i128\" class=\"method trait-impl\"><a href=\"#method.as_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i128</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Performs <code>self as i128</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_isize\" class=\"method trait-impl\"><a href=\"#method.as_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_isize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Performs <code>self as isize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u8\" class=\"method trait-impl\"><a href=\"#method.as_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u8</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs <code>self as u8</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u16\" class=\"method trait-impl\"><a href=\"#method.as_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u16</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Performs <code>self as u16</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u32\" class=\"method trait-impl\"><a href=\"#method.as_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs <code>self as u32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u64\" class=\"method trait-impl\"><a href=\"#method.as_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs <code>self as u64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u128\" class=\"method trait-impl\"><a href=\"#method.as_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u128</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Performs <code>self as u128</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_usize\" class=\"method trait-impl\"><a href=\"#method.as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Performs <code>self as usize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f32\" class=\"method trait-impl\"><a href=\"#method.as_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_f32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Performs <code>self as f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f64\" class=\"method trait-impl\"><a href=\"#method.as_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs <code>self as f64</code>.</div></details></div></details>","Fundamental","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#845\">Source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#847\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IdentFragment-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/ident_fragment.rs.html#87\">Source</a><a href=\"#impl-IdentFragment-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.37/quote/ident_fragment/trait.IdentFragment.html\" title=\"trait quote::ident_fragment::IdentFragment\">IdentFragment</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/ident_fragment.rs.html#87\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/ident_fragment/trait.IdentFragment.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format this value as an identifier fragment.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.span\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/ident_fragment.rs.html#20\">Source</a><a href=\"#method.span\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/ident_fragment/trait.IdentFragment.html#method.span\" class=\"fn\">span</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/proc-macro2/1.0.94/proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>&gt;</h4></section></summary><div class='docblock'>Span associated with this <code>IdentFragment</code>. <a href=\"https://docs.rs/quote/1.0.37/quote/ident_fragment/trait.IdentFragment.html#method.span\">Read more</a></div></details></div></details>","IdentFragment","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBytes-for-bool\" class=\"impl\"><a href=\"#impl-IntoBytes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a><div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_bytes\" class=\"method trait-impl\"><a href=\"#method.as_mut_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_mut_bytes</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: FromBytes,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(\n    &amp;self,\n    dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(\n    &amp;self,\n    dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>dst</code>. <a>Read more</a></div></details></div></details>","IntoBytes","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.IntoDeserializer.html\" title=\"trait serde_core::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Error.html\" title=\"trait serde_core::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/value/struct.BoolDeserializer.html\" title=\"struct serde_core::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/value/struct.BoolDeserializer.html\" title=\"struct serde_core::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoResponse-for-bool\" class=\"impl\"><a href=\"#impl-IntoResponse-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoResponse for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Output.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_response\" class=\"method trait-impl\"><a href=\"#method.into_response\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_response</a>(\n    self,\n) -&gt; ResponsePayload&lt;'static, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as IntoResponse&gt;::Output&gt;</h4></section></summary><div class='docblock'>Something that can be converted into a JSON-RPC method call response.</div></details></div></details>","IntoResponse","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonSchema-for-bool\" class=\"impl\"><a href=\"#impl-JsonSchema-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl JsonSchema for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_referenceable\" class=\"method trait-impl\"><a href=\"#method.is_referenceable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_referenceable</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether JSON Schemas generated for this type should be re-used where possible using the <code>$ref</code> keyword. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_name\" class=\"method trait-impl\"><a href=\"#method.schema_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of the generated JSON Schema. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_id\" class=\"method trait-impl\"><a href=\"#method.schema_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_id</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a string that uniquely identifies the schema produced by this type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.json_schema\" class=\"method trait-impl\"><a href=\"#method.json_schema\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">json_schema</a>(_: &amp;mut SchemaGenerator) -&gt; Schema</h4></section></summary><div class='docblock'>Generates a JSON Schema for this type. <a>Read more</a></div></details></div></details>","JsonSchema","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KnownLayout-for-bool\" class=\"impl\"><a href=\"#impl-KnownLayout-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl KnownLayout for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PointerMetadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PointerMetadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PointerMetadata</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of metadata stored in a pointer to <code>Self</code>. <a>Read more</a></div></details></div></details>","KnownLayout","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-bool\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-bool\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Message-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#23\">Source</a><a href=\"#impl-Message-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html\" title=\"trait prost::message::Message\">Message</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p><code>google.protobuf.BoolValue</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#42\">Source</a><a href=\"#method.encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the encoded length of the message without a length delimiter.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#49\">Source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clears the message, resetting all fields to their default.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#46-48\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode\" class=\"fn\">encode</a>(&amp;self, buf: &amp;mut impl BufMut) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a buffer. <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#61-63\">Source</a><a href=\"#method.encode_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode_to_vec\" class=\"fn\">encode_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#74-76\">Source</a><a href=\"#method.encode_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode_length_delimited\" class=\"fn\">encode_length_delimited</a>(\n    &amp;self,\n    buf: &amp;mut impl BufMut,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a buffer. <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode_length_delimited\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#90-92\">Source</a><a href=\"#method.encode_length_delimited_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode_length_delimited_to_vec\" class=\"fn\">encode_length_delimited_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#105-107\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.decode\" class=\"fn\">decode</a>(buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer. <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#114-116\">Source</a><a href=\"#method.decode_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.decode_length_delimited\" class=\"fn\">decode_length_delimited</a>(buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from the buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#126-128\">Source</a><a href=\"#method.merge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.merge\" class=\"fn\">merge</a>(&amp;mut self, buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer, and merges it into <code>self</code>. <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.merge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#140-142\">Source</a><a href=\"#method.merge_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.merge_length_delimited\" class=\"fn\">merge_length_delimited</a>(&amp;mut self, buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from buffer, and\nmerges it into <code>self</code>.</div></details></div></details>","Message","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Name-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#55\">Source</a><a href=\"#impl-Name-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html\" title=\"trait prost::name::Name\">Name</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p><code>google.protobuf.BoolValue</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.NAME\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#56\">Source</a><a href=\"#associatedconstant.NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html#associatedconstant.NAME\" class=\"constant\">NAME</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a> = &quot;BoolValue&quot;</h4></section></summary><div class='docblock'>Simple name for this <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>.\nThis name is the same as it appears in the source .proto file, e.g. <code>FooBar</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PACKAGE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#57\">Source</a><a href=\"#associatedconstant.PACKAGE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html#associatedconstant.PACKAGE\" class=\"constant\">PACKAGE</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a> = &quot;google.protobuf&quot;</h4></section></summary><div class='docblock'>Package name this message type is contained in. They are domain-like\nand delimited by <code>.</code>, e.g. <code>google.protobuf</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_url\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#59\">Source</a><a href=\"#method.type_url\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html#method.type_url\" class=\"fn\">type_url</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Type URL for this <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>, which by default is the full name with a\nleading slash, but may also include a leading domain name, e.g.\n<code>type.googleapis.com/google.profile.Person</code>.\nThis can be used when serializing into the <code>google.protobuf.Any</code> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.full_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/name.rs.html#23\">Source</a><a href=\"#method.full_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html#method.full_name\" class=\"fn\">full_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Fully-qualified unique name for this <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>.\nIt’s prefixed with the package name and names of any parent messages,\ne.g. <code>google.rpc.BadRequest.FieldViolation</code>.\nBy default, this is the package name followed by the message name.\nFully-qualified names must be unique within a domain of Type URLs.</div></details></div></details>","Name","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1958\">Source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1960\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1974\">Source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1979\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1984\">Source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedStruct-for-bool\" class=\"impl\"><a href=\"#impl-PackedStruct-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PackedStruct for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ByteArray\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ByteArray\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ByteArray</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">1</a>]</h4></section></summary><div class='docblock'>The appropriately sized byte array into which this structure will be packed, for example [u8; 2].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pack\" class=\"method trait-impl\"><a href=\"#method.pack\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pack</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">1</a>], PackingError&gt;</h4></section></summary><div class='docblock'>Packs the structure into a byte array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack\" class=\"method trait-impl\"><a href=\"#method.unpack\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">1</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, PackingError&gt;</h4></section></summary><div class='docblock'>Unpacks the structure from a byte array.</div></details></div></details>","PackedStruct","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PackedStructInfo-for-bool\" class=\"impl\"><a href=\"#impl-PackedStructInfo-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PackedStructInfo for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.packed_bits\" class=\"method trait-impl\"><a href=\"#method.packed_bits\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">packed_bits</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Number of bits that this structure occupies when being packed.</div></details></div></details>","PackedStructInfo","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBitRef%3C'_,+M,+T,+O%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-PartialEq%3CBitRef%3C'_,+M,+T,+O%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;BitRef&lt;'_, M, T, O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    M: Mutability,\n    T: BitStore,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;BitRef&lt;'_, M, T, O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BitRef<'_, M, T, O>>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.145/src/serde_json/value/partial_eq.rs.html#97-103\">Source</a><a href=\"#impl-PartialEq%3CValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.145/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.145/src/serde_json/value/partial_eq.rs.html#97-103\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.145/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143800\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1916\">Source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1918\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1922\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1922\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1922\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1922\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PhfBorrow%3Cbool%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/phf_shared/0.11/src/phf_shared/lib.rs.html#170-185\">Source</a><a href=\"#impl-PhfBorrow%3Cbool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/phf_shared/0.11/phf_shared/trait.PhfBorrow.html\" title=\"trait phf_shared::PhfBorrow\">PhfBorrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/phf_shared/0.11/src/phf_shared/lib.rs.html#170-185\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/phf_shared/0.11/phf_shared/trait.PhfBorrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Convert a reference to <code>self</code> to a reference to the borrowed type.</div></details></div></details>","PhfBorrow<bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PhfHash-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/phf_shared/0.11/src/phf_shared/lib.rs.html#357\">Source</a><a href=\"#impl-PhfHash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/phf_shared/0.11/phf_shared/trait.PhfHash.html\" title=\"trait phf_shared::PhfHash\">PhfHash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.phf_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/phf_shared/0.11/src/phf_shared/lib.rs.html#357\">Source</a><a href=\"#method.phf_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/phf_shared/0.11/phf_shared/trait.PhfHash.html#tymethod.phf_hash\" class=\"fn\">phf_hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds the value into the state given, updating the hasher as necessary.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.phf_hash_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/phf_shared/0.11/src/phf_shared/lib.rs.html#72-74\">Source</a><a href=\"#method.phf_hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/phf_shared/0.11/phf_shared/trait.PhfHash.html#method.phf_hash_slice\" class=\"fn\">phf_hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the state provided.</div></details></div></details>","PhfHash","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtobufValue-for-bool\" class=\"impl\"><a href=\"#impl-ProtobufValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtobufValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ref</a>(&amp;self) -&gt; ReflectValueRef&lt;'_&gt;</h4></section></summary><div class='docblock'>As ref</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Convert to <code>Any</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_non_zero\" class=\"method trait-impl\"><a href=\"#method.is_non_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_non_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is value non-zero?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref_copy\" class=\"method trait-impl\"><a href=\"#method.as_ref_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ref_copy</a>(&amp;self) -&gt; ReflectValueRef&lt;'static&gt;</h4></section></summary><div class='docblock'>Return <code>ProtobufValueRef</code> if self is <code>Copy</code>. <a>Read more</a></div></details></div></details>","ProtobufValue","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtobufVarint-for-bool\" class=\"impl\"><a href=\"#impl-ProtobufVarint-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtobufVarint for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_varint\" class=\"method trait-impl\"><a href=\"#method.len_varint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len_varint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Size of self when encoded as varint.</div></details></div></details>","ProtobufVarint","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProvidesStaticType%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-ProvidesStaticType%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; ProvidesStaticType&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StaticType\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.StaticType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">StaticType</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Same type as <code>Self</code> but with lifetimes dropped to <code>'static</code>. <a>Read more</a></div></details></div></details>","ProvidesStaticType<'a>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/ser/impls.rs.html#21\">Source</a><a href=\"#impl-Serialize-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/ser/impls.rs.html#21\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SmartDisplay-for-bool\" class=\"impl\"><a href=\"#impl-SmartDisplay-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl SmartDisplay for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Metadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Metadata</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>User-provided metadata type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(&amp;self, _: FormatterOptions) -&gt; Metadata&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Compute any information needed to format the value. This must, at a minimum, determine the\nwidth of the value before any padding is added by the formatter. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter. This is the same as <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" title=\"method core::fmt::Display::fmt\"><code>Display::fmt</code></a>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_with_metadata\" class=\"method trait-impl\"><a href=\"#method.fmt_with_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt_with_metadata</a>(\n    &amp;self,\n    f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;,\n    _metadata: Metadata&lt;'_, Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter and metadata. The formatted output should have\nthe width indicated by the metadata. This is before any padding is added by the\nformatter. <a>Read more</a></div></details></div></details>","SmartDisplay","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StarlarkTypeRepr-for-bool\" class=\"impl\"><a href=\"#impl-StarlarkTypeRepr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl StarlarkTypeRepr for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Canonical\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Canonical\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Canonical</a> = &lt;StarlarkBool as StarlarkTypeRepr&gt;::Canonical</h4></section></summary><div class='docblock'>Different Rust type representing the same Starlark Type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.starlark_type_repr\" class=\"method trait-impl\"><a href=\"#method.starlark_type_repr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">starlark_type_repr</a>() -&gt; Ty</h4></section></summary><div class='docblock'>The representation of a type that a user would use verbatim in starlark type annotations</div></details></div></details>","StarlarkTypeRepr","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tabled-for-bool\" class=\"impl\"><a href=\"#impl-Tabled-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Tabled for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LENGTH\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.LENGTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">LENGTH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = 1usize</h4></section></summary><div class='docblock'>A length of fields and headers,\nwhich must be the same.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fields\" class=\"method trait-impl\"><a href=\"#method.fields\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fields</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;&gt;</h4></section></summary><div class='docblock'>Fields method must return a list of cells. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.headers\" class=\"method trait-impl\"><a href=\"#method.headers\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">headers</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;&gt;</h4></section></summary><div class='docblock'>Headers must return a list of column names.</div></details></div></details>","Tabled","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tagged-for-bool\" class=\"impl\"><a href=\"#impl-Tagged-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Tagged for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.TAG\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TAG\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">TAG</a>: Tag = Tag::Boolean</h4></section></div></details>","Tagged","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToConstraintField%3CF%3E-for-bool\" class=\"impl\"><a href=\"#impl-ToConstraintField%3CF%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; ToConstraintField&lt;F&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    F: Field,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_field_elements\" class=\"method trait-impl\"><a href=\"#method.to_field_elements\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_field_elements</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;F&gt;&gt;</h4></section></div></details>","ToConstraintField<F>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToDer-for-bool\" class=\"impl\"><a href=\"#impl-ToDer-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToDer for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_der_len\" class=\"method trait-impl\"><a href=\"#method.to_der_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_der_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, Error&gt;</h4></section></summary><div class='docblock'>Get the length of the object (including the header), when encoded</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_der_header\" class=\"method trait-impl\"><a href=\"#method.write_der_header\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_der_header</a>(\n    &amp;self,\n    writer: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, SerializeError&gt;</h4></section></summary><div class='docblock'>Attempt to write the DER header to this writer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_der_content\" class=\"method trait-impl\"><a href=\"#method.write_der_content\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_der_content</a>(\n    &amp;self,\n    writer: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, SerializeError&gt;</h4></section></summary><div class='docblock'>Attempt to write the DER content (all except header) to this writer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_der_vec\" class=\"method trait-impl\"><a href=\"#method.to_der_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_der_vec</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;, SerializeError&gt;</h4></section></summary><div class='docblock'>Write the DER encoded representation to a newly allocated <code>Vec&lt;u8&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_der_vec_raw\" class=\"method trait-impl\"><a href=\"#method.to_der_vec_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_der_vec_raw</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;, SerializeError&gt;</h4></section></summary><div class='docblock'>Similar to using <code>to_vec</code>, but uses provided values without changes.\nThis can generate an invalid encoding for a DER object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_der\" class=\"method trait-impl\"><a href=\"#method.write_der\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_der</a>(&amp;self, writer: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, SerializeError&gt;</h4></section></summary><div class='docblock'>Attempt to write the DER encoded representation (header and content) into this writer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_der_raw\" class=\"method trait-impl\"><a href=\"#method.write_der_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_der_raw</a>(&amp;self, writer: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, SerializeError&gt;</h4></section></summary><div class='docblock'>Similar to using <code>to_der</code>, but uses provided values without changes.\nThis can generate an invalid encoding for a DER object.</div></details></div></details>","ToDer","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToStatic-for-bool\" class=\"impl\"><a href=\"#impl-ToStatic-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToStatic for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Owned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Owned</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.to_static\" class=\"method trait-impl\"><a href=\"#method.to_static\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_static</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as ToStatic&gt;::Owned</h4></section></div></details>","ToStatic","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToTokens-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/proc_macro/to_tokens.rs.html#270\">Source</a><a href=\"#impl-ToTokens-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/proc_macro/to_tokens/trait.ToTokens.html\" title=\"trait proc_macro::to_tokens::ToTokens\">ToTokens</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tokens\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/proc_macro/to_tokens.rs.html#271\">Source</a><a href=\"#method.to_tokens\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/proc_macro/to_tokens/trait.ToTokens.html#tymethod.to_tokens\" class=\"fn\">to_tokens</a>(&amp;self, tokens: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>proc_macro_totokens</code>)</span></div></span><div class='docblock'>Write <code>self</code> to the given <code>TokenStream</code>. <a href=\"https://doc.rust-lang.org/1.90.0/proc_macro/to_tokens/trait.ToTokens.html#tymethod.to_tokens\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_token_stream\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/proc_macro/to_tokens.rs.html#57\">Source</a><a href=\"#method.to_token_stream\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/proc_macro/to_tokens/trait.ToTokens.html#method.to_token_stream\" class=\"fn\">to_token_stream</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>proc_macro_totokens</code>)</span></div></span><div class='docblock'>Convert <code>self</code> directly into a <code>TokenStream</code> object. <a href=\"https://doc.rust-lang.org/1.90.0/proc_macro/to_tokens/trait.ToTokens.html#method.to_token_stream\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_token_stream\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/proc_macro/to_tokens.rs.html#67-69\">Source</a><a href=\"#method.into_token_stream\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/proc_macro/to_tokens/trait.ToTokens.html#method.into_token_stream\" class=\"fn\">into_token_stream</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>proc_macro_totokens</code>)</span></div></span><div class='docblock'>Convert <code>self</code> directly into a <code>TokenStream</code> object. <a href=\"https://doc.rust-lang.org/1.90.0/proc_macro/to_tokens/trait.ToTokens.html#method.into_token_stream\">Read more</a></div></details></div></details>","ToTokens","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToTokens-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/to_tokens.rs.html#218\">Source</a><a href=\"#impl-ToTokens-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tokens\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/to_tokens.rs.html#219\">Source</a><a href=\"#method.to_tokens\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#tymethod.to_tokens\" class=\"fn\">to_tokens</a>(&amp;self, tokens: &amp;mut <a class=\"struct\" href=\"https://docs.rs/proc-macro2/1.0.94/proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>)</h4></section></summary><div class='docblock'>Write <code>self</code> to the given <code>TokenStream</code>. <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#tymethod.to_tokens\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_token_stream\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/to_tokens.rs.html#60\">Source</a><a href=\"#method.to_token_stream\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#method.to_token_stream\" class=\"fn\">to_token_stream</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/proc-macro2/1.0.94/proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a></h4></section></summary><div class='docblock'>Convert <code>self</code> directly into a <code>TokenStream</code> object. <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#method.to_token_stream\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_token_stream\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/quote/1.0.37/src/quote/to_tokens.rs.html#70-72\">Source</a><a href=\"#method.into_token_stream\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#method.into_token_stream\" class=\"fn\">into_token_stream</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/proc-macro2/1.0.94/proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert <code>self</code> directly into a <code>TokenStream</code> object. <a href=\"https://docs.rs/quote/1.0.37/quote/to_tokens/trait.ToTokens.html#method.into_token_stream\">Read more</a></div></details></div></details>","ToTokens","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tokenizable-for-bool\" class=\"impl\"><a href=\"#impl-Tokenizable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Tokenizable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_token\" class=\"method trait-impl\"><a href=\"#method.from_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_token</a>(token: Token) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, InvalidOutputType&gt;</h4></section></summary><div class='docblock'>Converts a <code>Token</code> into expected type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_token\" class=\"method trait-impl\"><a href=\"#method.into_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_token</a>(self) -&gt; Token</h4></section></summary><div class='docblock'>Converts a specified type back into token.</div></details></div></details>","Tokenizable","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Trace%3C'v%3E-for-bool\" class=\"impl\"><a href=\"#impl-Trace%3C'v%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v&gt; Trace&lt;'v&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace\" class=\"method trait-impl\"><a href=\"#method.trace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">trace</a>(&amp;mut self, _tracer: &amp;Tracer&lt;'v&gt;)</h4></section></summary><div class='docblock'>Recursively “trace” the value. <a>Read more</a></div></details></div></details>","Trace<'v>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26Any%3C'a%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26Any%3C'a%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'b Any&lt;'a&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: &amp;'b Any&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'b Any<'a>>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAny%3C'a%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CAny%3C'a%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Any&lt;'a&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: Any&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Any<'a>>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;AnyRef&lt;'_&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: AnyRef&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<AnyRef<'_>>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;AnyRef&lt;'_&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: AnyRef&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<AnyRef<'_>>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFromBytes-for-bool\" class=\"impl\"><a href=\"#impl-TryFromBytes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TryFromBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_bytes</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_prefix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_suffix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_bytes_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code> with a DST length\nequal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_prefix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;Self</code> with\na DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_suffix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;Self</code> with\na DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_bytes_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> with a DST\nlength equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_prefix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;mut Self</code>\nwith a DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_suffix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;mut Self</code>\nwith a DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_read_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read the given <code>source</code> as a <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read a <code>Self</code> from the prefix of the given <code>source</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self), ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read a <code>Self</code> from the suffix of the given <code>source</code>. <a>Read more</a></div></details></div></details>","TryFromBytes","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-bool\" class=\"impl\"><a href=\"#impl-TypeInfo-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TypeInfo for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ULE-for-bool\" class=\"impl\"><a href=\"#impl-ULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_byte_slice\" class=\"method trait-impl\"><a href=\"#method.validate_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, ZeroVecError&gt;</h4></section></summary><div class='docblock'>Validates a byte slice, <code>&amp;[u8]</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_byte_slice\" class=\"method trait-impl\"><a href=\"#method.parse_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[Self], ZeroVecError&gt;</h4></section></summary><div class='docblock'>Parses a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_slice_unchecked\" class=\"method trait-impl\"><a href=\"#method.from_byte_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">from_byte_slice_unchecked</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; &amp;[Self]</h4></section></summary><div class='docblock'>Takes a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime, assuming\nthat this byte slice has previously been run through [<code>Self::parse_byte_slice()</code>] with\nsuccess. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice\" class=\"method trait-impl\"><a href=\"#method.as_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_byte_slice</a>(slice: &amp;[Self]) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Given <code>&amp;[Self]</code>, returns a <code>&amp;[u8]</code> with the same lifetime. <a>Read more</a></div></details></div></details>","ULE","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnpackValue%3C'_%3E-for-bool\" class=\"impl\"><a href=\"#impl-UnpackValue%3C'_%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl UnpackValue&lt;'_&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a></h4></section></summary><div class='docblock'>Error returned when type matches, but conversion fails. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_value_impl\" class=\"method trait-impl\"><a href=\"#method.unpack_value_impl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack_value_impl</a>(\n    value: Value&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt;, &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as UnpackValue&lt;'_&gt;&gt;::Error&gt;</h4></section></summary><div class='docblock'>Given a [<code>Value</code>], try and unpack it into the given type,\nwhich may involve some element of conversion. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_value\" class=\"method trait-impl\"><a href=\"#method.unpack_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack_value</a>(value: Value&lt;'v&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;, Error&gt;</h4></section></summary><div class='docblock'>Given a [<code>Value</code>], try and unpack it into the given type,\nwhich may involve some element of conversion. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_value_opt\" class=\"method trait-impl\"><a href=\"#method.unpack_value_opt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack_value_opt</a>(value: Value&lt;'v&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<div class=\"where\">where\n    Self::Error: UnpackValueErrorInfallible,</div></h4></section></summary><div class='docblock'>Unpack a value if unpacking is infallible.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_value_err\" class=\"method trait-impl\"><a href=\"#method.unpack_value_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack_value_err</a>(value: Value&lt;'v&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.85/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Unpack a value, but return error instead of <code>None</code> if unpacking fails.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_param\" class=\"method trait-impl\"><a href=\"#method.unpack_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack_param</a>(value: Value&lt;'v&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.85/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Unpack value, but instead of <code>None</code> return error about incorrect argument type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_named_param\" class=\"method trait-impl\"><a href=\"#method.unpack_named_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">unpack_named_param</a>(value: Value&lt;'v&gt;, param_name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.85/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Unpack value, but instead of <code>None</code> return error about incorrect named argument type.</div></details></div></details>","UnpackValue<'_>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Valid-for-bool\" class=\"impl\"><a href=\"#impl-Valid-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Valid for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.check\" class=\"method trait-impl\"><a href=\"#method.check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">check</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;</h4></section><section id=\"method.batch_check\" class=\"method trait-impl\"><a href=\"#method.batch_check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_check</a>&lt;'a&gt;(\n    batch: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Self&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    Self: 'a,</div></h4></section></div></details>","Valid","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-bool\" class=\"impl\"><a href=\"#impl-Value-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Value for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, key: &amp;Field, visitor: &amp;mut dyn Visit)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValueParserFactory-for-bool\" class=\"impl\"><a href=\"#impl-ValueParserFactory-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ValueParserFactory for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parser\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Parser\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Parser</a> = ValueParser</h4></section></summary><div class='docblock'>Generated parser, usually [<code>ValueParser</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_parser\" class=\"method trait-impl\"><a href=\"#method.value_parser\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">value_parser</a>() -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as ValueParserFactory&gt;::Parser</h4></section></summary><div class='docblock'>Create the specified [<code>Self::Parser</code>]</div></details></div></details>","ValueParserFactory","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-Yokeable%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; Yokeable&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform</a>(&amp;self) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Yokeable&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform_owned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Yokeable&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">make</a>(this: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Yokeable&lt;'a&gt;&gt;::Output) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Yokeable&lt;'a&gt;&gt;::Output),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a>Read more</a></div></details></div></details>","Yokeable<'a>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'a,+bool%3E-for-bool\" class=\"impl\"><a href=\"#impl-ZeroFrom%3C'a,+bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; ZeroFrom&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero_from</a>(this: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'a, bool>","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-bool\" class=\"impl\"><a href=\"#impl-Zeroable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.90.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","sui_bridge::types::IsBridgePaused"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#3\">Source</a><a href=\"#impl-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_some\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.62.0\">1.62.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#33\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#tymethod.then_some\" class=\"fn\">then_some</a>&lt;T&gt;(self, t: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(t)</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>None</code> otherwise.</p>\n<p>Arguments passed to <code>then_some</code> are eagerly evaluated; if you are\npassing the result of a function call, it is recommended to use\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#method.then\" title=\"method bool::then\"><code>then</code></a>, which is lazily evaluated.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.then_some(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.then_some(<span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>function_with_side_effects = || { a += <span class=\"number\">1</span>; };\n\n<span class=\"bool-val\">true</span>.then_some(function_with_side_effects());\n<span class=\"bool-val\">false</span>.then_some(function_with_side_effects());\n\n<span class=\"comment\">// `a` is incremented twice because the value passed to `then_some` is\n// evaluated eagerly.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#61\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#tymethod.then\" class=\"fn\">then</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(f())</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>None</code> otherwise.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.then(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.then(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n\n<span class=\"bool-val\">true</span>.then(|| { a += <span class=\"number\">1</span>; });\n<span class=\"bool-val\">false</span>.then(|| { a += <span class=\"number\">1</span>; });\n\n<span class=\"comment\">// `a` is incremented once because the closure is evaluated lazily by\n// `then`.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#98\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#tymethod.ok_or\" class=\"fn\">ok_or</a>&lt;E&gt;(self, err: E) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, E&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bool_to_result</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>Ok(())</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>Err(err)</code> otherwise.</p>\n<p>Arguments passed to <code>ok_or</code> are eagerly evaluated; if you are\npassing the result of a function call, it is recommended to use\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#method.ok_or_else\" title=\"method bool::ok_or_else\"><code>ok_or_else</code></a>, which is lazily evaluated.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bool_to_result)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(()));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bool_to_result)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>function_with_side_effects = || { a += <span class=\"number\">1</span>; };\n\n<span class=\"macro\">assert!</span>(<span class=\"bool-val\">true</span>.ok_or(function_with_side_effects()).is_ok());\n<span class=\"macro\">assert!</span>(<span class=\"bool-val\">false</span>.ok_or(function_with_side_effects()).is_err());\n\n<span class=\"comment\">// `a` is incremented twice because the value passed to `ok_or` is\n// evaluated eagerly.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or_else\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#128\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#tymethod.ok_or_else\" class=\"fn\">ok_or_else</a>&lt;E, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; E,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bool_to_result</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>Ok(())</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>Err(f())</code> otherwise.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bool_to_result)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(()));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bool_to_result)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n\n<span class=\"macro\">assert!</span>(<span class=\"bool-val\">true</span>.ok_or_else(|| { a += <span class=\"number\">1</span>; }).is_ok());\n<span class=\"macro\">assert!</span>(<span class=\"bool-val\">false</span>.ok_or_else(|| { a += <span class=\"number\">1</span>; }).is_err());\n\n<span class=\"comment\">// `a` is incremented once because the closure is evaluated lazily by\n// `ok_or_else`.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">1</span>);</code></pre></div>\n</div></details></div></details>",0,"sui_bridge::types::IsBridgePaused"],["<section id=\"impl-AbiArrayType-for-bool\" class=\"impl\"><a href=\"#impl-AbiArrayType-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AbiArrayType for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","AbiArrayType","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-BitOps-for-bool\" class=\"impl\"><a href=\"#impl-BitOps-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitOps for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","BitOps","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-ConstEncodedLen-for-bool\" class=\"impl\"><a href=\"#impl-ConstEncodedLen-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ConstEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","ConstEncodedLen","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-ConstParamTy_-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#1116-1125\">Source</a><a href=\"#impl-ConstParamTy_-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.ConstParamTy_.html\" title=\"trait core::marker::ConstParamTy_\">ConstParamTy_</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy_","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#483-493\">Source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Copy","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-DefaultIsZeroes-for-bool\" class=\"impl\"><a href=\"#impl-DefaultIsZeroes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DefaultIsZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","DefaultIsZeroes","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-DerAutoDerive-for-bool\" class=\"impl\"><a href=\"#impl-DerAutoDerive-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DerAutoDerive for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","DerAutoDerive","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-EncodeLike-for-bool\" class=\"impl\"><a href=\"#impl-EncodeLike-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","EncodeLike","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-EncodeLike-for-bool\" class=\"impl\"><a href=\"#impl-EncodeLike-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","EncodeLike","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1847\">Source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Eq","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-EqULE-for-bool\" class=\"impl\"><a href=\"#impl-EqULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EqULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","EqULE","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-Format-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.15.1/src/serde_with/formats.rs.html#30-59\">Source</a><a href=\"#impl-Format-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_with/3.15.1/serde_with/formats/trait.Format.html\" title=\"trait serde_with::formats::Format\">Format</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p>Serialize into a bool</p>\n</div></section>","Format","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-Immutable-for-bool\" class=\"impl\"><a href=\"#impl-Immutable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Immutable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Immutable","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-NoUninit-for-bool\" class=\"impl\"><a href=\"#impl-NoUninit-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl NoUninit for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","NoUninit","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#266-278\">Source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-TokenizableItem-for-bool\" class=\"impl\"><a href=\"#impl-TokenizableItem-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TokenizableItem for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","TokenizableItem","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-Unaligned-for-bool\" class=\"impl\"><a href=\"#impl-Unaligned-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Unaligned for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Unaligned","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-Unaligned-for-bool\" class=\"impl\"><a href=\"#impl-Unaligned-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Unaligned for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Unaligned","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-UnsizedConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#1127-1140\">Source</a><a href=\"#impl-UnsizedConstParamTy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.UnsizedConstParamTy.html\" title=\"trait core::marker::UnsizedConstParamTy\">UnsizedConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","UnsizedConstParamTy","sui_bridge::types::IsBridgePaused"],["<section id=\"impl-UseCloned-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#275-280\">Source</a><a href=\"#impl-UseCloned-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.UseCloned.html\" title=\"trait core::clone::UseCloned\">UseCloned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","UseCloned","sui_bridge::types::IsBridgePaused"]]],["sui_types",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-Arbitrary%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; Arbitrary&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>(u: &amp;mut Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the given unstructured data. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_take_rest\" class=\"method trait-impl\"><a href=\"#method.arbitrary_take_rest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_take_rest</a>(u: Unstructured&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the entirety of the given\nunstructured data. <a>Read more</a></div></details></div></details>","Arbitrary<'a>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary-for-bool\" class=\"impl\"><a href=\"#impl-Arbitrary-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Arbitrary for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parameters\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Parameters\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Parameters</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of parameters that <a href=\"trait.Arbitrary.html#tymethod.arbitrary_with\"><code>arbitrary_with</code></a> accepts for configuration\nof the generated <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a>. Parameters must implement <a href=\"https://doc.rust-lang.org/nightly/std/default/trait.Default.html\"><code>Default</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Strategy\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Strategy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Strategy</a> = Any</h4></section></summary><div class='docblock'>The type of <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> used to generate values of type <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_with\" class=\"method trait-impl\"><a href=\"#method.arbitrary_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary_with</a>(\n    _args: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Arbitrary&gt;::Parameters,\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Arbitrary&gt;::Strategy</h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values of type the\nimplementing type (<code>Self</code>). The strategy is passed the arguments given\nin args. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">arbitrary</a>() -&gt; Self::Strategy</h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values\nof type the implementing type (<code>Self</code>). <a>Read more</a></div></details></div></details>","Arbitrary","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsBytes-for-bool\" class=\"impl\"><a href=\"#impl-AsBytes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes_mut\" class=\"method trait-impl\"><a href=\"#method.as_bytes_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: FromBytes,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>bytes</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(&amp;self, bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>bytes</code>. <a>Read more</a></div></details></div></details>","AsBytes","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsI256-for-bool\" class=\"impl\"><a href=\"#impl-AsI256-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsI256 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i256\" class=\"method trait-impl\"><a href=\"#method.as_i256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i256</a>(self) -&gt; I256</h4></section></summary><div class='docblock'>Perform an <code>as</code> conversion to a <a href=\"struct.I256.html\"><code>I256</code></a>.</div></details></div></details>","AsI256","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci128%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci128%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i128>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci16%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci16%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i16>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci32%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci32%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i32>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci64%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci64%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i64>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Ci8%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Ci8%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<i8>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cisize%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cisize%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<isize>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu128%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu128%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u128>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu16%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu16%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u16>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu32%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu32%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u32>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu64%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu64%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u64>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cu8%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cu8%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<u8>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsPrimitive%3Cusize%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#impl-AsPrimitive%3Cusize%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/cast.rs.html#778\">Source</a><a href=\"#method.as_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.AsPrimitive.html#tymethod.as_\" class=\"fn\">as_</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Convert a value to another, using the <code>as</code> operator.</div></details></div></details>","AsPrimitive<usize>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsU256-for-bool\" class=\"impl\"><a href=\"#impl-AsU256-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsU256 for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u256\" class=\"method trait-impl\"><a href=\"#method.as_u256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u256</a>(self) -&gt; U256</h4></section></summary><div class='docblock'>Perform an <code>as</code> conversion to a <a href=\"struct.U256.html\"><code>U256</code></a>.</div></details></div></details>","AsU256","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsULE-for-bool\" class=\"impl\"><a href=\"#impl-AsULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl AsULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ULE\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ULE\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">ULE</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The ULE type corresponding to <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_unaligned\" class=\"method trait-impl\"><a href=\"#method.to_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_unaligned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as AsULE&gt;::ULE</h4></section></summary><div class='docblock'>Converts from <code>Self</code> to <code>Self::ULE</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_unaligned\" class=\"method trait-impl\"><a href=\"#method.from_unaligned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_unaligned</a>(unaligned: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as AsULE&gt;::ULE) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts from <code>Self::ULE</code> to <code>Self</code>. <a>Read more</a></div></details></div></details>","AsULE","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AtomicPrimitive-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/sync/atomic.rs.html#295\">Source</a><a href=\"#impl-AtomicPrimitive-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/trait.AtomicPrimitive.html\" title=\"trait core::sync::atomic::AtomicPrimitive\">AtomicPrimitive</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AtomicInner\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/sync/atomic.rs.html#295\">Source</a><a href=\"#associatedtype.AtomicInner\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/trait.AtomicPrimitive.html#associatedtype.AtomicInner\" class=\"associatedtype\">AtomicInner</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/sync/atomic/struct.AtomicBool.html\" title=\"struct core::sync::atomic::AtomicBool\">AtomicBool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>atomic_internals</code>)</span></div></span><div class='docblock'>Temporary implementation detail.</div></details></div></details>","AtomicPrimitive","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BERDecodable-for-bool\" class=\"impl\"><a href=\"#impl-BERDecodable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BERDecodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_ber\" class=\"method trait-impl\"><a href=\"#method.decode_ber\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_ber</a>(reader: BERReader&lt;'_, '_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, ASN1Error&gt;</h4></section></summary><div class='docblock'>Reads an ASN.1 value from <code>BERReader</code> and converts it to <code>Self</code>. <a>Read more</a></div></details></div></details>","BERDecodable","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a></span><a href=\"#impl-BitAnd%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<&bool>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#468-471\">Source</a><a href=\"#impl-BitAnd%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#473\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#475\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Mask<T, N>>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a></span><a href=\"#impl-BitAnd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#178\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a></span><a href=\"#impl-BitAndAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<&bool>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a></span><a href=\"#impl-BitAndAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#726\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOps-for-bool\" class=\"impl\"><a href=\"#impl-BitOps-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitOps for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.get\" class=\"method trait-impl\"><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get</a>(bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.set\" class=\"method trait-impl\"><a href=\"#method.set\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">set</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.first_index\" class=\"method trait-impl\"><a href=\"#method.first_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">first_index</a>(bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section><section id=\"method.bit_and\" class=\"method trait-impl\"><a href=\"#method.bit_and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bit_and</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, other_bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.bit_or\" class=\"method trait-impl\"><a href=\"#method.bit_or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bit_or</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, other_bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.bit_xor\" class=\"method trait-impl\"><a href=\"#method.bit_xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">bit_xor</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, other_bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.invert\" class=\"method trait-impl\"><a href=\"#method.invert\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">invert</a>(bits: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section><section id=\"method.make_mask\" class=\"method trait-impl\"><a href=\"#method.make_mask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">make_mask</a>(shift: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.to_hex\" class=\"method trait-impl\"><a href=\"#method.to_hex\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_hex</a>(bits: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></div></details>","BitOps","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a></span><a href=\"#impl-BitOr%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<&bool>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#504-507\">Source</a><a href=\"#impl-BitOr%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#509\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#511\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Mask<T, N>>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a></span><a href=\"#impl-BitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#278\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a></span><a href=\"#impl-BitOrAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<&bool>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a></span><a href=\"#impl-BitOrAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#797\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a></span><a href=\"#impl-BitXor%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<&bool>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#540-543\">Source</a><a href=\"#impl-BitXor%3CMask%3CT,+N%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/trait.MaskElement.html\" title=\"trait core::core_simd::masks::MaskElement\">MaskElement</a>,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/struct.LaneCount.html\" title=\"struct core::core_simd::lane_count::LaneCount\">LaneCount</a>&lt;N&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/lane_count/trait.SupportedLaneCount.html\" title=\"trait core::core_simd::lane_count::SupportedLaneCount\">SupportedLaneCount</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#545\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/portable-simd/crates/core_simd/src/masks.rs.html#547\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, rhs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/core_simd/masks/struct.Mask.html\" title=\"struct core::core_simd::masks::Mask\">Mask</a>&lt;T, N&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" title=\"type core::ops::bit::BitXor::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor<Mask<T, N>>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a></span><a href=\"#impl-BitXor-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#378\">Source</a><a href=\"#method.bitxor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the <code>^</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXor.html#tymethod.bitxor\">Read more</a></div></details></div></details>","BitXor","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.22.0\">1.22.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a></span><a href=\"#impl-BitXorAssign%3C%26bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign<&bool>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.8.0\">1.8.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a></span><a href=\"#impl-BitXorAssign-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#868\">Source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Performs the <code>^=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitXorAssign.html#tymethod.bitxor_assign\">Read more</a></div></details></div></details>","BitXorAssign","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalDeserialize-for-bool\" class=\"impl\"><a href=\"#impl-CanonicalDeserialize-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CanonicalDeserialize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_with_mode\" class=\"method trait-impl\"><a href=\"#method.deserialize_with_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_with_mode</a>&lt;R&gt;(\n    reader: R,\n    compress: Compress,\n    validate: Validate,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></summary><div class='docblock'>The general deserialize method that takes in customization flags.</div></details><section id=\"method.deserialize_compressed\" class=\"method trait-impl\"><a href=\"#method.deserialize_compressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_compressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_compressed_unchecked\" class=\"method trait-impl\"><a href=\"#method.deserialize_compressed_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_compressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed\" class=\"method trait-impl\"><a href=\"#method.deserialize_uncompressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_uncompressed</a>&lt;R&gt;(reader: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section><section id=\"method.deserialize_uncompressed_unchecked\" class=\"method trait-impl\"><a href=\"#method.deserialize_uncompressed_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deserialize_uncompressed_unchecked</a>&lt;R&gt;(\n    reader: R,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, SerializationError&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></div></details>","CanonicalDeserialize","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CanonicalSerialize-for-bool\" class=\"impl\"><a href=\"#impl-CanonicalSerialize-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CanonicalSerialize for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_with_mode\" class=\"method trait-impl\"><a href=\"#method.serialize_with_mode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_with_mode</a>&lt;W&gt;(\n    &amp;self,\n    writer: W,\n    _compress: Compress,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>The general serialize method that takes in customization flags.</div></details><section id=\"method.serialized_size\" class=\"method trait-impl\"><a href=\"#method.serialized_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialized_size</a>(&amp;self, _compress: Compress) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_compressed\" class=\"method trait-impl\"><a href=\"#method.serialize_compressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_compressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.compressed_size\" class=\"method trait-impl\"><a href=\"#method.compressed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">compressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.serialize_uncompressed\" class=\"method trait-impl\"><a href=\"#method.serialize_uncompressed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serialize_uncompressed</a>&lt;W&gt;(&amp;self, writer: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section><section id=\"method.uncompressed_size\" class=\"method trait-impl\"><a href=\"#method.uncompressed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">uncompressed_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></div></details>","CanonicalSerialize","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CastFrom%3Cbool%3E-for-bool\" class=\"impl\"><a href=\"#impl-CastFrom%3Cbool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CastFrom&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.cast_from\" class=\"method trait-impl\"><a href=\"#method.cast_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">cast_from</a>(from: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></div></details>","CastFrom<bool>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckDerConstraints-for-bool\" class=\"impl\"><a href=\"#impl-CheckDerConstraints-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CheckDerConstraints for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.check_constraints\" class=\"method trait-impl\"><a href=\"#method.check_constraints\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">check_constraints</a>(any: &amp;Any&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></div></details>","CheckDerConstraints","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CheckedBitPattern-for-bool\" class=\"impl\"><a href=\"#impl-CheckedBitPattern-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl CheckedBitPattern for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bits\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Bits\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bits</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'><code>Self</code> <em>must</em> have the same layout as the specified <code>Bits</code> except for\nthe possible invalid bit patterns being checked during\n<a href=\"CheckedBitPattern::is_valid_bit_pattern\"><code>is_valid_bit_pattern</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid_bit_pattern\" class=\"method trait-impl\"><a href=\"#method.is_valid_bit_pattern\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_valid_bit_pattern</a>(bits: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as CheckedBitPattern&gt;::Bits) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If this function returns true, then it must be valid to reinterpret <code>bits</code>\nas <code>&amp;Self</code>.</div></details></div></details>","CheckedBitPattern","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#556-561\">Source</a></span><a href=\"#impl-Clone-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#556-561\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Contiguous-for-bool\" class=\"impl\"><a href=\"#impl-Contiguous-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Contiguous for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a> = 1u8</h4></section></summary><div class='docblock'>The upper <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_VALUE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_VALUE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_VALUE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a> = 0u8</h4></section></summary><div class='docblock'>The lower <em>inclusive</em> bound for valid instances of this type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Int\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Int\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Int</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The primitive integer type with an identical representation to this\ntype. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_integer\" class=\"method trait-impl\"><a href=\"#method.from_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_integer</a>(value: Self::Int) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>If <code>value</code> is within the range for valid instances of this type,\nreturns <code>Some(converted_value)</code>, otherwise, returns <code>None</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_integer\" class=\"method trait-impl\"><a href=\"#method.into_integer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_integer</a>(self) -&gt; Self::Int</h4></section></summary><div class='docblock'>Perform the conversion from <code>C</code> into the underlying integral type. This\nmostly exists otherwise generic code would need unsafe for the <code>value as integer</code> <a>Read more</a></div></details></div></details>","Contiguous","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DEREncodable-for-bool\" class=\"impl\"><a href=\"#impl-DEREncodable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DEREncodable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_der\" class=\"method trait-impl\"><a href=\"#method.encode_der\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_der</a>(&amp;self, writer: DERWriter&lt;'_&gt;)</h4></section></summary><div class='docblock'>Writes the value as an DER-encoded ASN.1 value. <a>Read more</a></div></details></div></details>","DEREncodable","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#2687\">Source</a></span><a href=\"#impl-Debug-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#2689\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-bool\" class=\"impl\"><a href=\"#impl-Decode-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Decode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DecodeValue%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-DecodeValue%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; DecodeValue&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_value\" class=\"method trait-impl\"><a href=\"#method.decode_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_value</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut R</a>, header: Header) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    R: Reader&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this message using the provided [<code>Reader</code>].</div></details></div></details>","DecodeValue<'a>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DecodeValue%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-DecodeValue%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; DecodeValue&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_value\" class=\"method trait-impl\"><a href=\"#method.decode_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_value</a>&lt;R&gt;(reader: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut R</a>, header: Header) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;<div class=\"where\">where\n    R: Reader&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Attempt to decode this message using the provided [<code>Reader</code>].</div></details></div></details>","DecodeValue<'a>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143894\" title=\"Tracking issue for const_default\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/default.rs.html#166\">Source</a></span><a href=\"#impl-Default-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/default.rs.html#166\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns the default value of <code>false</code></p>\n</div></details></div></details>","Default","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/impls.rs.html#70\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/impls.rs.html#71-73\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DisjointBitOr-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#impl-DisjointBitOr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.DisjointBitOr.html\" title=\"trait core::intrinsics::fallback::DisjointBitOr\">DisjointBitOr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.disjoint_bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/intrinsics/fallback.rs.html#146-150\">Source</a><a href=\"#method.disjoint_bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fallback/trait.DisjointBitOr.html#tymethod.disjoint_bitor\" class=\"fn\">disjoint_bitor</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>core_intrinsics_fallbacks</code>)</span></div></span><div class='docblock'>See <a href=\"https://doc.rust-lang.org/1.90.0/core/intrinsics/fn.disjoint_bitor.html\" title=\"fn core::intrinsics::disjoint_bitor\"><code>super::disjoint_bitor</code></a>; we just need the trait indirection to handle\ndifferent types since calling intrinsics with generics doesn’t work.</div></details></div></details>","DisjointBitOr","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#2695\">Source</a></span><a href=\"#impl-Display-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#2696\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-bool\" class=\"impl\"><a href=\"#impl-Encode-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Encode for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;R, F&gt;(&amp;self, f: F) -&gt; R<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; R,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;T&gt;(&amp;self, dest: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a>)<div class=\"where\">where\n    T: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeValue-for-bool\" class=\"impl\"><a href=\"#impl-EncodeValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_len\" class=\"method trait-impl\"><a href=\"#method.value_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">value_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Length, Error&gt;</h4></section></summary><div class='docblock'>Compute the length of this value (sans [<code>Tag</code>]+[<code>Length</code>] header) when\nencoded as ASN.1 DER.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value\" class=\"method trait-impl\"><a href=\"#method.encode_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_value</a>(&amp;self, writer: &amp;mut dyn Writer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Encode value (sans [<code>Tag</code>]+[<code>Length</code>] header) as ASN.1 DER using the\nprovided [<code>Writer</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header\" class=\"method trait-impl\"><a href=\"#method.header\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">header</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Header, Error&gt;<div class=\"where\">where\n    Self: Tagged,</div></h4></section></summary><div class='docblock'>Get the [<code>Header</code>] used to encode this value.</div></details></div></details>","EncodeValue","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EncodeValue-for-bool\" class=\"impl\"><a href=\"#impl-EncodeValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_len\" class=\"method trait-impl\"><a href=\"#method.value_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">value_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Length, Error&gt;</h4></section></summary><div class='docblock'>Compute the length of this value (sans [<code>Tag</code>]+[<code>Length</code>] header) when\nencoded as ASN.1 DER.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_value\" class=\"method trait-impl\"><a href=\"#method.encode_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_value</a>(&amp;self, writer: &amp;mut impl Writer) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, Error&gt;</h4></section></summary><div class='docblock'>Encode value (sans [<code>Tag</code>]+[<code>Length</code>] header) as ASN.1 DER using the\nprovided [<code>Writer</code>].</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header\" class=\"method trait-impl\"><a href=\"#method.header\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">header</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Header, Error&gt;<div class=\"where\">where\n    Self: Tagged,</div></h4></section></summary><div class='docblock'>Get the [<code>Header</code>] used to encode this value.</div></details></div></details>","EncodeValue","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedTag-for-bool\" class=\"impl\"><a href=\"#impl-FixedTag-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FixedTag for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TAG\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TAG\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">TAG</a>: Tag = Tag::Boolean</h4></section></summary><div class='docblock'>ASN.1 tag</div></details></div></details>","FixedTag","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FixedTag-for-bool\" class=\"impl\"><a href=\"#impl-FixedTag-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FixedTag for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.TAG\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TAG\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">TAG</a>: Tag = Tag::Boolean</h4></section></summary><div class='docblock'>ASN.1 tag</div></details></div></details>","FixedTag","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle-ng/2.5.0/src/subtle_ng/lib.rs.html#63\">Source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle-ng/2.5.0/subtle_ng/struct.Choice.html\" title=\"struct subtle_ng::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle-ng/2.5.0/src/subtle_ng/lib.rs.html#78\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle-ng/2.5.0/subtle_ng/struct.Choice.html\" title=\"struct subtle_ng::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChoice%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#143\">Source</a><a href=\"#impl-From%3CChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/subtle/2.5.0/src/subtle/lib.rs.html#158\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"https://docs.rs/subtle/2.5.0/subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Convert the <code>Choice</code> wrapper into a <code>bool</code>, depending on whether\nthe underlying <code>u8</code> was a <code>0</code> or a <code>1</code>.</p>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>This function exists to avoid having higher-level cryptographic protocol\nimplementations duplicating this pattern.</p>\n<p>The intended use case for this conversion is at the <em>end</em> of a\nhigher-level primitive implementation: for example, in checking a keyed\nMAC, where the verification should happen in constant-time (and thus use\na <code>Choice</code>) but it is safe to return a <code>bool</code> at the end of the\nverification.</p>\n</div></details></div></details>","From<Choice>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCtChoice%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CCtChoice%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;CtChoice&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(choice: CtChoice) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CtChoice>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHourBase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CHourBase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;HourBase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: HourBase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HourBase>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMonthCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CMonthCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MonthCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: MonthCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MonthCaseSensitive>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPeriodCase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CPeriodCase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PeriodCase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: PeriodCase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PeriodCase>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPeriodCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CPeriodCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;PeriodCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: PeriodCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PeriodCaseSensitive>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignBehavior%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CSignBehavior%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SignBehavior&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: SignBehavior) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SignBehavior>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWeekdayCaseSensitive%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CWeekdayCaseSensitive%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WeekdayCaseSensitive&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: WeekdayCaseSensitive) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WeekdayCaseSensitive>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWeekdayOneIndexed%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CWeekdayOneIndexed%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;WeekdayOneIndexed&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: WeekdayOneIndexed) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WeekdayOneIndexed>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CYearBase%3E-for-bool\" class=\"impl\"><a href=\"#impl-From%3CYearBase%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;YearBase&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(modifier: YearBase) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<YearBase>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/str/traits.rs.html#859\">Source</a></span><a href=\"#impl-FromStr-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/str/traits.rs.html#885\">Source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Parse a <code>bool</code> from a string.</p>\n<p>The only accepted values are <code>\"true\"</code> and <code>\"false\"</code>. Any other input\nwill return an error.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>std::str::FromStr;\n\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"true\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(FromStr::from_str(<span class=\"string\">\"false\"</span>), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(&lt;bool <span class=\"kw\">as </span>FromStr&gt;::from_str(<span class=\"string\">\"not even a boolean\"</span>).is_err());</code></pre></div>\n<p>Note, in many cases, the <code>.parse()</code> method on <code>str</code> is more proper.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"true\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">true</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"string\">\"false\"</span>.parse(), <span class=\"prelude-val\">Ok</span>(<span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert!</span>(<span class=\"string\">\"not even a boolean\"</span>.parse::&lt;bool&gt;().is_err());</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/str/traits.rs.html#860\">Source</a><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/str/error/struct.ParseBoolError.html\" title=\"struct core::str::error::ParseBoolError\">ParseBoolError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details></div></details>","FromStr","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeroes-for-bool\" class=\"impl\"><a href=\"#impl-FromZeroes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeroes. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeroes","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromZeros-for-bool\" class=\"impl\"><a href=\"#impl-FromZeros-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl FromZeros for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Overwrites <code>self</code> with zeros. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_zeroed\" class=\"method trait-impl\"><a href=\"#method.new_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new_zeroed</a>() -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an instance of <code>Self</code> from zeroed bytes. <a>Read more</a></div></details></div></details>","FromZeros","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Fundamental-for-bool\" class=\"impl\"><a href=\"#impl-Fundamental-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Fundamental for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bool\" class=\"method trait-impl\"><a href=\"#method.as_bool\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bool</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests <code>self != 0</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_char\" class=\"method trait-impl\"><a href=\"#method.as_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_char</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>&gt;</h4></section></summary><div class='docblock'>Represents <code>self</code> as a Unicode Scalar Value, if possible.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i8\" class=\"method trait-impl\"><a href=\"#method.as_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i8</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class='docblock'>Performs <code>self as i8</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i16\" class=\"method trait-impl\"><a href=\"#method.as_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i16</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Performs <code>self as i16</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i32\" class=\"method trait-impl\"><a href=\"#method.as_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Performs <code>self as i32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i64\" class=\"method trait-impl\"><a href=\"#method.as_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Performs <code>self as i64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_i128\" class=\"method trait-impl\"><a href=\"#method.as_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_i128</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Performs <code>self as i128</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_isize\" class=\"method trait-impl\"><a href=\"#method.as_isize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_isize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class='docblock'>Performs <code>self as isize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u8\" class=\"method trait-impl\"><a href=\"#method.as_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u8</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs <code>self as u8</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u16\" class=\"method trait-impl\"><a href=\"#method.as_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u16</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Performs <code>self as u16</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u32\" class=\"method trait-impl\"><a href=\"#method.as_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Performs <code>self as u32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u64\" class=\"method trait-impl\"><a href=\"#method.as_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Performs <code>self as u64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_u128\" class=\"method trait-impl\"><a href=\"#method.as_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_u128</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Performs <code>self as u128</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_usize\" class=\"method trait-impl\"><a href=\"#method.as_usize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_usize</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Performs <code>self as usize</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f32\" class=\"method trait-impl\"><a href=\"#method.as_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_f32</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Performs <code>self as f32</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f64\" class=\"method trait-impl\"><a href=\"#method.as_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_f64</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Performs <code>self as f64</code>.</div></details></div></details>","Fundamental","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#845\">Source</a></span><a href=\"#impl-Hash-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#847\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBytes-for-bool\" class=\"impl\"><a href=\"#impl-IntoBytes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method trait-impl\"><a href=\"#method.as_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a><div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_bytes\" class=\"method trait-impl\"><a href=\"#method.as_mut_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_mut_bytes</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;mut [u8]\">ⓘ</a><div class=\"where\">where\n    Self: FromBytes,</div></h4></section></summary><div class='docblock'>Gets the bytes of this value mutably. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to\" class=\"method trait-impl\"><a href=\"#method.write_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to</a>(&amp;self, dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_prefix\" class=\"method trait-impl\"><a href=\"#method.write_to_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_prefix</a>(\n    &amp;self,\n    dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the prefix of <code>dst</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_suffix\" class=\"method trait-impl\"><a href=\"#method.write_to_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_to_suffix</a>(\n    &amp;self,\n    dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SizeError&lt;&amp;Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;&gt;<div class=\"where\">where\n    Self: Immutable,</div></h4></section></summary><div class='docblock'>Writes a copy of <code>self</code> to the suffix of <code>dst</code>. <a>Read more</a></div></details></div></details>","IntoBytes","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#impl-IntoDeserializer%3C'de,+E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, E&gt; <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.IntoDeserializer.html\" title=\"trait serde_core::de::IntoDeserializer\">IntoDeserializer</a>&lt;'de, E&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.Error.html\" title=\"trait serde_core::de::Error\">Error</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Deserializer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#associatedtype.Deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.IntoDeserializer.html#associatedtype.Deserializer\" class=\"associatedtype\">Deserializer</a> = <a class=\"struct\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/value/struct.BoolDeserializer.html\" title=\"struct serde_core::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>The type of the deserializer being converted into.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_deserializer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/de/value.rs.html#328\">Source</a><a href=\"#method.into_deserializer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/trait.IntoDeserializer.html#tymethod.into_deserializer\" class=\"fn\">into_deserializer</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/de/value/struct.BoolDeserializer.html\" title=\"struct serde_core::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;</h4></section></summary><div class='docblock'>Convert this value into a deserializer.</div></details></div></details>","IntoDeserializer<'de, E>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-JsonSchema-for-bool\" class=\"impl\"><a href=\"#impl-JsonSchema-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl JsonSchema for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_referenceable\" class=\"method trait-impl\"><a href=\"#method.is_referenceable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_referenceable</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Whether JSON Schemas generated for this type should be re-used where possible using the <code>$ref</code> keyword. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_name\" class=\"method trait-impl\"><a href=\"#method.schema_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>The name of the generated JSON Schema. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.schema_id\" class=\"method trait-impl\"><a href=\"#method.schema_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">schema_id</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a string that uniquely identifies the schema produced by this type. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.json_schema\" class=\"method trait-impl\"><a href=\"#method.json_schema\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">json_schema</a>(_: &amp;mut SchemaGenerator) -&gt; Schema</h4></section></summary><div class='docblock'>Generates a JSON Schema for this type. <a>Read more</a></div></details></div></details>","JsonSchema","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KnownLayout-for-bool\" class=\"impl\"><a href=\"#impl-KnownLayout-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl KnownLayout for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.PointerMetadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PointerMetadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PointerMetadata</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of metadata stored in a pointer to <code>Self</code>. <a>Read more</a></div></details></div></details>","KnownLayout","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MaxEncodedLen-for-bool\" class=\"impl\"><a href=\"#impl-MaxEncodedLen-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl MaxEncodedLen for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_encoded_len\" class=\"method trait-impl\"><a href=\"#method.max_encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_encoded_len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Upper bound, in bytes, of the maximum encoded size of this item.</div></details></div></details>","MaxEncodedLen","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Message-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#23\">Source</a><a href=\"#impl-Message-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html\" title=\"trait prost::message::Message\">Message</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p><code>google.protobuf.BoolValue</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#42\">Source</a><a href=\"#method.encoded_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the encoded length of the message without a length delimiter.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#49\">Source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clears the message, resetting all fields to their default.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#46-48\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode\" class=\"fn\">encode</a>(&amp;self, buf: &amp;mut impl BufMut) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a buffer. <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#61-63\">Source</a><a href=\"#method.encode_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode_to_vec\" class=\"fn\">encode_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#74-76\">Source</a><a href=\"#method.encode_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode_length_delimited\" class=\"fn\">encode_length_delimited</a>(\n    &amp;self,\n    buf: &amp;mut impl BufMut,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.EncodeError.html\" title=\"struct prost::error::EncodeError\">EncodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a buffer. <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode_length_delimited\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_length_delimited_to_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#90-92\">Source</a><a href=\"#method.encode_length_delimited_to_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.encode_length_delimited_to_vec\" class=\"fn\">encode_length_delimited_to_vec</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encodes the message with a length-delimiter to a newly allocated buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#105-107\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.decode\" class=\"fn\">decode</a>(buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer. <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#114-116\">Source</a><a href=\"#method.decode_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.decode_length_delimited\" class=\"fn\">decode_length_delimited</a>(buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from the buffer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#126-128\">Source</a><a href=\"#method.merge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.merge\" class=\"fn\">merge</a>(&amp;mut self, buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes an instance of the message from a buffer, and merges it into <code>self</code>. <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.merge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge_length_delimited\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/message.rs.html#140-142\">Source</a><a href=\"#method.merge_length_delimited\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html#method.merge_length_delimited\" class=\"fn\">merge_length_delimited</a>(&amp;mut self, buf: impl Buf) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://docs.rs/prost/0.14.1/prost/error/struct.DecodeError.html\" title=\"struct prost::error::DecodeError\">DecodeError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Decodes a length-delimited instance of the message from buffer, and\nmerges it into <code>self</code>.</div></details></div></details>","Message","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Name-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#55\">Source</a><a href=\"#impl-Name-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html\" title=\"trait prost::name::Name\">Name</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p><code>google.protobuf.BoolValue</code></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.NAME\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#56\">Source</a><a href=\"#associatedconstant.NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html#associatedconstant.NAME\" class=\"constant\">NAME</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a> = &quot;BoolValue&quot;</h4></section></summary><div class='docblock'>Simple name for this <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>.\nThis name is the same as it appears in the source .proto file, e.g. <code>FooBar</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PACKAGE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#57\">Source</a><a href=\"#associatedconstant.PACKAGE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html#associatedconstant.PACKAGE\" class=\"constant\">PACKAGE</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a> = &quot;google.protobuf&quot;</h4></section></summary><div class='docblock'>Package name this message type is contained in. They are domain-like\nand delimited by <code>.</code>, e.g. <code>google.protobuf</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_url\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/types.rs.html#59\">Source</a><a href=\"#method.type_url\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html#method.type_url\" class=\"fn\">type_url</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Type URL for this <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>, which by default is the full name with a\nleading slash, but may also include a leading domain name, e.g.\n<code>type.googleapis.com/google.profile.Person</code>.\nThis can be used when serializing into the <code>google.protobuf.Any</code> type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.full_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/prost/0.14.1/src/prost/name.rs.html#23\">Source</a><a href=\"#method.full_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/prost/0.14.1/prost/name/trait.Name.html#method.full_name\" class=\"fn\">full_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Fully-qualified unique name for this <a href=\"https://docs.rs/prost/0.14.1/prost/message/trait.Message.html\" title=\"trait prost::message::Message\"><code>Message</code></a>.\nIt’s prefixed with the package name and names of any parent messages,\ne.g. <code>google.rpc.BadRequest.FieldViolation</code>.\nBy default, this is the package name followed by the message name.\nFully-qualified names must be unique within a domain of Type URLs.</div></details></div></details>","Name","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a></span><a href=\"#impl-Not-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ops/bit.rs.html#68\">Source</a><a href=\"#method.not\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#tymethod.not\" class=\"fn\">not</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Performs the unary <code>!</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.Not.html#tymethod.not\">Read more</a></div></details></div></details>","Not","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1958\">Source</a></span><a href=\"#impl-Ord-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1960\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1974\">Source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1979\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1984\">Source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, max: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CBitRef%3C'_,+M,+T,+O%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-PartialEq%3CBitRef%3C'_,+M,+T,+O%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T, O&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;BitRef&lt;'_, M, T, O&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    M: Mutability,\n    T: BitStore,\n    O: BitOrder,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;BitRef&lt;'_, M, T, O&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<BitRef<'_, M, T, O>>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CValue%3E-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.145/src/serde_json/value/partial_eq.rs.html#97-103\">Source</a><a href=\"#impl-PartialEq%3CValue%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.145/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_json/1.0.145/src/serde_json/value/partial_eq.rs.html#97-103\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.145/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Value>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0, const unstable\">1.0.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/143800\" title=\"Tracking issue for const_cmp\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a></span><a href=\"#impl-PartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1836-1838\">Source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1916\">Source</a></span><a href=\"#impl-PartialOrd-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1918\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1922\">Source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1922\">Source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1922\">Source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1922\">Source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtobufValue-for-bool\" class=\"impl\"><a href=\"#impl-ProtobufValue-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtobufValue for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ref</a>(&amp;self) -&gt; ReflectValueRef&lt;'_&gt;</h4></section></summary><div class='docblock'>As ref</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Convert to <code>Any</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_non_zero\" class=\"method trait-impl\"><a href=\"#method.is_non_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_non_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is value non-zero?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref_copy\" class=\"method trait-impl\"><a href=\"#method.as_ref_copy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_ref_copy</a>(&amp;self) -&gt; ReflectValueRef&lt;'static&gt;</h4></section></summary><div class='docblock'>Return <code>ProtobufValueRef</code> if self is <code>Copy</code>. <a>Read more</a></div></details></div></details>","ProtobufValue","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProtobufVarint-for-bool\" class=\"impl\"><a href=\"#impl-ProtobufVarint-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ProtobufVarint for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len_varint\" class=\"method trait-impl\"><a href=\"#method.len_varint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len_varint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Size of self when encoded as varint.</div></details></div></details>","ProtobufVarint","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/ser/impls.rs.html#21\">Source</a><a href=\"#impl-Serialize-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_core/1.0.228/src/serde_core/ser/impls.rs.html#21\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde_core/1.0.228/serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SmartDisplay-for-bool\" class=\"impl\"><a href=\"#impl-SmartDisplay-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl SmartDisplay for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Metadata\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Metadata</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>User-provided metadata type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(&amp;self, _: FormatterOptions) -&gt; Metadata&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Compute any information needed to format the value. This must, at a minimum, determine the\nwidth of the value before any padding is added by the formatter. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter. This is the same as <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" title=\"method core::fmt::Display::fmt\"><code>Display::fmt</code></a>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt_with_metadata\" class=\"method trait-impl\"><a href=\"#method.fmt_with_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">fmt_with_metadata</a>(\n    &amp;self,\n    f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;,\n    _metadata: Metadata&lt;'_, Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Format the value using the given formatter and metadata. The formatted output should have\nthe width indicated by the metadata. This is before any padding is added by the\nformatter. <a>Read more</a></div></details></div></details>","SmartDisplay","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Tagged-for-bool\" class=\"impl\"><a href=\"#impl-Tagged-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Tagged for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.TAG\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.TAG\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">TAG</a>: Tag = Tag::Boolean</h4></section></div></details>","Tagged","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToConstraintField%3CF%3E-for-bool\" class=\"impl\"><a href=\"#impl-ToConstraintField%3CF%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; ToConstraintField&lt;F&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    F: Field,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.to_field_elements\" class=\"method trait-impl\"><a href=\"#method.to_field_elements\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_field_elements</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;F&gt;&gt;</h4></section></div></details>","ToConstraintField<F>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToDer-for-bool\" class=\"impl\"><a href=\"#impl-ToDer-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToDer for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_der_len\" class=\"method trait-impl\"><a href=\"#method.to_der_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_der_len</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, Error&gt;</h4></section></summary><div class='docblock'>Get the length of the object (including the header), when encoded</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_der_header\" class=\"method trait-impl\"><a href=\"#method.write_der_header\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_der_header</a>(\n    &amp;self,\n    writer: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, SerializeError&gt;</h4></section></summary><div class='docblock'>Attempt to write the DER header to this writer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_der_content\" class=\"method trait-impl\"><a href=\"#method.write_der_content\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_der_content</a>(\n    &amp;self,\n    writer: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, SerializeError&gt;</h4></section></summary><div class='docblock'>Attempt to write the DER content (all except header) to this writer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_der_vec\" class=\"method trait-impl\"><a href=\"#method.to_der_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_der_vec</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;, SerializeError&gt;</h4></section></summary><div class='docblock'>Write the DER encoded representation to a newly allocated <code>Vec&lt;u8&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_der_vec_raw\" class=\"method trait-impl\"><a href=\"#method.to_der_vec_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_der_vec_raw</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;, SerializeError&gt;</h4></section></summary><div class='docblock'>Similar to using <code>to_vec</code>, but uses provided values without changes.\nThis can generate an invalid encoding for a DER object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_der\" class=\"method trait-impl\"><a href=\"#method.write_der\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_der</a>(&amp;self, writer: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, SerializeError&gt;</h4></section></summary><div class='docblock'>Attempt to write the DER encoded representation (header and content) into this writer. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_der_raw\" class=\"method trait-impl\"><a href=\"#method.write_der_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write_der_raw</a>(&amp;self, writer: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, SerializeError&gt;</h4></section></summary><div class='docblock'>Similar to using <code>to_der</code>, but uses provided values without changes.\nThis can generate an invalid encoding for a DER object.</div></details></div></details>","ToDer","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToStatic-for-bool\" class=\"impl\"><a href=\"#impl-ToStatic-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToStatic for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Owned\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Owned\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Owned</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.to_static\" class=\"method trait-impl\"><a href=\"#method.to_static\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_static</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as ToStatic&gt;::Owned</h4></section></div></details>","ToStatic","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26Any%3C'a%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26Any%3C'a%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'b Any&lt;'a&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: &amp;'b Any&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'b Any<'a>>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAny%3C'a%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CAny%3C'a%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;Any&lt;'a&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: Any&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Any<'a>>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;AnyRef&lt;'_&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: AnyRef&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<AnyRef<'_>>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"impl\"><a href=\"#impl-TryFrom%3CAnyRef%3C'_%3E%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;AnyRef&lt;'_&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(any: AnyRef&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, Error&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<AnyRef<'_>>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFromBytes-for-bool\" class=\"impl\"><a href=\"#impl-TryFromBytes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl TryFromBytes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_bytes</a>(\n    bytes: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> without\ncopying. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_prefix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_suffix</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;mut Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_bytes_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;Self, ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;Self</code> with a DST length\nequal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_prefix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;Self</code> with\na DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_ref_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_ref_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_ref_from_suffix_with_elems</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;Self), ConvertError&lt;AlignmentError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + Immutable,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;Self</code> with\na DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_bytes_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_bytes_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_bytes_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut Self, ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the given <code>source</code> as a <code>&amp;mut Self</code> with a DST\nlength equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_prefix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_prefix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_prefix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut Self, &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the prefix of the given <code>source</code> as a <code>&amp;mut Self</code>\nwith a DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_mut_from_suffix_with_elems\" class=\"method trait-impl\"><a href=\"#method.try_mut_from_suffix_with_elems\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_mut_from_suffix_with_elems</a>(\n    source: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], &amp;mut Self), ConvertError&lt;AlignmentError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, SizeError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: KnownLayout&lt;PointerMetadata = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; + IntoBytes,</div></h4></section></summary><div class='docblock'>Attempts to interpret the suffix of the given <code>source</code> as a <code>&amp;mut Self</code>\nwith a DST length equal to <code>count</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_bytes\" class=\"method trait-impl\"><a href=\"#method.try_read_from_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_bytes</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read the given <code>source</code> as a <code>Self</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_prefix\" class=\"method trait-impl\"><a href=\"#method.try_read_from_prefix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_prefix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read a <code>Self</code> from the prefix of the given <code>source</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_read_from_suffix\" class=\"method trait-impl\"><a href=\"#method.try_read_from_suffix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_read_from_suffix</a>(\n    source: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self), ConvertError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/enum.Infallible.html\" title=\"enum core::convert::Infallible\">Infallible</a>, SizeError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;, ValidityError&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], Self&gt;&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Attempts to read a <code>Self</code> from the suffix of the given <code>source</code>. <a>Read more</a></div></details></div></details>","TryFromBytes","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ULE-for-bool\" class=\"impl\"><a href=\"#impl-ULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.validate_byte_slice\" class=\"method trait-impl\"><a href=\"#method.validate_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validate_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, ZeroVecError&gt;</h4></section></summary><div class='docblock'>Validates a byte slice, <code>&amp;[u8]</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_byte_slice\" class=\"method trait-impl\"><a href=\"#method.parse_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">parse_byte_slice</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;[Self], ZeroVecError&gt;</h4></section></summary><div class='docblock'>Parses a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_slice_unchecked\" class=\"method trait-impl\"><a href=\"#method.from_byte_slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">from_byte_slice_unchecked</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; &amp;[Self]</h4></section></summary><div class='docblock'>Takes a byte slice, <code>&amp;[u8]</code>, and return it as <code>&amp;[Self]</code> with the same lifetime, assuming\nthat this byte slice has previously been run through [<code>Self::parse_byte_slice()</code>] with\nsuccess. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_byte_slice\" class=\"method trait-impl\"><a href=\"#method.as_byte_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_byte_slice</a>(slice: &amp;[Self]) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Given <code>&amp;[Self]</code>, returns a <code>&amp;[u8]</code> with the same lifetime. <a>Read more</a></div></details></div></details>","ULE","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Valid-for-bool\" class=\"impl\"><a href=\"#impl-Valid-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Valid for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.check\" class=\"method trait-impl\"><a href=\"#method.check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">check</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;</h4></section><section id=\"method.batch_check\" class=\"method trait-impl\"><a href=\"#method.batch_check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_check</a>&lt;'a&gt;(\n    batch: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Self&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, SerializationError&gt;<div class=\"where\">where\n    Self: 'a,</div></h4></section></div></details>","Valid","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Value-for-bool\" class=\"impl\"><a href=\"#impl-Value-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Value for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.record\" class=\"method trait-impl\"><a href=\"#method.record\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">record</a>(&amp;self, key: &amp;Field, visitor: &amp;mut dyn Visit)</h4></section></summary><div class='docblock'>Visits this value with the given <code>Visitor</code>.</div></details></div></details>","Value","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ValueParserFactory-for-bool\" class=\"impl\"><a href=\"#impl-ValueParserFactory-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ValueParserFactory for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parser\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Parser\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Parser</a> = ValueParser</h4></section></summary><div class='docblock'>Generated parser, usually [<code>ValueParser</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_parser\" class=\"method trait-impl\"><a href=\"#method.value_parser\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">value_parser</a>() -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as ValueParserFactory&gt;::Parser</h4></section></summary><div class='docblock'>Create the specified [<code>Self::Parser</code>]</div></details></div></details>","ValueParserFactory","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Yokeable%3C'a%3E-for-bool\" class=\"impl\"><a href=\"#impl-Yokeable%3C'a%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; Yokeable&lt;'a&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This type MUST be <code>Self</code> with the <code>'static</code> replaced with <code>'a</code>, i.e. <code>Self&lt;'a&gt;</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform\" class=\"method trait-impl\"><a href=\"#method.transform\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform</a>(&amp;self) -&gt; &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Yokeable&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a Self&lt;'static&gt;</code> and <code>&amp;'a Self&lt;'a&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_owned\" class=\"method trait-impl\"><a href=\"#method.transform_owned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform_owned</a>(self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Yokeable&lt;'a&gt;&gt;::Output</h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>Self&lt;'static&gt;</code> and <code>Self&lt;'a&gt;</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.make\" class=\"method trait-impl\"><a href=\"#method.make\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">make</a>(this: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Yokeable&lt;'a&gt;&gt;::Output) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method can be used to cast away <code>Self&lt;'a&gt;</code>’s lifetime. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_mut\" class=\"method trait-impl\"><a href=\"#method.transform_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">transform_mut</a>&lt;F&gt;(&amp;'a mut self, f: F)<div class=\"where\">where\n    F: 'static + for&lt;'b&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;'b mut &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a> as Yokeable&lt;'a&gt;&gt;::Output),</div></h4></section></summary><div class='docblock'>This method must cast <code>self</code> between <code>&amp;'a mut Self&lt;'static&gt;</code> and <code>&amp;'a mut Self&lt;'a&gt;</code>,\nand pass it to <code>f</code>. <a>Read more</a></div></details></div></details>","Yokeable<'a>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ZeroFrom%3C'a,+bool%3E-for-bool\" class=\"impl\"><a href=\"#impl-ZeroFrom%3C'a,+bool%3E-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; ZeroFrom&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_from\" class=\"method trait-impl\"><a href=\"#method.zero_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero_from</a>(this: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Clone the other <code>C</code> into a struct that may retain references into <code>C</code>.</div></details></div></details>","ZeroFrom<'a, bool>","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-bool\" class=\"impl\"><a href=\"#impl-Zeroable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Zeroable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.90.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#3\">Source</a><a href=\"#impl-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_some\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.62.0\">1.62.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#33\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#tymethod.then_some\" class=\"fn\">then_some</a>&lt;T&gt;(self, t: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(t)</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>None</code> otherwise.</p>\n<p>Arguments passed to <code>then_some</code> are eagerly evaluated; if you are\npassing the result of a function call, it is recommended to use\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#method.then\" title=\"method bool::then\"><code>then</code></a>, which is lazily evaluated.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.then_some(<span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.then_some(<span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>function_with_side_effects = || { a += <span class=\"number\">1</span>; };\n\n<span class=\"bool-val\">true</span>.then_some(function_with_side_effects());\n<span class=\"bool-val\">false</span>.then_some(function_with_side_effects());\n\n<span class=\"comment\">// `a` is incremented twice because the value passed to `then_some` is\n// evaluated eagerly.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#61\">Source</a></span><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#tymethod.then\" class=\"fn\">then</a>&lt;T, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>Some(f())</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>None</code> otherwise.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.then(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.then(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n\n<span class=\"bool-val\">true</span>.then(|| { a += <span class=\"number\">1</span>; });\n<span class=\"bool-val\">false</span>.then(|| { a += <span class=\"number\">1</span>; });\n\n<span class=\"comment\">// `a` is incremented once because the closure is evaluated lazily by\n// `then`.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#98\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#tymethod.ok_or\" class=\"fn\">ok_or</a>&lt;E&gt;(self, err: E) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, E&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bool_to_result</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>Ok(())</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>Err(err)</code> otherwise.</p>\n<p>Arguments passed to <code>ok_or</code> are eagerly evaluated; if you are\npassing the result of a function call, it is recommended to use\n<a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#method.ok_or_else\" title=\"method bool::ok_or_else\"><code>ok_or_else</code></a>, which is lazily evaluated.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bool_to_result)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.ok_or(<span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(()));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bool_to_result)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>function_with_side_effects = || { a += <span class=\"number\">1</span>; };\n\n<span class=\"macro\">assert!</span>(<span class=\"bool-val\">true</span>.ok_or(function_with_side_effects()).is_ok());\n<span class=\"macro\">assert!</span>(<span class=\"bool-val\">false</span>.ok_or(function_with_side_effects()).is_err());\n\n<span class=\"comment\">// `a` is incremented twice because the value passed to `ok_or` is\n// evaluated eagerly.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok_or_else\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/bool.rs.html#128\">Source</a><h4 class=\"code-header\">pub fn <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html#tymethod.ok_or_else\" class=\"fn\">ok_or_else</a>&lt;E, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; E,</div></h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>bool_to_result</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns <code>Ok(())</code> if the <code>bool</code> is <a href=\"../std/keyword.true.html\"><code>true</code></a>,\nor <code>Err(f())</code> otherwise.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bool_to_result)]\n\n</span><span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">false</span>.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Err</span>(<span class=\"number\">0</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"bool-val\">true</span>.ok_or_else(|| <span class=\"number\">0</span>), <span class=\"prelude-val\">Ok</span>(()));</code></pre></div>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(bool_to_result)]\n\n</span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>a = <span class=\"number\">0</span>;\n\n<span class=\"macro\">assert!</span>(<span class=\"bool-val\">true</span>.ok_or_else(|| { a += <span class=\"number\">1</span>; }).is_ok());\n<span class=\"macro\">assert!</span>(<span class=\"bool-val\">false</span>.ok_or_else(|| { a += <span class=\"number\">1</span>; }).is_err());\n\n<span class=\"comment\">// `a` is incremented once because the closure is evaluated lazily by\n// `ok_or_else`.\n</span><span class=\"macro\">assert_eq!</span>(a, <span class=\"number\">1</span>);</code></pre></div>\n</div></details></div></details>",0,"sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-BitOps-for-bool\" class=\"impl\"><a href=\"#impl-BitOps-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl BitOps for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","BitOps","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-ConstParamTy_-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#1116-1125\">Source</a><a href=\"#impl-ConstParamTy_-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.ConstParamTy_.html\" title=\"trait core::marker::ConstParamTy_\">ConstParamTy_</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","ConstParamTy_","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-Copy-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#483-493\">Source</a></span><a href=\"#impl-Copy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Copy","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-DefaultIsZeroes-for-bool\" class=\"impl\"><a href=\"#impl-DefaultIsZeroes-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DefaultIsZeroes for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","DefaultIsZeroes","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-DerAutoDerive-for-bool\" class=\"impl\"><a href=\"#impl-DerAutoDerive-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DerAutoDerive for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","DerAutoDerive","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-EncodeLike-for-bool\" class=\"impl\"><a href=\"#impl-EncodeLike-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EncodeLike for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","EncodeLike","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-Eq-for-bool\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1847\">Source</a></span><a href=\"#impl-Eq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Eq","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-EqULE-for-bool\" class=\"impl\"><a href=\"#impl-EqULE-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl EqULE for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","EqULE","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-Format-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/serde_with/3.15.1/src/serde_with/formats.rs.html#30-59\">Source</a><a href=\"#impl-Format-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde_with/3.15.1/serde_with/formats/trait.Format.html\" title=\"trait serde_with::formats::Format\">Format</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3><div class=\"docblock\"><p>Serialize into a bool</p>\n</div></section>","Format","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-Immutable-for-bool\" class=\"impl\"><a href=\"#impl-Immutable-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Immutable for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Immutable","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-NoUninit-for-bool\" class=\"impl\"><a href=\"#impl-NoUninit-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl NoUninit for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","NoUninit","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-StructuralPartialEq-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#266-278\">Source</a><a href=\"#impl-StructuralPartialEq-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","StructuralPartialEq","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-Unaligned-for-bool\" class=\"impl\"><a href=\"#impl-Unaligned-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Unaligned for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Unaligned","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-Unaligned-for-bool\" class=\"impl\"><a href=\"#impl-Unaligned-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Unaligned for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","Unaligned","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-UnsizedConstParamTy-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/marker.rs.html#1127-1140\">Source</a><a href=\"#impl-UnsizedConstParamTy-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.UnsizedConstParamTy.html\" title=\"trait core::marker::UnsizedConstParamTy\">UnsizedConstParamTy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","UnsizedConstParamTy","sui_types::quorum_driver_types::IsTransactionExecutedLocally"],["<section id=\"impl-UseCloned-for-bool\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#275-280\">Source</a><a href=\"#impl-UseCloned-for-bool\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.UseCloned.html\" title=\"trait core::clone::UseCloned\">UseCloned</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h3></section>","UseCloned","sui_types::quorum_driver_types::IsTransactionExecutedLocally"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[331199,276619]}